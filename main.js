!function(){"use strict";var e={855:function(e,t,i){e.exports=i.p+"images/spinner_svg.dc4086388e55820fbae1.svg"}},t={};function i(s){var n=t[s];if(void 0!==n)return n.exports;var o=t[s]={exports:{}};return e[s](o,o.exports,i),o.exports}i.p="",function(){class e{constructor(e,t){this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._errorClass=e.errorClass,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._submitButtonSelector=e.submitButtonSelector,this._form=t}_setFormListeners(){this._inputList=Array.from(this._form.querySelectorAll(this._inputSelector)),this._buttonElement=this._form.querySelector(this._submitButtonSelector),this._toggleButtonState(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}_showInputError(e){const t="url"===e.type?"".concat(e.type,"-input"):e.id,i=this._form.querySelector(".".concat(t,"-error"));e.classList.add(this._inputErrorClass),i.textContent=e.validationMessage,i.classList.add(this._errorClass)}_removeInputError(e){const t=this._form.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){e.validity.valid?this._removeInputError(e):this._showInputError(e)}resetValidation(){this._toggleButtonState(),this._inputList.forEach((e=>{this._removeInputError(e)}));const e=this._form.querySelector(".popup-box__submit-button");e.disabled=!0,e.classList.add("popup-box__submit-button_inactive"),this._form.reset()}_toggleButtonState(){this._hasInvalidInput()?(this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1)}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}enableValidation(){this._setFormListeners(),this._form.addEventListener("submit",(e=>e.preventDefault()))}}function t(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:s(),t="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghiklmnopqrstuvwxyz".split("");e||(e=Math.floor(Math.random()*t.length));let i="";for(let s=0;s<e;s++)i+=t[Math.floor(Math.random()*t.length)];return i}function s(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:100,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:150;return Math.floor(Math.random()*(t-e+1))+e}class n{constructor(e,i,s,n,o,r){const{name:a,link:l,_id:c}=e,{likes:u,isOwner:_,likedByCurrUser:p}=o;this._name=a,this._link=l,this._handleImageClick=i,this._openRemoveItemPopup=s,this._cardSelector=r,this._likes=u||[],this._isOwner=_||!1,this._isLikedByCurrUser=p,this._id=c||t(),this._handleLikedToggle=n}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".places__item").cloneNode(!0)}_handleToggleLikedBtn(e){e.stopPropagation(),this._isLikedByCurrUser=!this._isLikedByCurrUser,this._isLikedByCurrUser?this._placeLikeBtn.classList.add("places__like-btn__active"):this._placeLikeBtn.classList.remove("places__like-btn__active"),this._handleLikedToggle(this._isLikedByCurrUser,this,this._id)}onUpdateLikesAmount(e){e&&(this._likes=e),this._placeLikeAmount.textContent=this._likes.length}_handleRemoveItem(e){e.stopPropagation(),this._openRemoveItemPopup(this._id,this._cardItem)}_setEventListeners(){this._cardItem.addEventListener("click",(()=>{this._handleImageClick(this._name,this._link)})),this._placeLikeBtn.addEventListener("click",(e=>{this._handleToggleLikedBtn(e)})),this._cardItem.querySelector(".places__remove-btn").addEventListener("click",(e=>{this._handleRemoveItem(e)}))}generateCard(){return this._cardItem=this._getTemplate(),this._placeImg=this._cardItem.querySelector(".places__img"),this._placeLikeBtn=this._cardItem.querySelector(".places__like-btn"),this._placeLikeAmount=this._cardItem.querySelector(".places__like-counter"),this._placeRemoveBtn=this._cardItem.querySelector(".places__remove-btn"),"Loading..."!==this._name&&"images/spinner_svg.dc4086388e55820fbae1.svg"!==this._link&&this._setEventListeners(),this._isOwner||this._placeRemoveBtn.remove(),this._isLikedByCurrUser&&this._placeLikeBtn.classList.add("places__like-btn__active"),this._placeImg.style.backgroundImage="url(".concat(this._link,")"),this._placeImg.alt="a photo of ".concat(this._name),this._cardItem.querySelector(".places__name").textContent="".concat(this._name),this.onUpdateLikesAmount(),this._cardItem}}function o(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}class r{constructor(e){o(this,"_handleEscClose",(e=>{"Escape"==e.key&&this.close()})),o(this,"_handleContextMenu",(e=>{e.preventDefault()})),this._popupElement=document.querySelector(e)}open(){this._popupElement.classList.add("popup-box_visible"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("popup-box_visible"),document.removeEventListener("keydown",this._handleEscClose)}setEventListeners(){this._popupElement.addEventListener("mousedown",(e=>{(e.target.classList.contains("popup-box_visible")||e.target.classList.contains("popup-box__close-button"))&&this.close()}))}}class a extends r{constructor(e,t,i){var s,n;super(e),n=e=>{e.preventDefault(),this._handleSubmitFrom(this._returnInputValObj(),this._formBtn),this.close()},(s="_handleFormSubmit")in this?Object.defineProperty(this,s,{value:n,enumerable:!0,configurable:!0,writable:!0}):this[s]=n,this._handleSubmitFrom=t,this._formElement=this._popupElement.querySelector(".popup-box__form"),this._formBtn=this._formElement.querySelector(".popup-box__submit-button"),this._btnText=i,this._inputList=[...this._formElement.querySelectorAll(".popup-box__input")]}_returnInputValObj(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}open(){this._formBtn.textContent=this._btnText,super.open()}close(){super.close(),this._formElement.reset()}setEventListeners(){this._formElement.addEventListener("submit",this._handleFormSubmit),super.setEventListeners()}}var l=i(855);const c={},u=document.querySelector(".profile__edit-btn"),_=document.querySelector(".profile__add-btn"),p=document.querySelector(".profile__avatar-cover"),m=document.querySelector('input[name="name_input"]'),h=document.querySelector('input[name="about_me"]');function d(){c["form_change-profile-pic"].resetValidation(),B.open()}function b(){c["form_add-place"].resetValidation(),y.open()}function f(){c["form_profile-edit"].resetValidation(),I.open();const{nameInfo:e,aboutMeInfo:t}=q.getUserInfo();m.value=e,h.value=t}function v(e,t){C.open(e,t)}function g(e,t){x.open(e,t)}function E(e,t,i){e?w.addItemLike(i).then((e=>{t.onUpdateLikesAmount(e.likes)})).catch((e=>console.log("err: "+e))):w.removeItemLike(i).then((e=>{t.onUpdateLikesAmount(e.likes)})).catch((e=>console.log("err: "+e)))}function L(e,i,s){e?(q.setUserInfo({name:"Loading...",about:"Loading...",_id:t()}),q.setPictureProfile(l),k.setNewItemlist([{name:"Loading...",link:l,owner:{_id:t()},likes:[]}])):(document.querySelector(".places__grid-container").innerHTML="",q.setUserInfo({name:s.name,about:s.about,_id:s._id}),q.setPictureProfile(s.avatar),k.setNewItemlist(i),u.addEventListener("click",f),_.addEventListener("click",b),p.addEventListener("click",d))}function S(e,t){k.addItem(function(e,t){return new n(e,v,g,E,t,"#places-item-template").generateCard()}(e,t))}const k=new class{constructor(e){let{renderer:t,containerSelector:i}=e;this._renderer=t,this._container=document.querySelector(i)}renderItems(){this._items.forEach((e=>this._renderer(e)))}addItem(e){this._container.prepend(e)}setNewItemlist(e){this._items=e,this.renderItems()}}({renderer:e=>{const{owner:t,likes:i}=e,s=q.getUserId();S(e,{isOwner:t._id===s,likedByCurrUser:i.find((e=>e._id===s)),likes:i})},containerSelector:".places__grid-container"}),I=new a(".popup-box_type_profile-edit",(function(e,t){let{name_input:i,about_me:s}=e;c["form_add-place"].resetValidation(),t.textContent="Saving...",w.setUserInfo({name:i,about:s}).then((e=>{q.setUserInfo(e)})).catch((e=>console.log("err: "+e)))}),"Save"),y=new a(".popup-box_type_add-item",(function(e,t){let{title_place:i,img_link:s}=e;t.textContent="Saving...",w.addNewCard({name:i,link:s}).then((e=>{S(e,{isOwner:!0,likedByOwner:!1,likes:[]})})).catch((e=>console.log("err: "+e)))}),"Create"),C=new class extends r{constructor(e){let{popupSelector:t,imgSelector:i,imgTitleSelector:s}=e;super(t),this._imgElement=this._popupElement.querySelector(i),this._titleElement=this._popupElement.querySelector(s)}_setPopupImg(){this._titleElement.textContent=this.title,this._imgElement.src=this._link,this._imgElement.alt="a pictrue of ".concat(this.title)}open(e,t){this.title=e,this._link=t,this._setPopupImg(),super.open()}}({popupSelector:".popup-box_type_img",imgSelector:".popup-box__img",imgTitleSelector:".popup-box__img-title"}),x=new class extends r{constructor(e){let{popupSelector:t,handleSubmitRemoveConfirm:i}=e;var s,n;super(t),n=e=>{e.preventDefault(),this._handleSubmitRemoveConfirm(this._id,this._element),this.close()},(s="_handleConfirmSubmit")in this?Object.defineProperty(this,s,{value:n,enumerable:!0,configurable:!0,writable:!0}):this[s]=n,this._handleSubmitRemoveConfirm=i,this._submitBtnElement=this._popupElement.querySelector(".popup-box__submit-button")}open(e,t){super.open(),this._element=t,this._id=e}close(){super.close()}setEventListeners(){this._submitBtnElement.addEventListener("click",this._handleConfirmSubmit),super.setEventListeners()}}({popupSelector:".popup-box_type_confirm",handleSubmitRemoveConfirm:function(e,t){w.onRemoveItem(e).then((()=>{t.remove()})).catch((e=>console.log("err: "+e)))}}),q=new class{constructor(e){let{nameElm:t,jobElm:i,picElm:s}=e;this._nameElm=document.querySelector(t),this._jobElm=document.querySelector(i),this._picElm=document.querySelector(s)}setUserInfo(e){let{name:t,about:i,_id:s}=e;this._nameElm.textContent=t,this._jobElm.textContent=i,this.userId=s}getUserInfo(){return{nameInfo:this._nameElm.textContent,aboutMeInfo:this._jobElm.textContent}}getUserId(){return this.userId}setPictureProfile(e){this._picElm.style.backgroundImage='url("'.concat(e,'")')}}({nameElm:".profile__name",jobElm:".profile__about-me",picElm:".profile__avatar-cover"}),B=new a(".popup-box_type_change-profile-pic",(function(e,t){let{img_link:i}=e;t.textContent="Saving...",w.onUpdateProfilePic({avatar:i}).then((()=>{q.setPictureProfile(i)})).catch((e=>console.log("err: "+e)))}),"Save"),w=new class{constructor(e){let{baseUrl:t,headers:i}=e;this.headers=i,this.baseUrl=t}_onHttpRequest(e,t,i){const s="".concat(this.baseUrl).concat(e);return fetch(s,{method:t,headers:this.headers,body:JSON.stringify(i)}).then((e=>e.ok?e.json():Promise.reject("Error: ".concat(e.status))))}getInitInfo(){return Promise.all([this._getInitialCards(),this._getUserInfo()])}_getUserInfo(){return this._onHttpRequest("users/me","GET")}_getInitialCards(){return this._onHttpRequest("cards","GET")}setUserInfo(e){let{name:t,about:i}=e;return this._onHttpRequest("users/me","PATCH",{name:t,about:i})}addNewCard(e){let{name:t,link:i}=e;return this._onHttpRequest("cards","POST",{name:t,link:i})}onRemoveItem(e){return this._onHttpRequest("cards/".concat(e),"DELETE")}addItemLike(e){return this._onHttpRequest("cards/likes/".concat(e),"PUT")}removeItemLike(e){return this._onHttpRequest("cards/likes/".concat(e),"DELETE")}onUpdateProfilePic(e){let{avatar:t}=e;return this._onHttpRequest("users/me/avatar","PATCH",{avatar:t})}}({baseUrl:"https://around.nomoreparties.co/v1/group-12/",headers:{authorization:"035a3e80-0d3f-421b-b4fa-7f406e49ad5f","Content-Type":"application/json"}});L(!0),w.getInitInfo().then((t=>{let[i,s]=t;var n;L(!1,i,s),n={formSelector:".popup-box__form",inputSelector:".popup-box__input",submitButtonSelector:".popup-box__submit-button",inactiveButtonClass:"popup-box__submit-button_inactive",inputErrorClass:".popup-box__input_type_error",errorClass:".popup-box__input-error_active"},Array.from(document.querySelectorAll(n.formSelector)).forEach((t=>{const i=new e(n,t),s=t.name;c[s]=i,i.enableValidation()})),I.setEventListeners(),y.setEventListeners(),C.setEventListeners(),x.setEventListeners(),B.setEventListeners()})).catch((e=>{console.log(e)}))}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,