!function(){"use strict";var e={855:function(e,t,n){e.exports=n.p+"images/spinner_svg.dc4086388e55820fbae1.svg"}},t={};function n(i){var s=t[i];if(void 0!==s)return s.exports;var o=t[i]={exports:{}};return e[i](o,o.exports,n),o.exports}n.p="",function(){class e{constructor(e,t){this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._errorClass=e.errorClass,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._submitButtonSelector=e.submitButtonSelector,this._form=t}_setFormListeners(){this._inputList=Array.from(this._form.querySelectorAll(this._inputSelector)),this._buttonElement=this._form.querySelector(this._submitButtonSelector),this._toggleButtonState(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}_getElementTxt(e){return"url"===e.type?"".concat(e.type,"-input"):e.id}_showInputError(e){const t=this._form.querySelector(".".concat(this._getElementTxt(e),"-error"));e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_removeInputError(e){const t=this._form.querySelector(".".concat(this._getElementTxt(e),"-error"));e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){e.validity.valid?this._removeInputError(e):this._showInputError(e)}resetValidation(){this._toggleButtonState(),this._inputList.forEach((e=>{this._removeInputError(e)})),this._form.reset(),this._toggleButtonState()}_toggleButtonState(){this._hasInvalidInput()?(this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1)}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}enableValidation(){this._setFormListeners(),this._form.addEventListener("submit",(e=>e.preventDefault()))}}function t(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:i(),t="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghiklmnopqrstuvwxyz".split("");e||(e=Math.floor(Math.random()*t.length));let n="";for(let i=0;i<e;i++)n+=t[Math.floor(Math.random()*t.length)];return n+=Date.now(),n+Date.now()}function i(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:100,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:150;return Math.floor(Math.random()*(t-e+1))+e}function s(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";e.textContent=t}function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}class r{constructor(e,n,i,s,r,l,a){var c=this;let{name:u,link:_,_id:h,owner:m}=e,{likes:d,isOwner:p}=l;o(this,"_renderLikes",(()=>{this._placeLikeAmount.textContent=this._likes.length,this._isLiked?this._placeLikeBtn.classList.add("places__like-btn__active"):this._placeLikeBtn.classList.remove("places__like-btn__active")})),o(this,"onUpdateLikes",(function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1?arguments[1]:void 0;t||c._likes===[]||(c._likes=e),c._isLikedByCurrUser(),c._renderLikes()})),o(this,"_isLikedByCurrUser",(()=>{const e=this._getUserId();this._isLiked=this._likes.find((t=>t._id===e))||!1})),this._name=u,this._link=_,this._handleImageClick=n,this._getUserId=r,this._openRemoveItemPopup=i,this._cardSelector=a,this._likes=d||[],this._isOwner=p||!1,this._id=h||t(),this._handleLikedToggle=s,this._owner=m}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".places__item").cloneNode(!0)}_handleToggleLikedBtn(e){e.stopPropagation(),this._handleLikedToggle(this._isLiked,this,this._id)}_handleRemoveItem(e){e.stopPropagation(),this._openRemoveItemPopup(this._id,this._cardItem)}_setEventListeners(){this._cardItem.addEventListener("click",(()=>{this._handleImageClick(this._name,this._link)})),this._placeLikeBtn.addEventListener("click",(e=>{this._handleToggleLikedBtn(e)})),this._cardItem.querySelector(".places__remove-btn").addEventListener("click",(e=>{this._handleRemoveItem(e)}))}generateCard(){return this._cardItem=this._getTemplate(),this._placeImg=this._cardItem.querySelector(".places__img"),this._placeLikeBtn=this._cardItem.querySelector(".places__like-btn"),this._placeLikeAmount=this._cardItem.querySelector(".places__like-counter"),this._placeRemoveBtn=this._cardItem.querySelector(".places__remove-btn"),this.onUpdateLikes([],!0),"Loading..."!==this._name&&"images/spinner_svg.dc4086388e55820fbae1.svg"!==this._link&&this._setEventListeners(),this._isOwner||this._placeRemoveBtn.remove(),this._placeImg.style.backgroundImage="url(".concat(this._link,")"),this._placeImg.alt="a photo of ".concat(this._name),this._cardItem.querySelector(".places__name").textContent="".concat(this._name),this._cardItem}}function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}class a{constructor(e){l(this,"_handleEscClose",(e=>{"Escape"==e.key&&this.close()})),l(this,"_handleContextMenu",(e=>{e.preventDefault()})),this._popupElement=document.querySelector(e)}open(){this._popupElement.classList.add("popup-box_visible"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("popup-box_visible"),document.removeEventListener("keydown",this._handleEscClose)}setEventListeners(){this._popupElement.addEventListener("mousedown",(e=>{(e.target.classList.contains("popup-box_visible")||e.target.classList.contains("popup-box__close-button"))&&this.close()}))}}class c extends a{constructor(e,t){var n,i;super(e),i=e=>{e.preventDefault(),this._handleSubmitFrom(this._returnInputValObj())},(n="_handleFormSubmit")in this?Object.defineProperty(this,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):this[n]=i,this._handleSubmitFrom=t,this._formElement=this._popupElement.querySelector(".popup-box__form"),this._formBtn=this._formElement.querySelector(".popup-box__submit-button"),this._inputList=[...this._formElement.querySelectorAll(".popup-box__input")],this._modifyElementText=s}handleLoading(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"Saving...",t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this._formBtn.disabled=!t,this._modifyElementText(this._formBtn,e)}_returnInputValObj(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}close(){super.close(),this._formElement.reset()}setEventListeners(){this._formElement.addEventListener("submit",this._handleFormSubmit),super.setEventListeners()}}var u=n(855);const _={},h=document.querySelector(".profile__edit-btn"),m=document.querySelector(".profile__add-btn"),d=document.querySelector(".profile__avatar-cover"),p="Something went wrong, please try again later ",f=document.querySelector('input[name="name_input"]'),g=document.querySelector('input[name="about_me"]');function v(){_["form_change-profile-pic"].resetValidation(),U.open()}function b(){_["form_add-place"].resetValidation(),w.open()}function E(){_["form_profile-edit"].resetValidation(),q.open(),function(e){let{nameInfo:t,aboutMeInfo:n}=e;f.value=t,g.value=n}(B.getUserInfo())}function L(e,t){P.open(e,t)}function S(e,t){T.open(e,t)}function I(){return B.getUserId()}function k(e,t,n){e?R.removeItemLike(n).then((e=>{t.onUpdateLikes(e.likes)})).catch((e=>console.log("Error: ".concat(e)))):R.addItemLike(n).then((e=>{t.onUpdateLikes(e.likes)})).catch((e=>console.log("Error: ".concat(e))))}function y(e,n,i){e?(B.setUserInfo({name:"Loading...",about:"Loading...",_id:t()}),B.setPictureProfile(u),x.setNewItemlist([{name:"Loading...",link:u,owner:{_id:t()},likes:[]}])):(document.querySelector(".places__grid-container").innerHTML="",B.setUserInfo({name:i.name,about:i.about,_id:i._id}),B.setPictureProfile(i.avatar),x.setNewItemlist(n),h.addEventListener("click",E),m.addEventListener("click",b),d.addEventListener("click",v))}function C(e,t){x.addItem(function(e,t){return new r(e,L,S,k,I,t,"#places-item-template").generateCard()}(e,t))}const x=new class{constructor(e){let{renderer:t,containerSelector:n}=e;this._renderer=t,this._container=document.querySelector(n)}renderItems(){this._items.forEach((e=>this._renderer(e)))}addItem(e){this._container.prepend(e)}setNewItemlist(e){this._items=e,this.renderItems()}}({renderer:e=>{const{owner:t,likes:n}=e,i=I();C(e,{isOwner:t._id===i,likes:n})},containerSelector:".places__grid-container"}),q=new c(".popup-box_type_profile-edit",(function(e){let{name_input:t,about_me:n}=e;_["form_add-place"].resetValidation(),q.handleLoading(),R.setUserInfo({name:t,about:n}).then((e=>{q.handleLoading("Profile edited successfully!"),B.setUserInfo(e),setTimeout((()=>{q.close()}),1e3)})).catch((e=>{q.handleLoading(p),console.log("Error: ".concat(e))})).finally((()=>{setTimeout((()=>{q.handleLoading("Save",!0)}),1800)}))}),"Save"),w=new c(".popup-box_type_add-item",(function(e){let{title_place:t,img_link:n}=e;w.handleLoading(),R.addNewCard({name:t,link:n}).then((e=>{w.handleLoading("Place added successfully!"),C(e,{isOwner:!0,likes:[]}),setTimeout((()=>{w.close()}),1e3)})).catch((e=>{w.handleLoading(p),console.log("Error: ".concat(e))})).finally((()=>{setTimeout((()=>{w.handleLoading("Create",!0)}),1800)}))})),P=new class extends a{constructor(e){let{popupSelector:t,imgSelector:n,imgTitleSelector:i}=e;super(t),this._imgElement=this._popupElement.querySelector(n),this._titleElement=this._popupElement.querySelector(i)}_setPopupImg(){this._titleElement.textContent=this.title,this._imgElement.src=this._link,this._imgElement.alt="a pictrue of ".concat(this.title)}open(e,t){this.title=e,this._link=t,this._setPopupImg(),super.open()}}({popupSelector:".popup-box_type_img",imgSelector:".popup-box__img",imgTitleSelector:".popup-box__img-title"}),T=new class extends a{constructor(e){let{popupSelector:t,handleSubmitRemoveConfirm:n}=e;var i,o;super(t),o=e=>{e.preventDefault(),this._handleSubmitRemoveConfirm(this._id,this._element)},(i="_handleConfirmSubmit")in this?Object.defineProperty(this,i,{value:o,enumerable:!0,configurable:!0,writable:!0}):this[i]=o,this._handleSubmitRemoveConfirm=n,this._submitBtnElement=this._popupElement.querySelector(".popup-box__submit-button"),this._modifyElementText=s}open(e,t){super.open(),this._element=t,this._id=e}handleLoading(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"Saving...",t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this._submitBtnElement.disabled=!t,this._modifyElementText(this._submitBtnElement,e)}setEventListeners(){this._submitBtnElement.addEventListener("click",this._handleConfirmSubmit),super.setEventListeners()}}({popupSelector:".popup-box_type_confirm",handleSubmitRemoveConfirm:function(e,t){T.handleLoading(),R.onRemoveItem(e).then((()=>{T.handleLoading("Place removed successfully!"),t.remove(),setTimeout((()=>{T.close()}),1e3)})).catch((e=>{T.handleLoading(p),console.log("Error: ".concat(e))})).finally((()=>{setTimeout((()=>{T.handleLoading("Yes",!0)}),1050)}))}}),B=new class{constructor(e){let{nameElm:t,jobElm:n,picElm:i}=e;this._nameElm=document.querySelector(t),this._jobElm=document.querySelector(n),this._picElm=document.querySelector(i)}setUserInfo(e){let{name:t,about:n,_id:i}=e;this._nameElm.textContent=t,this._jobElm.textContent=n,this._userId=i}getUserInfo(){return{nameInfo:this._nameElm.textContent,aboutMeInfo:this._jobElm.textContent}}getUserId(){return this._userId}setPictureProfile(e){this._picElm.style.backgroundImage='url("'.concat(e,'")')}}({nameElm:".profile__name",jobElm:".profile__about-me",picElm:".profile__avatar-cover"}),U=new c(".popup-box_type_change-profile-pic",(function(e){let{img_link:t}=e;U.handleLoading(),R.onUpdateProfilePic({avatar:t}).then((()=>{U.handleLoading(btn,"Profile Picture modified successfully!"),B.setPictureProfile(t),setTimeout((()=>{U.close()}),1e3)})).catch((e=>{U.handleLoading(p),console.log("Error: ".concat(e))})).finally((()=>{setTimeout((()=>{U.handleLoading("Save",!0)}),1e3)}))})),R=new class{constructor(e){let{baseUrl:t,headers:n}=e;this.headers=n,this.baseUrl=t}_onHttpRequest(e,t,n){const i="".concat(this.baseUrl).concat(e);return fetch(i,{method:t,headers:this.headers,body:JSON.stringify(n)}).then((e=>e.ok?e.json():Promise.reject("Error: ".concat(e.status))))}getInitInfo(){return Promise.all([this._getInitialCards(),this._getUserInfo()])}_getUserInfo(){return this._onHttpRequest("users/me","GET")}_getInitialCards(){return this._onHttpRequest("cards","GET")}setUserInfo(e){let{name:t,about:n}=e;return this._onHttpRequest("users/me","PATCH",{name:t,about:n})}addNewCard(e){let{name:t,link:n}=e;return this._onHttpRequest("cards","POST",{name:t,link:n})}onRemoveItem(e){return this._onHttpRequest("cards/".concat(e),"DELETE")}addItemLike(e){return this._onHttpRequest("cards/likes/".concat(e),"PUT")}removeItemLike(e){return this._onHttpRequest("cards/likes/".concat(e),"DELETE")}onUpdateProfilePic(e){let{avatar:t}=e;return this._onHttpRequest("users/me/avatar","PATCH",{avatar:t})}}({baseUrl:"https://around.nomoreparties.co/v1/group-12/",headers:{authorization:"035a3e80-0d3f-421b-b4fa-7f406e49ad5f","Content-Type":"application/json"}});y(!0),R.getInitInfo().then((t=>{let[n,i]=t;var s;y(!1,n,i),s={formSelector:".popup-box__form",inputSelector:".popup-box__input",submitButtonSelector:".popup-box__submit-button",inactiveButtonClass:"popup-box__submit-button_inactive",inputErrorClass:".popup-box__input_type_error",errorClass:".popup-box__input-error_active"},Array.from(document.querySelectorAll(s.formSelector)).forEach((t=>{const n=new e(s,t),i=t.name;_[i]=n,n.enableValidation()})),q.setEventListeners(),w.setEventListeners(),P.setEventListeners(),T.setEventListeners(),U.setEventListeners()})).catch((e=>console.log("Error: ".concat(e))))}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoia0hBQ0lBLEVBQTJCLEdBRy9CLFNBQVNDLEVBQW9CQyxHQUU1QixJQUFJQyxFQUFlSCxFQUF5QkUsR0FDNUMsUUFBcUJFLElBQWpCRCxFQUNILE9BQU9BLEVBQWFFLFFBR3JCLElBQUlDLEVBQVNOLEVBQXlCRSxHQUFZLENBR2pERyxRQUFTLElBT1YsT0FIQUUsRUFBb0JMLEdBQVVJLEVBQVFBLEVBQU9ELFFBQVNKLEdBRy9DSyxFQUFPRCxRQ3JCZkosRUFBb0JPLEVBQUksRyxXQ0FqQixNQUFNQyxFQUNYQyxZQUFZQyxFQUFVQyxHQUNwQkMsS0FBS0MsY0FBZ0JILEVBQVNJLGFBQzlCRixLQUFLRyxlQUFpQkwsRUFBU00sY0FDL0JKLEtBQUtLLFlBQWNQLEVBQVNRLFdBQzVCTixLQUFLTyxxQkFBdUJULEVBQVNVLG9CQUNyQ1IsS0FBS1MsaUJBQW1CWCxFQUFTWSxnQkFDakNWLEtBQUtXLHNCQUF3QmIsRUFBU2MscUJBQ3RDWixLQUFLYSxNQUFRZCxFQUVmZSxvQkFDRWQsS0FBS2UsV0FBYUMsTUFBTUMsS0FDdEJqQixLQUFLYSxNQUFNSyxpQkFBaUJsQixLQUFLRyxpQkFFbkNILEtBQUttQixlQUFpQm5CLEtBQUthLE1BQU1PLGNBQWNwQixLQUFLVyx1QkFDcERYLEtBQUtxQixxQkFDTHJCLEtBQUtlLFdBQVdPLFNBQVNDLElBQ3ZCQSxFQUFhQyxpQkFBaUIsU0FBUyxLQUNyQ3hCLEtBQUt5QixvQkFBb0JGLEdBQ3pCdkIsS0FBS3FCLDJCQUlYSyxlQUFlSCxHQUtiLE1BSHdCLFFBQXRCQSxFQUFhSSxLQUFiLFVBQ09KLEVBQWFJLEtBRHBCLFVBRUlKLEVBQWFLLEdBR3JCQyxnQkFBZ0JOLEdBQ2QsTUFBTU8sRUFBZTlCLEtBQUthLE1BQU1PLGNBQVgsV0FDZnBCLEtBQUswQixlQUFlSCxHQURMLFdBR3JCQSxFQUFhUSxVQUFVQyxJQUFJaEMsS0FBS1Msa0JBQ2hDcUIsRUFBYUcsWUFBY1YsRUFBYVcsa0JBQ3hDSixFQUFhQyxVQUFVQyxJQUFJaEMsS0FBS0ssYUFFbEM4QixrQkFBa0JaLEdBQ2hCLE1BQU1PLEVBQWU5QixLQUFLYSxNQUFNTyxjQUFYLFdBQ2ZwQixLQUFLMEIsZUFBZUgsR0FETCxXQUdyQkEsRUFBYVEsVUFBVUssT0FBT3BDLEtBQUtTLGtCQUNuQ3FCLEVBQWFHLFlBQWMsR0FDM0JILEVBQWFDLFVBQVVLLE9BQU9wQyxLQUFLSyxhQUdyQ29CLG9CQUFvQkYsR0FDZEEsRUFBYWMsU0FBU0MsTUFDeEJ0QyxLQUFLbUMsa0JBQWtCWixHQUNsQnZCLEtBQUs2QixnQkFBZ0JOLEdBRzlCZ0Isa0JBQ0V2QyxLQUFLcUIscUJBQ0xyQixLQUFLZSxXQUFXTyxTQUFTQyxJQUN2QnZCLEtBQUttQyxrQkFBa0JaLE1BS3pCdkIsS0FBS2EsTUFBTTJCLFFBQ1h4QyxLQUFLcUIscUJBRVBBLHFCQUNNckIsS0FBS3lDLG9CQUNQekMsS0FBS21CLGVBQWVZLFVBQVVDLElBQUloQyxLQUFLTyxzQkFDdkNQLEtBQUttQixlQUFldUIsVUFBVyxJQUUvQjFDLEtBQUttQixlQUFlWSxVQUFVSyxPQUFPcEMsS0FBS08sc0JBQzFDUCxLQUFLbUIsZUFBZXVCLFVBQVcsR0FJbkNELG1CQUNFLE9BQU96QyxLQUFLZSxXQUFXNEIsTUFBTUMsSUFDbkJBLEVBQU1QLFNBQVNDLFFBRzNCTyxtQkFDRTdDLEtBQUtjLG9CQUNMZCxLQUFLYSxNQUFNVyxpQkFBaUIsVUFBV3NCLEdBQU1BLEVBQUVDLG9CQ2pGbkQsU0FBU0MsSUFBeUMsSUFBekJDLEVBQXlCLHVEQUFoQkMsSUFDNUJDLEVBQ0YsZ0VBQWdFQyxNQUFNLElBRW5FSCxJQUNIQSxFQUFTSSxLQUFLQyxNQUFNRCxLQUFLRSxTQUFXSixFQUFNRixTQUc1QyxJQUFJTyxFQUFNLEdBQ1YsSUFBSyxJQUFJQyxFQUFJLEVBQUdBLEVBQUlSLEVBQVFRLElBQzFCRCxHQUFPTCxFQUFNRSxLQUFLQyxNQUFNRCxLQUFLRSxTQUFXSixFQUFNRixTQUdoRCxPQURBTyxHQUFPRSxLQUFLQyxNQUNMSCxFQUFNRSxLQUFLQyxNQUVwQixTQUFTVCxJQUFtQyxJQUF0QlUsRUFBc0IsdURBQWhCLElBQUtDLEVBQVcsdURBQUwsSUFDckMsT0FBT1IsS0FBS0MsTUFBTUQsS0FBS0UsVUFBWU0sRUFBTUQsRUFBTSxJQUFNQSxFQUV2RCxTQUFTRSxFQUFrQkMsR0FBNEIsSUFBbkJDLEVBQW1CLHVEQUFiLFlBQ3hDRCxFQUFROUIsWUFBYytCLEUsd0hDbEJqQixNQUFNQyxFQUNYcEUsWUFBWSxFQUVWcUUsRUFDQUMsRUFDQUMsRUFDQUMsRUFMUyxFQU9UQyxHQUNBLGVBUEEsS0FBRUMsRUFBRixLQUFRQyxFQUFSLElBQWNDLEVBQWQsTUFBbUJDLEdBT25CLEdBRkVDLE1BQUFBLEVBQUYsUUFBU0MsR0FFVCx5QkE4Q2EsS0FDYjVFLEtBQUs2RSxpQkFBaUI1QyxZQUFjakMsS0FBSzhFLE9BQU83QixPQUNoRGpELEtBQUsrRSxTQUNEL0UsS0FBS2dGLGNBQWNqRCxVQUFVQyxJQUFJLDRCQUNqQ2hDLEtBQUtnRixjQUFjakQsVUFBVUssT0FBTywrQkFsRHhDLHdCQW9EYyxXQUF3QixJQUF2QnVDLEVBQXVCLHVEQUFmLEdBQUlNLEVBQVcsdUNBQ2pDQSxHQUFVLEVBQUtILFNBQVcsS0FBSSxFQUFLQSxPQUFTSCxHQUNqRCxFQUFLTyxxQkFDTCxFQUFLQyxrQkF2REwsNkJBeURtQixLQUNuQixNQUFNdkQsRUFBSzVCLEtBQUtvRixhQUNoQnBGLEtBQUsrRSxTQUFXL0UsS0FBSzhFLE9BQU9PLE1BQU1DLEdBQVNBLEVBQUtiLE1BQVE3QyxNQUFPLEtBMUQvRDVCLEtBQUt1RixNQUFRaEIsRUFDYnZFLEtBQUt3RixNQUFRaEIsRUFDYnhFLEtBQUt5RixrQkFBb0J2QixFQUN6QmxFLEtBQUtvRixXQUFhZixFQUNsQnJFLEtBQUswRixxQkFBdUJ2QixFQUM1Qm5FLEtBQUsyRixjQUFnQnJCLEVBQ3JCdEUsS0FBSzhFLE9BQVNILEdBQVMsR0FDdkIzRSxLQUFLNEYsU0FBV2hCLElBQVcsRUFDM0I1RSxLQUFLeUUsSUFBTUEsR0FBT3pCLElBQ2xCaEQsS0FBSzZGLG1CQUFxQnpCLEVBQzFCcEUsS0FBSzhGLE9BQVNwQixFQUVoQnFCLGVBUUUsT0FQMEJDLFNBQVM1RSxjQUNqQ3BCLEtBQUsyRixlQUNMTSxRQUVDN0UsY0FBYyxpQkFDZDhFLFdBQVUsR0FJZkMsc0JBQXNCckQsR0FDcEJBLEVBQUVzRCxrQkFDRnBHLEtBQUs2RixtQkFBbUI3RixLQUFLK0UsU0FBVS9FLEtBQU1BLEtBQUt5RSxLQUdwRDRCLGtCQUFrQnZELEdBQ2hCQSxFQUFFc0Qsa0JBQ0ZwRyxLQUFLMEYscUJBQXFCMUYsS0FBS3lFLElBQUt6RSxLQUFLc0csV0FHM0NDLHFCQUNFdkcsS0FBS3NHLFVBQVU5RSxpQkFBaUIsU0FBUyxLQUN2Q3hCLEtBQUt5RixrQkFBa0J6RixLQUFLdUYsTUFBT3ZGLEtBQUt3RixVQUUxQ3hGLEtBQUtnRixjQUFjeEQsaUJBQWlCLFNBQVVzQixJQUM1QzlDLEtBQUttRyxzQkFBc0JyRCxNQUU3QjlDLEtBQUtzRyxVQUNGbEYsY0FBYyx1QkFDZEksaUJBQWlCLFNBQVVzQixJQUMxQjlDLEtBQUtxRyxrQkFBa0J2RCxNQWtCN0IwRCxlQXNCRSxPQXJCQXhHLEtBQUtzRyxVQUFZdEcsS0FBSytGLGVBQ3RCL0YsS0FBS3lHLFVBQVl6RyxLQUFLc0csVUFBVWxGLGNBQWMsZ0JBQzlDcEIsS0FBS2dGLGNBQWdCaEYsS0FBS3NHLFVBQVVsRixjQUFjLHFCQUNsRHBCLEtBQUs2RSxpQkFBbUI3RSxLQUFLc0csVUFBVWxGLGNBQ3JDLHlCQUVGcEIsS0FBSzBHLGdCQUFrQjFHLEtBQUtzRyxVQUFVbEYsY0FBYyx1QkFDcERwQixLQUFLMkcsY0FBYyxJQUFJLEdBRU4sZUFBZjNHLEtBQUt1RixPQUNVLGdEQUFmdkYsS0FBS3dGLE9BRUx4RixLQUFLdUcscUJBRUZ2RyxLQUFLNEYsVUFDUjVGLEtBQUswRyxnQkFBZ0J0RSxTQUd2QnBDLEtBQUt5RyxVQUFVRyxNQUFNQyxnQkFBckIsY0FBOEM3RyxLQUFLd0YsTUFBbkQsS0FDQXhGLEtBQUt5RyxVQUFVSyxJQUFmLHFCQUFtQzlHLEtBQUt1RixPQUN4Q3ZGLEtBQUtzRyxVQUFVbEYsY0FBYyxpQkFBaUJhLFlBQTlDLFVBQStEakMsS0FBS3VGLE9BQzdEdkYsS0FBS3NHLFcsd0hDN0ZELE1BQU1TLEVBQ25CbEgsWUFBWW1ILEdBQWUsMEJBSVJsRSxJQUNKLFVBQVRBLEVBQUVtRSxLQUNKakgsS0FBS2tILFdBTmtCLDZCQVNMcEUsSUFDcEJBLEVBQUVDLG9CQVRGL0MsS0FBS21ILGNBQWdCbkIsU0FBUzVFLGNBQWM0RixHQVc5Q0ksT0FDRXBILEtBQUttSCxjQUFjcEYsVUFBVUMsSUFBSSxxQkFDakNnRSxTQUFTeEUsaUJBQWlCLFVBQVd4QixLQUFLcUgsaUJBRzVDSCxRQUNFbEgsS0FBS21ILGNBQWNwRixVQUFVSyxPQUFPLHFCQUNwQzRELFNBQVNzQixvQkFBb0IsVUFBV3RILEtBQUtxSCxpQkFHL0NFLG9CQUNFdkgsS0FBS21ILGNBQWMzRixpQkFBaUIsYUFBY3NCLEtBRTlDQSxFQUFFMEUsT0FBT3pGLFVBQVUwRixTQUFTLHNCQUM1QjNFLEVBQUUwRSxPQUFPekYsVUFBVTBGLFNBQVMsNkJBRTVCekgsS0FBS2tILFlDMUJFLE1BQU1RLFVBQXNCWCxFQUN6Q2xILFlBQVltSCxFQUFlVyxHLFFBQ3pCQyxNQUFNWixHLEVBYWFsRSxJQUNuQkEsRUFBRUMsaUJBQ0YvQyxLQUFLNkgsa0JBQWtCN0gsS0FBSzhILHdCLEVBaEJlLDRCLHNCQUFBLEssdURBQUEsSyxLQUUzQzlILEtBQUs2SCxrQkFBb0JGLEVBQ3pCM0gsS0FBSytILGFBQWUvSCxLQUFLbUgsY0FBYy9GLGNBQWMsb0JBQ3JEcEIsS0FBS2dJLFNBQVdoSSxLQUFLK0gsYUFBYTNHLGNBQ2hDLDZCQUdGcEIsS0FBS2UsV0FBYSxJQUNiZixLQUFLK0gsYUFBYTdHLGlCQUFpQixzQkFFeENsQixLQUFLaUksbUJBQXFCbkUsRUFPNUJvRSxnQkFBaUQsSUFBbkNsRSxFQUFtQyx1REFBN0IsWUFBYW1FLEVBQWdCLHdEQUMvQ25JLEtBQUtnSSxTQUFTdEYsVUFBWXlGLEVBQzFCbkksS0FBS2lJLG1CQUFtQmpJLEtBQUtnSSxTQUFVaEUsR0FHekM4RCxxQkFDRSxNQUFNTSxFQUFjLEdBSXBCLE9BSEFwSSxLQUFLZSxXQUFXTyxTQUFTK0csSUFDdkJELEVBQVlDLEVBQUs5RCxNQUFROEQsRUFBS0MsU0FFekJGLEVBR1RsQixRQUNFVSxNQUFNVixRQUNObEgsS0FBSytILGFBQWF2RixRQUVwQitFLG9CQUNFdkgsS0FBSytILGFBQWF2RyxpQkFBaUIsU0FBVXhCLEtBQUt1SSxtQkFDbERYLE1BQU1MLHFCLGFDekNWLE1BOEJNaUIsRUFBaUIsR0FFakJDLEVBQXVCekMsU0FBUzVFLGNBQWMsc0JBQzlDc0gsRUFBd0IxQyxTQUFTNUUsY0FBYyxxQkFDL0N1SCxFQUE0QjNDLFNBQVM1RSxjQUN6QywwQkFHSXdILEVBQVMsZ0RDakJUQyxFQUFZN0MsU0FBUzVFLGNBQWMsNEJBQ25DMEgsRUFBZTlDLFNBQVM1RSxjQUFjLDBCQXNDNUMsU0FBUzJILElBQ1BQLEVBQWUsMkJBQTJCakcsa0JBQzFDeUcsRUFBc0I1QixPQUV4QixTQUFTNkIsSUFDUFQsRUFBZSxrQkFBa0JqRyxrQkFDakMyRyxFQUFTOUIsT0FFWCxTQUFTK0IsSUFDUFgsRUFBZSxxQkFBcUJqRyxrQkFDcEM2RyxFQUFVaEMsT0FkWixZQUFvRCxJQUEzQixTQUFFaUMsRUFBRixZQUFZQyxHQUFlLEVBQ2xEVCxFQUFVUCxNQUFRZSxFQUNsQlAsRUFBYVIsTUFBUWdCLEVBYXJCQyxDQUFnQkMsRUFBWUMsZUFFOUIsU0FBU0MsRUFBYUMsRUFBT25GLEdBQzNCb0YsRUFBWXhDLEtBQUt1QyxFQUFPbkYsR0FFMUIsU0FBU0wsRUFBb0J2QyxFQUFJaUksR0FDL0JDLEVBQW1CMUMsS0FBS3hGLEVBQUlpSSxHQUU5QixTQUFTeEYsSUFDUCxPQUFPbUYsRUFBWW5GLFlBMkdyQixTQUFTRCxFQUFrQjJGLEVBQVMxQixFQUFNekcsR0FDbkNtSSxFQVFIQyxFQUNHQyxlQUFlckksR0FDZnNJLE1BQU1DLElBQ0w5QixFQUFLMUIsY0FBY3dELEVBQUl4RixVQUV4QnlGLE9BQU9DLEdBQVFDLFFBQVFDLElBQVIsaUJBQXNCRixNQVp4Q0wsRUFDR1EsWUFBWTVJLEdBQ1pzSSxNQUFNQyxJQUNMOUIsRUFBSzFCLGNBQWN3RCxFQUFJeEYsVUFFeEJ5RixPQUFPQyxHQUFRQyxRQUFRQyxJQUFSLGlCQUFzQkYsTUFVNUMsU0FBU0ksRUFBZUMsRUFBUUMsRUFBY0MsR0FDeENGLEdBQ0ZsQixFQUFZcUIsWUFBWSxDQUN0QnRHLEtBQU0sYUFDTnVHLE1BQU8sYUFDUHJHLElBQUt6QixNQUVQd0csRUFBWXVCLGtCQUFrQkMsR0FDOUJDLEVBQVVDLGVBQWUsQ0FDdkIsQ0FDRTNHLEtBQU0sYUFDTkMsS0FBTXdHLEVBQ050RyxNQUFPLENBQUVELElBQUt6QixLQUNkMkIsTUFBTyxRQUlYcUIsU0FBUzVFLGNBQWMsMkJBQTJCK0osVUFBWSxHQUM5RDNCLEVBQVlxQixZQUFZLENBQ3RCdEcsS0FBTXFHLEVBQVNyRyxLQUNmdUcsTUFBT0YsRUFBU0UsTUFDaEJyRyxJQUFLbUcsRUFBU25HLE1BRWhCK0UsRUFBWXVCLGtCQUFrQkgsRUFBU1EsUUFDdkNILEVBQVVDLGVBQWVQLEdBQ3pCbEMsRUFBcUJqSCxpQkFBaUIsUUFBUzJILEdBQy9DVCxFQUFzQmxILGlCQUFpQixRQUFTeUgsR0FDaEROLEVBQTBCbkgsaUJBQWlCLFFBQVN1SCxJQTZCeEQsU0FBU3NDLEVBQVdoRCxFQUFNaUQsR0FDeEJMLEVBQVVNLFFBdE9aLFNBQXlCbEQsRUFBTWlELEdBVTdCLE9BVGdCLElBQUlySCxFQUNsQm9FLEVBQ0FxQixFQUNBdkYsRUFDQUMsRUFDQUMsRUFDQWlILEVBQ0EseUJBRWE5RSxlQTROR2dGLENBQWdCbkQsRUFBTWlELElBRzFDLE1BQU1MLEVBQVksSUN4UUgsTUFDYnBMLFlBQVksR0FBaUMsSUFBakMsU0FBRTRMLEVBQUYsa0JBQVlDLEdBQXFCLEVBQzNDMUwsS0FBSzJMLFVBQVlGLEVBQ2pCekwsS0FBSzRMLFdBQWE1RixTQUFTNUUsY0FBY3NLLEdBRzNDRyxjQUNFN0wsS0FBSzhMLE9BQU94SyxTQUFTK0csR0FBU3JJLEtBQUsyTCxVQUFVdEQsS0FHL0NrRCxRQUFRUSxHQUNOL0wsS0FBSzRMLFdBQVdJLFFBQVFELEdBRTFCYixlQUFlZSxHQUNiak0sS0FBSzhMLE9BQVNHLEVBQ2RqTSxLQUFLNkwsZ0JEeVBxQixDQUM1QkosU0FBV1MsSUFDVCxNQUFNLE1BQUV4SCxFQUFGLE1BQVNDLEdBQVV1SCxFQUNuQnRLLEVBQUt5QyxJQUtYZ0gsRUFBV2EsRUFKTSxDQUNmdEgsUUFBU0YsRUFBTUQsTUFBUTdDLEVBQ3ZCK0MsTUFBQUEsS0FJSitHLGtCQUFtQiw0QkFFZnRDLEVBQVksSUFBSTFCLEVBQ3BCLGdDQTlJRixZQUEyRCxJQUExQixXQUFFeUUsRUFBRixTQUFjQyxHQUFZLEVBQ3pENUQsRUFBZSxrQkFBa0JqRyxrQkFDakM2RyxFQUFVbEIsZ0JBRVY4QixFQUNHYSxZQUFZLENBQUV0RyxLQUFNNEgsRUFBWXJCLE1BQU9zQixJQUN2Q2xDLE1BQU1DLElBQ0xmLEVBQVVsQixjQUFjLGdDQUN4QnNCLEVBQVlxQixZQUFZVixHQUN4QmtDLFlBQVcsS0FDVGpELEVBQVVsQyxVQUNULFFBRUprRCxPQUFPQyxJQUNOakIsRUFBVWxCLGNBQWNVLEdBQ3hCMEIsUUFBUUMsSUFBUixpQkFBc0JGLE9BRXZCaUMsU0FBUSxLQUNQRCxZQUFXLEtBQ1RqRCxFQUFVbEIsY0FqSUwsUUFpSTRDLEtBQ2hELFdBNEhQLFFBR0lnQixFQUFXLElBQUl4QixFQUNuQiw0QkF4TUYsWUFBb0UsSUFBckM2RSxZQUFhaEksRUFBTWlJLFNBQVVoSSxHQUFRLEVBQ2xFMEUsRUFBU2hCLGdCQUNUOEIsRUFDR3lDLFdBQVcsQ0FDVmxJLEtBQUFBLEVBQ0FDLEtBQUFBLElBRUQwRixNQUFNQyxJQUNMakIsRUFBU2hCLGNBQWMsNkJBS3ZCbUQsRUFBV2xCLEVBSk0sQ0FDZnZGLFNBQVMsRUFDVEQsTUFBTyxLQUdUMEgsWUFBVyxLQUNUbkQsRUFBU2hDLFVBQ1IsUUFFSmtELE9BQU9DLElBQ05uQixFQUFTaEIsY0FBY1UsR0FDdkIwQixRQUFRQyxJQUFSLGlCQUFzQkYsT0FFdkJpQyxTQUFRLEtBQ1BELFlBQVcsS0FDVG5ELEVBQVNoQixjQWpGTCxVQWlGMkMsS0FDOUMsWUFrTEgwQixFQUFjLElFNVJMLGNBQTZCN0MsRUFDMUNsSCxZQUFZLEdBQWtELElBQWxELGNBQUVtSCxFQUFGLFlBQWlCMEYsRUFBakIsaUJBQThCQyxHQUFvQixFQUM1RC9FLE1BQU1aLEdBQ05oSCxLQUFLNE0sWUFBYzVNLEtBQUttSCxjQUFjL0YsY0FBY3NMLEdBQ3BEMU0sS0FBSzZNLGNBQWdCN00sS0FBS21ILGNBQWMvRixjQUFjdUwsR0FHeERHLGVBQ0U5TSxLQUFLNk0sY0FBYzVLLFlBQWNqQyxLQUFLMkosTUFDdEMzSixLQUFLNE0sWUFBWUcsSUFBTS9NLEtBQUt3RixNQUM1QnhGLEtBQUs0TSxZQUFZOUYsSUFBakIsdUJBQXVDOUcsS0FBSzJKLE9BRzlDdkMsS0FBS3VDLEVBQU9uRixHQUNWeEUsS0FBSzJKLE1BQVFBLEVBQ2IzSixLQUFLd0YsTUFBUWhCLEVBQ2J4RSxLQUFLOE0sZUFDTGxGLE1BQU1SLFNGMlE2QixDQUNyQ0osY0FBZSxzQkFDZjBGLFlBQWEsa0JBQ2JDLGlCQUFrQiwwQkFHZDdDLEVBQXFCLElHbFNaLGNBQTJCL0MsRUFDeENsSCxZQUFZLEdBQThDLElBQTlDLGNBQUVtSCxFQUFGLDBCQUFpQmdHLEdBQTZCLEUsUUFDeERwRixNQUFNWixHLEVBaUJnQmxFLElBQ3RCQSxFQUFFQyxpQkFDRi9DLEtBQUtpTiwyQkFBMkJqTixLQUFLeUUsSUFBS3pFLEtBQUtrTixZLEVBcEJTLCtCLHNCQUFBLEssdURBQUEsSyxLQUV4RGxOLEtBQUtpTiwyQkFBNkJELEVBQ2xDaE4sS0FBS21OLGtCQUFvQm5OLEtBQUttSCxjQUFjL0YsY0FDMUMsNkJBRUZwQixLQUFLaUksbUJBQXFCbkUsRUFFNUJzRCxLQUFLeEYsRUFBSW1DLEdBQ1A2RCxNQUFNUixPQUNOcEgsS0FBS2tOLFNBQVduSixFQUNoQi9ELEtBQUt5RSxJQUFNN0MsRUFFYnNHLGdCQUFpRCxJQUFuQ2xFLEVBQW1DLHVEQUE3QixZQUFhbUUsRUFBZ0Isd0RBQy9DbkksS0FBS21OLGtCQUFrQnpLLFVBQVl5RixFQUNuQ25JLEtBQUtpSSxtQkFBbUJqSSxLQUFLbU4sa0JBQW1CbkosR0FRbER1RCxvQkFDRXZILEtBQUttTixrQkFBa0IzTCxpQkFBaUIsUUFBU3hCLEtBQUtvTixzQkFDdER4RixNQUFNTCxzQkh3UWtDLENBQzFDUCxjQUFlLDBCQUNmZ0csMEJBdkxGLFNBQW1DcEwsRUFBSXlHLEdBQ3JDeUIsRUFBbUI1QixnQkFDbkI4QixFQUNHcUQsYUFBYXpMLEdBQ2JzSSxNQUFLLEtBQ0pKLEVBQW1CNUIsY0FBYywrQkFDakNHLEVBQUtqRyxTQUNMaUssWUFBVyxLQUNUdkMsRUFBbUI1QyxVQUNsQixRQUVKa0QsT0FBT0MsSUFDTlAsRUFBbUI1QixjQUFjVSxHQUNqQzBCLFFBQVFDLElBQVIsaUJBQXNCRixPQUV2QmlDLFNBQVEsS0FDUEQsWUFBVyxLQUNUdkMsRUFBbUI1QixjQXJHTCxPQXVHWixLQUVELFlBb0tIc0IsRUFBYyxJSXhTTCxNQUNiM0osWUFBWSxHQUE2QixJQUE3QixRQUFFeU4sRUFBRixPQUFXQyxFQUFYLE9BQW1CQyxHQUFVLEVBQ3ZDeE4sS0FBS3lOLFNBQVd6SCxTQUFTNUUsY0FBY2tNLEdBQ3ZDdE4sS0FBSzBOLFFBQVUxSCxTQUFTNUUsY0FBY21NLEdBQ3RDdk4sS0FBSzJOLFFBQVUzSCxTQUFTNUUsY0FBY29NLEdBR3hDM0MsWUFBWSxHQUFzQixJQUF0QixLQUFFdEcsRUFBRixNQUFRdUcsRUFBUixJQUFlckcsR0FBTyxFQUNoQ3pFLEtBQUt5TixTQUFTeEwsWUFBY3NDLEVBQzVCdkUsS0FBSzBOLFFBQVF6TCxZQUFjNkksRUFDM0I5SyxLQUFLNE4sUUFBVW5KLEVBRWpCZ0YsY0FDRSxNQUFPLENBQ0xKLFNBQVVySixLQUFLeU4sU0FBU3hMLFlBQ3hCcUgsWUFBYXRKLEtBQUswTixRQUFRekwsYUFHOUJvQyxZQUNFLE9BQU9yRSxLQUFLNE4sUUFFZDdDLGtCQUFrQjhDLEdBQ2hCN04sS0FBSzJOLFFBQVEvRyxNQUFNQyxnQkFBbkIsZUFBNkNnSCxFQUE3QyxRSmtSNkIsQ0FDL0JQLFFBQVMsaUJBQ1RDLE9BQVEscUJBQ1JDLE9BQVEsMkJBRUp4RSxFQUF3QixJQUFJdEIsRUFDaEMsc0NBaEpGLFlBQThDLElBQWQsU0FBRThFLEdBQVksRUFDNUN4RCxFQUFzQmQsZ0JBRXRCOEIsRUFDRzhELG1CQUFtQixDQUFFMUMsT0FBUW9CLElBQzdCdEMsTUFBSyxLQUNKbEIsRUFBc0JkLGNBQ3BCNkYsSUFDQSwwQ0FFRnZFLEVBQVl1QixrQkFBa0J5QixHQUM5QkgsWUFBVyxLQUNUckQsRUFBc0I5QixVQUNyQixRQUVKa0QsT0FBT0MsSUFDTnJCLEVBQXNCZCxjQUFjVSxHQUNwQzBCLFFBQVFDLElBQVIsaUJBQXNCRixPQUd2QmlDLFNBQVEsS0FDUEQsWUFBVyxLQUNUckQsRUFBc0JkLGNBeEpMLFFBMEpmLEtBRUQsV0F5SEg4QixFQUFNLElLalRHLE1BQ2JuSyxZQUFZLEdBQXNCLElBQXRCLFFBQUVtTyxFQUFGLFFBQVdDLEdBQVcsRUFDaENqTyxLQUFLaU8sUUFBVUEsRUFDZmpPLEtBQUtnTyxRQUFVQSxFQUVqQkUsZUFBZUMsRUFBS0MsRUFBUWxDLEdBQzFCLE1BQU1tQyxFQUFVLEdBQUgsT0FBTXJPLEtBQUtnTyxTQUFYLE9BQXFCRyxHQUNsQyxPQUFPRyxNQUFNRCxFQUFTLENBQ3BCRCxPQUFBQSxFQUNBSCxRQUFTak8sS0FBS2lPLFFBQ2RNLEtBQU1DLEtBQUtDLFVBQVV2QyxLQUNwQmhDLE1BQU1DLEdBQ0hBLEVBQUl1RSxHQUNDdkUsRUFBSXdFLE9BRUpDLFFBQVFDLE9BQVIsaUJBQXlCMUUsRUFBSU8sV0FJMUNvRSxjQUNFLE9BQU9GLFFBQVFHLElBQUksQ0FBQy9PLEtBQUtnUCxtQkFBb0JoUCxLQUFLaVAsaUJBRXBEQSxlQUNFLE9BQU9qUCxLQUFLa08sZUFBZSxXQUFZLE9BRXpDYyxtQkFDRSxPQUFPaFAsS0FBS2tPLGVBQWUsUUFBUyxPQUd0Q3JELFlBQVksR0FBaUIsSUFBakIsS0FBRXRHLEVBQUYsTUFBUXVHLEdBQVMsRUFDM0IsT0FBTzlLLEtBQUtrTyxlQUFlLFdBQVksUUFBUyxDQUFFM0osS0FBQUEsRUFBTXVHLE1BQUFBLElBRTFEMkIsV0FBVyxHQUFnQixJQUFoQixLQUFFbEksRUFBRixLQUFRQyxHQUFRLEVBQ3pCLE9BQU94RSxLQUFLa08sZUFBZSxRQUFTLE9BQVEsQ0FBRTNKLEtBQUFBLEVBQU1DLEtBQUFBLElBRXRENkksYUFBYXpMLEdBQ1gsT0FBTzVCLEtBQUtrTyxlQUFMLGdCQUE2QnRNLEdBQU0sVUFFNUM0SSxZQUFZNUksR0FDVixPQUFPNUIsS0FBS2tPLGVBQUwsc0JBQW1DdE0sR0FBTSxPQUVsRHFJLGVBQWVySSxHQUNiLE9BQU81QixLQUFLa08sZUFBTCxzQkFBbUN0TSxHQUFNLFVBRWxEa00sbUJBQW1CLEdBQVksSUFBWixPQUFFMUMsR0FBVSxFQUM3QixPQUFPcEwsS0FBS2tPLGVBQWUsa0JBQW1CLFFBQVMsQ0FBRTlDLE9BQUFBLE1DN0MxQyxDQUNqQjRDLFFBQVMsK0NBQ1RDLFFBQVMsQ0FDUGlCLGNBQWUsdUNBQ2YsZUFBZ0Isc0JOdU9sQnpFLEdBQWUsR0FDZlQsRUFDRzhFLGNBQ0E1RSxNQUFLLElBQThCLElBQTVCUyxFQUFjQyxHQUFjLEVBbE14QyxJQUEwQjlLLEVBbU1wQjJLLEdBQWUsRUFBT0UsRUFBY0MsR0FuTWhCOUssRUFvTUgsQ0FDZkksYUFBYyxtQkFDZEUsY0FBZSxvQkFDZlEscUJBQXNCLDRCQUN0Qkosb0JBQXFCLG9DQUNyQkUsZ0JBQWlCLCtCQUNqQkosV0FBWSxrQ0F6TUFVLE1BQU1DLEtBQ3RCK0UsU0FBUzlFLGlCQUFpQnBCLEVBQVNJLGVBRzNCb0IsU0FBU3ZCLElBQ2pCLE1BQU1vUCxFQUFZLElBQUl2UCxFQUFjRSxFQUFVQyxHQUN4Q3FQLEVBQVdyUCxFQUFLd0UsS0FDdEJpRSxFQUFlNEcsR0FBWUQsRUFDM0JBLEVBQVV0TSxzQkF5TVp1RyxFQUFVN0Isb0JBQ1YyQixFQUFTM0Isb0JBQ1RxQyxFQUFZckMsb0JBQ1p1QyxFQUFtQnZDLG9CQUNuQnlCLEVBQXNCekIsdUJBUm5CNkMsT0FBT0MsR0FBUUMsUUFBUUMsSUFBUixpQkFBc0JGLE0iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80L3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvd2VicGFjay9ydW50aW1lL3B1YmxpY1BhdGgiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy91dGlscy91dGlscy5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL2NvbXBvbmVudHMvQ2FyZC5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL2NvbXBvbmVudHMvUG9wdXAuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy91dGlscy9jb25zdGFudHMuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9wYWdlcy9pbmRleC5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL2NvbXBvbmVudHMvU2VjdGlvbi5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9jb21wb25lbnRzL1BvcHVwQ29uZmlybS5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL2NvbXBvbmVudHMvVXNlckluZm8uanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy91dGlscy9BcGkuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL2NvbmZpbmcuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHQvLyBubyBtb2R1bGUuaWQgbmVlZGVkXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIl9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7IiwiZXhwb3J0IGNsYXNzIEZvcm1WYWxpZGF0b3Ige1xyXG4gIGNvbnN0cnVjdG9yKHNldHRpbmdzLCBmb3JtKSB7XHJcbiAgICB0aGlzLl9mb3JtU2VsZWN0b3IgPSBzZXR0aW5ncy5mb3JtU2VsZWN0b3I7XHJcbiAgICB0aGlzLl9pbnB1dFNlbGVjdG9yID0gc2V0dGluZ3MuaW5wdXRTZWxlY3RvcjtcclxuICAgIHRoaXMuX2Vycm9yQ2xhc3MgPSBzZXR0aW5ncy5lcnJvckNsYXNzO1xyXG4gICAgdGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyA9IHNldHRpbmdzLmluYWN0aXZlQnV0dG9uQ2xhc3M7XHJcbiAgICB0aGlzLl9pbnB1dEVycm9yQ2xhc3MgPSBzZXR0aW5ncy5pbnB1dEVycm9yQ2xhc3M7XHJcbiAgICB0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3RvciA9IHNldHRpbmdzLnN1Ym1pdEJ1dHRvblNlbGVjdG9yO1xyXG4gICAgdGhpcy5fZm9ybSA9IGZvcm07XHJcbiAgfVxyXG4gIF9zZXRGb3JtTGlzdGVuZXJzKCkge1xyXG4gICAgdGhpcy5faW5wdXRMaXN0ID0gQXJyYXkuZnJvbShcclxuICAgICAgdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yQWxsKHRoaXMuX2lucHV0U2VsZWN0b3IpXHJcbiAgICApO1xyXG4gICAgdGhpcy5fYnV0dG9uRWxlbWVudCA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3Rvcih0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3Rvcik7XHJcbiAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSgpO1xyXG4gICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0RWxlbWVudCkgPT4ge1xyXG4gICAgICBpbnB1dEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImlucHV0XCIsICgpID0+IHtcclxuICAgICAgICB0aGlzLl9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXRFbGVtZW50KTtcclxuICAgICAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSgpO1xyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gIH1cclxuICBfZ2V0RWxlbWVudFR4dChpbnB1dEVsZW1lbnQpIHtcclxuICAgIGNvbnN0IHR4dCA9XHJcbiAgICAgIGlucHV0RWxlbWVudC50eXBlID09PSBcInVybFwiXHJcbiAgICAgICAgPyBgJHtpbnB1dEVsZW1lbnQudHlwZX0taW5wdXRgXHJcbiAgICAgICAgOiBpbnB1dEVsZW1lbnQuaWQ7XHJcbiAgICByZXR1cm4gdHh0O1xyXG4gIH1cclxuICBfc2hvd0lucHV0RXJyb3IoaW5wdXRFbGVtZW50KSB7XHJcbiAgICBjb25zdCBlcnJvckVsZW1lbnQgPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3IoXHJcbiAgICAgIGAuJHt0aGlzLl9nZXRFbGVtZW50VHh0KGlucHV0RWxlbWVudCl9LWVycm9yYFxyXG4gICAgKTtcclxuICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XHJcbiAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBpbnB1dEVsZW1lbnQudmFsaWRhdGlvbk1lc3NhZ2U7XHJcbiAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9lcnJvckNsYXNzKTtcclxuICB9XHJcbiAgX3JlbW92ZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KSB7XHJcbiAgICBjb25zdCBlcnJvckVsZW1lbnQgPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3IoXHJcbiAgICAgIGAuJHt0aGlzLl9nZXRFbGVtZW50VHh0KGlucHV0RWxlbWVudCl9LWVycm9yYFxyXG4gICAgKTtcclxuICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XHJcbiAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBcIlwiO1xyXG4gICAgZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fZXJyb3JDbGFzcyk7XHJcbiAgfVxyXG5cclxuICBfY2hlY2tJbnB1dFZhbGlkaXR5KGlucHV0RWxlbWVudCkge1xyXG4gICAgaWYgKGlucHV0RWxlbWVudC52YWxpZGl0eS52YWxpZCkge1xyXG4gICAgICB0aGlzLl9yZW1vdmVJbnB1dEVycm9yKGlucHV0RWxlbWVudCk7XHJcbiAgICB9IGVsc2UgdGhpcy5fc2hvd0lucHV0RXJyb3IoaW5wdXRFbGVtZW50KTtcclxuICB9XHJcblxyXG4gIHJlc2V0VmFsaWRhdGlvbigpIHtcclxuICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKCk7XHJcbiAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaCgoaW5wdXRFbGVtZW50KSA9PiB7XHJcbiAgICAgIHRoaXMuX3JlbW92ZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KTtcclxuICAgIH0pO1xyXG4gICAgLy8gY29uc3QgYnRuRm9ybUVsbSA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvcihcIi5wb3B1cC1ib3hfX3N1Ym1pdC1idXR0b25cIik7XHJcbiAgICAvLyBidG5Gb3JtRWxtLmRpc2FibGVkID0gdHJ1ZTtcclxuICAgIC8vIGJ0bkZvcm1FbG0uY2xhc3NMaXN0LmFkZChcInBvcHVwLWJveF9fc3VibWl0LWJ1dHRvbl9pbmFjdGl2ZVwiKTtcclxuICAgIHRoaXMuX2Zvcm0ucmVzZXQoKTtcclxuICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKCk7XHJcbiAgfVxyXG4gIF90b2dnbGVCdXR0b25TdGF0ZSgpIHtcclxuICAgIGlmICh0aGlzLl9oYXNJbnZhbGlkSW5wdXQoKSkge1xyXG4gICAgICB0aGlzLl9idXR0b25FbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyk7XHJcbiAgICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuZGlzYWJsZWQgPSB0cnVlO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5fYnV0dG9uRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MpO1xyXG4gICAgICB0aGlzLl9idXR0b25FbGVtZW50LmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBfaGFzSW52YWxpZElucHV0KCkge1xyXG4gICAgcmV0dXJuIHRoaXMuX2lucHV0TGlzdC5zb21lKChpbnB1dCkgPT4ge1xyXG4gICAgICByZXR1cm4gIWlucHV0LnZhbGlkaXR5LnZhbGlkO1xyXG4gICAgfSk7XHJcbiAgfVxyXG4gIGVuYWJsZVZhbGlkYXRpb24oKSB7XHJcbiAgICB0aGlzLl9zZXRGb3JtTGlzdGVuZXJzKCk7XHJcbiAgICB0aGlzLl9mb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGUpID0+IGUucHJldmVudERlZmF1bHQoKSk7XHJcbiAgfVxyXG59XHJcbiIsImZ1bmN0aW9uIGdldFJhbmRvbVN0cmluZyhsZW5ndGggPSBnZXRSYW5kb21JbnQoKSkge1xyXG4gIGxldCBjaGFycyA9XHJcbiAgICBcIjAxMjM0NTY3ODlBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWtsbW5vcHFyc3R1dnd4eXpcIi5zcGxpdChcIlwiKTtcclxuXHJcbiAgaWYgKCFsZW5ndGgpIHtcclxuICAgIGxlbmd0aCA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIGNoYXJzLmxlbmd0aCk7XHJcbiAgfVxyXG5cclxuICBsZXQgc3RyID0gXCJcIjtcclxuICBmb3IgKGxldCBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7XHJcbiAgICBzdHIgKz0gY2hhcnNbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogY2hhcnMubGVuZ3RoKV07XHJcbiAgfVxyXG4gIHN0ciArPSBEYXRlLm5vdygpO1xyXG4gIHJldHVybiBzdHIgKyBEYXRlLm5vdygpO1xyXG59XHJcbmZ1bmN0aW9uIGdldFJhbmRvbUludChtaW4gPSAxMDAsIG1heCA9IDE1MCkge1xyXG4gIHJldHVybiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAobWF4IC0gbWluICsgMSkpICsgbWluO1xyXG59XHJcbmZ1bmN0aW9uIG1vZGlmeUVsZW1lbnRUZXh0KGVsZW1lbnQsIHR4dCA9IFwiU2F2aW5nLi4uXCIpIHtcclxuICBlbGVtZW50LnRleHRDb250ZW50ID0gdHh0O1xyXG59XHJcblxyXG5leHBvcnQgeyBnZXRSYW5kb21TdHJpbmcsIG1vZGlmeUVsZW1lbnRUZXh0IH07XHJcbiIsImltcG9ydCB7IGdldFJhbmRvbVN0cmluZyB9IGZyb20gXCIuLi91dGlscy91dGlscy5qc1wiO1xyXG5leHBvcnQgY2xhc3MgQ2FyZCB7XHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICB7IG5hbWUsIGxpbmssIF9pZCwgb3duZXIgfSxcclxuICAgIGhhbmRsZUltYWdlQ2xpY2ssXHJcbiAgICBvcGVuUmVtb3ZlSXRlbVBvcHVwLFxyXG4gICAgaGFuZGxlTGlrZWRUb2dnbGUsXHJcbiAgICBnZXRVc2VySWQsXHJcbiAgICB7IGxpa2VzLCBpc093bmVyIH0sXHJcbiAgICBjYXJkU2VsZWN0b3JcclxuICApIHtcclxuICAgIHRoaXMuX25hbWUgPSBuYW1lO1xyXG4gICAgdGhpcy5fbGluayA9IGxpbms7XHJcbiAgICB0aGlzLl9oYW5kbGVJbWFnZUNsaWNrID0gaGFuZGxlSW1hZ2VDbGljaztcclxuICAgIHRoaXMuX2dldFVzZXJJZCA9IGdldFVzZXJJZDtcclxuICAgIHRoaXMuX29wZW5SZW1vdmVJdGVtUG9wdXAgPSBvcGVuUmVtb3ZlSXRlbVBvcHVwO1xyXG4gICAgdGhpcy5fY2FyZFNlbGVjdG9yID0gY2FyZFNlbGVjdG9yO1xyXG4gICAgdGhpcy5fbGlrZXMgPSBsaWtlcyB8fCBbXTtcclxuICAgIHRoaXMuX2lzT3duZXIgPSBpc093bmVyIHx8IGZhbHNlO1xyXG4gICAgdGhpcy5faWQgPSBfaWQgfHwgZ2V0UmFuZG9tU3RyaW5nKCk7XHJcbiAgICB0aGlzLl9oYW5kbGVMaWtlZFRvZ2dsZSA9IGhhbmRsZUxpa2VkVG9nZ2xlO1xyXG4gICAgdGhpcy5fb3duZXIgPSBvd25lcjtcclxuICB9XHJcbiAgX2dldFRlbXBsYXRlKCkge1xyXG4gICAgY29uc3QgcGxhY2VJdGVtVGVtcGxhdGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgICB0aGlzLl9jYXJkU2VsZWN0b3JcclxuICAgICkuY29udGVudDtcclxuICAgIGNvbnN0IGNhcmRFbGVtZW50ID0gcGxhY2VJdGVtVGVtcGxhdGVcclxuICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIucGxhY2VzX19pdGVtXCIpXHJcbiAgICAgIC5jbG9uZU5vZGUodHJ1ZSk7XHJcblxyXG4gICAgcmV0dXJuIGNhcmRFbGVtZW50O1xyXG4gIH1cclxuICBfaGFuZGxlVG9nZ2xlTGlrZWRCdG4oZSkge1xyXG4gICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcclxuICAgIHRoaXMuX2hhbmRsZUxpa2VkVG9nZ2xlKHRoaXMuX2lzTGlrZWQsIHRoaXMsIHRoaXMuX2lkKTtcclxuICB9XHJcblxyXG4gIF9oYW5kbGVSZW1vdmVJdGVtKGUpIHtcclxuICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgICB0aGlzLl9vcGVuUmVtb3ZlSXRlbVBvcHVwKHRoaXMuX2lkLCB0aGlzLl9jYXJkSXRlbSk7XHJcbiAgfVxyXG5cclxuICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICB0aGlzLl9jYXJkSXRlbS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gICAgICB0aGlzLl9oYW5kbGVJbWFnZUNsaWNrKHRoaXMuX25hbWUsIHRoaXMuX2xpbmspO1xyXG4gICAgfSk7XHJcbiAgICB0aGlzLl9wbGFjZUxpa2VCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChlKSA9PiB7XHJcbiAgICAgIHRoaXMuX2hhbmRsZVRvZ2dsZUxpa2VkQnRuKGUpO1xyXG4gICAgfSk7XHJcbiAgICB0aGlzLl9jYXJkSXRlbVxyXG4gICAgICAucXVlcnlTZWxlY3RvcihcIi5wbGFjZXNfX3JlbW92ZS1idG5cIilcclxuICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZSkgPT4ge1xyXG4gICAgICAgIHRoaXMuX2hhbmRsZVJlbW92ZUl0ZW0oZSk7XHJcbiAgICAgIH0pO1xyXG4gIH1cclxuICBfcmVuZGVyTGlrZXMgPSAoKSA9PiB7XHJcbiAgICB0aGlzLl9wbGFjZUxpa2VBbW91bnQudGV4dENvbnRlbnQgPSB0aGlzLl9saWtlcy5sZW5ndGg7XHJcbiAgICB0aGlzLl9pc0xpa2VkXHJcbiAgICAgID8gdGhpcy5fcGxhY2VMaWtlQnRuLmNsYXNzTGlzdC5hZGQoXCJwbGFjZXNfX2xpa2UtYnRuX19hY3RpdmVcIilcclxuICAgICAgOiB0aGlzLl9wbGFjZUxpa2VCdG4uY2xhc3NMaXN0LnJlbW92ZShcInBsYWNlc19fbGlrZS1idG5fX2FjdGl2ZVwiKTtcclxuICB9O1xyXG4gIG9uVXBkYXRlTGlrZXMgPSAobGlrZXMgPSBbXSwgaXNJbml0KSA9PiB7XHJcbiAgICBpZiAoIWlzSW5pdCAmJiB0aGlzLl9saWtlcyAhPT0gW10pIHRoaXMuX2xpa2VzID0gbGlrZXM7XHJcbiAgICB0aGlzLl9pc0xpa2VkQnlDdXJyVXNlcigpO1xyXG4gICAgdGhpcy5fcmVuZGVyTGlrZXMoKTtcclxuICB9O1xyXG4gIF9pc0xpa2VkQnlDdXJyVXNlciA9ICgpID0+IHtcclxuICAgIGNvbnN0IGlkID0gdGhpcy5fZ2V0VXNlcklkKCk7XHJcbiAgICB0aGlzLl9pc0xpa2VkID0gdGhpcy5fbGlrZXMuZmluZCgobGlrZSkgPT4gbGlrZS5faWQgPT09IGlkKSB8fCBmYWxzZTtcclxuICB9O1xyXG4gIGdlbmVyYXRlQ2FyZCgpIHtcclxuICAgIHRoaXMuX2NhcmRJdGVtID0gdGhpcy5fZ2V0VGVtcGxhdGUoKTtcclxuICAgIHRoaXMuX3BsYWNlSW1nID0gdGhpcy5fY2FyZEl0ZW0ucXVlcnlTZWxlY3RvcihcIi5wbGFjZXNfX2ltZ1wiKTtcclxuICAgIHRoaXMuX3BsYWNlTGlrZUJ0biA9IHRoaXMuX2NhcmRJdGVtLnF1ZXJ5U2VsZWN0b3IoXCIucGxhY2VzX19saWtlLWJ0blwiKTtcclxuICAgIHRoaXMuX3BsYWNlTGlrZUFtb3VudCA9IHRoaXMuX2NhcmRJdGVtLnF1ZXJ5U2VsZWN0b3IoXHJcbiAgICAgIFwiLnBsYWNlc19fbGlrZS1jb3VudGVyXCJcclxuICAgICk7XHJcbiAgICB0aGlzLl9wbGFjZVJlbW92ZUJ0biA9IHRoaXMuX2NhcmRJdGVtLnF1ZXJ5U2VsZWN0b3IoXCIucGxhY2VzX19yZW1vdmUtYnRuXCIpO1xyXG4gICAgdGhpcy5vblVwZGF0ZUxpa2VzKFtdLCB0cnVlKTtcclxuICAgIGlmIChcclxuICAgICAgdGhpcy5fbmFtZSAhPT0gXCJMb2FkaW5nLi4uXCIgJiZcclxuICAgICAgdGhpcy5fbGluayAhPT0gXCJpbWFnZXMvc3Bpbm5lcl9zdmcuZGM0MDg2Mzg4ZTU1ODIwZmJhZTEuc3ZnXCJcclxuICAgICkge1xyXG4gICAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgfVxyXG4gICAgaWYgKCF0aGlzLl9pc093bmVyKSB7XHJcbiAgICAgIHRoaXMuX3BsYWNlUmVtb3ZlQnRuLnJlbW92ZSgpO1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuX3BsYWNlSW1nLnN0eWxlLmJhY2tncm91bmRJbWFnZSA9IGB1cmwoJHt0aGlzLl9saW5rfSlgO1xyXG4gICAgdGhpcy5fcGxhY2VJbWcuYWx0ID0gYGEgcGhvdG8gb2YgJHt0aGlzLl9uYW1lfWA7XHJcbiAgICB0aGlzLl9jYXJkSXRlbS5xdWVyeVNlbGVjdG9yKFwiLnBsYWNlc19fbmFtZVwiKS50ZXh0Q29udGVudCA9IGAke3RoaXMuX25hbWV9YDtcclxuICAgIHJldHVybiB0aGlzLl9jYXJkSXRlbTtcclxuICB9XHJcbn1cclxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXAge1xyXG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcclxuICAgIHRoaXMuX3BvcHVwRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocG9wdXBTZWxlY3Rvcik7XHJcbiAgfVxyXG5cclxuICBfaGFuZGxlRXNjQ2xvc2UgPSAoZSkgPT4ge1xyXG4gICAgaWYgKGUua2V5ID09IFwiRXNjYXBlXCIpIHtcclxuICAgICAgdGhpcy5jbG9zZSgpO1xyXG4gICAgfVxyXG4gIH07XHJcbiAgX2hhbmRsZUNvbnRleHRNZW51ID0gKGUpID0+IHtcclxuICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICB9O1xyXG4gIG9wZW4oKSB7XHJcbiAgICB0aGlzLl9wb3B1cEVsZW1lbnQuY2xhc3NMaXN0LmFkZChcInBvcHVwLWJveF92aXNpYmxlXCIpO1xyXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xyXG4gIH1cclxuXHJcbiAgY2xvc2UoKSB7XHJcbiAgICB0aGlzLl9wb3B1cEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZShcInBvcHVwLWJveF92aXNpYmxlXCIpO1xyXG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xyXG4gIH1cclxuXHJcbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICB0aGlzLl9wb3B1cEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlZG93blwiLCAoZSkgPT4ge1xyXG4gICAgICBpZiAoXHJcbiAgICAgICAgZS50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKFwicG9wdXAtYm94X3Zpc2libGVcIikgfHxcclxuICAgICAgICBlLnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJwb3B1cC1ib3hfX2Nsb3NlLWJ1dHRvblwiKVxyXG4gICAgICApIHtcclxuICAgICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcclxuaW1wb3J0IHsgbW9kaWZ5RWxlbWVudFRleHQgfSBmcm9tIFwiLi4vdXRpbHMvdXRpbHNcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEZvcm0gZXh0ZW5kcyBQb3B1cCB7XHJcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3RvciwgaGFuZGxlU3VibWl0RnJvbSkge1xyXG4gICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XHJcbiAgICB0aGlzLl9oYW5kbGVTdWJtaXRGcm9tID0gaGFuZGxlU3VibWl0RnJvbTtcclxuICAgIHRoaXMuX2Zvcm1FbGVtZW50ID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXAtYm94X19mb3JtXCIpO1xyXG4gICAgdGhpcy5fZm9ybUJ0biA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgICAgIFwiLnBvcHVwLWJveF9fc3VibWl0LWJ1dHRvblwiXHJcbiAgICApO1xyXG5cclxuICAgIHRoaXMuX2lucHV0TGlzdCA9IFtcclxuICAgICAgLi4udGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5wb3B1cC1ib3hfX2lucHV0XCIpLFxyXG4gICAgXTtcclxuICAgIHRoaXMuX21vZGlmeUVsZW1lbnRUZXh0ID0gbW9kaWZ5RWxlbWVudFRleHQ7XHJcbiAgfVxyXG5cclxuICBfaGFuZGxlRm9ybVN1Ym1pdCA9IChlKSA9PiB7XHJcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICB0aGlzLl9oYW5kbGVTdWJtaXRGcm9tKHRoaXMuX3JldHVybklucHV0VmFsT2JqKCkpO1xyXG4gIH07XHJcbiAgaGFuZGxlTG9hZGluZyh0eHQgPSBcIlNhdmluZy4uLlwiLCBpc0RvbmUgPSBmYWxzZSkge1xyXG4gICAgdGhpcy5fZm9ybUJ0bi5kaXNhYmxlZCA9ICFpc0RvbmUgPyB0cnVlIDogZmFsc2U7XHJcbiAgICB0aGlzLl9tb2RpZnlFbGVtZW50VGV4dCh0aGlzLl9mb3JtQnRuLCB0eHQpO1xyXG4gIH1cclxuXHJcbiAgX3JldHVybklucHV0VmFsT2JqKCkge1xyXG4gICAgY29uc3QgdmFsSW5wdXRPYmogPSB7fTtcclxuICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKChpdGVtKSA9PiB7XHJcbiAgICAgIHZhbElucHV0T2JqW2l0ZW0ubmFtZV0gPSBpdGVtLnZhbHVlO1xyXG4gICAgfSk7XHJcbiAgICByZXR1cm4gdmFsSW5wdXRPYmo7XHJcbiAgfVxyXG5cclxuICBjbG9zZSgpIHtcclxuICAgIHN1cGVyLmNsb3NlKCk7XHJcbiAgICB0aGlzLl9mb3JtRWxlbWVudC5yZXNldCgpO1xyXG4gIH1cclxuICBzZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIHRoaXMuX2Zvcm1FbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCk7XHJcbiAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xyXG4gIH1cclxufVxyXG4iLCJjb25zdCBpbml0aWFsQ2FyZHMgPSBbXHJcbiAge1xyXG4gICAgbmFtZTogXCJZb3NlbWl0ZSBWYWxsZXlcIixcclxuICAgIGxpbms6IFwiaHR0cHM6Ly9jb2RlLnMzLnlhbmRleC5uZXQvd2ViLWNvZGUveW9zZW1pdGUuanBnXCIsXHJcbiAgfSxcclxuICB7XHJcbiAgICBuYW1lOiBcIkxha2UgTG91aXNlXCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vY29kZS5zMy55YW5kZXgubmV0L3dlYi1jb2RlL2xha2UtbG91aXNlLmpwZ1wiLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgbmFtZTogXCJCYWxkIE1vdW50YWluc1wiLFxyXG4gICAgbGluazogXCJodHRwczovL2NvZGUuczMueWFuZGV4Lm5ldC93ZWItY29kZS9iYWxkLW1vdW50YWlucy5qcGdcIixcclxuICB9LFxyXG4gIHtcclxuICAgIG5hbWU6IFwiTGF0ZW1hclwiLFxyXG4gICAgbGluazogXCJodHRwczovL2NvZGUuczMueWFuZGV4Lm5ldC93ZWItY29kZS9sYXRlbWFyLmpwZ1wiLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgbmFtZTogXCJWYW5vaXNlIE5hdGlvbmFsIFBhcmtcIixcclxuICAgIGxpbms6IFwiaHR0cHM6Ly9jb2RlLnMzLnlhbmRleC5uZXQvd2ViLWNvZGUvdmFub2lzZS5qcGdcIixcclxuICB9LFxyXG4gIHtcclxuICAgIG5hbWU6IFwiTGFnbyBkaSBCcmFpZXNcIixcclxuICAgIGxpbms6IFwiaHR0cHM6Ly9jb2RlLnMzLnlhbmRleC5uZXQvd2ViLWNvZGUvbGFnby5qcGdcIixcclxuICB9LFxyXG4gIHtcclxuICAgIG5hbWU6IFwiQmVlcnNoZWJhIFR1cmtpc2ggcmFpbHdheSBzdGF0aW9uXCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vdXBsb2FkLndpa2ltZWRpYS5vcmcvd2lraXBlZGlhL2NvbW1vbnMvdGh1bWIvZC9kZS8lRDclOUUlRDclQUElRDclOTclRDclOURfJUQ3JUFBJUQ3JTk3JUQ3JUEwJUQ3JUFBXyVENyU5NCVENyVBOCVENyU5QiVENyU5MSVENyVBQV8lRDclOTQlRDclOTglRDclOTUlRDclQTglRDclQTclRDclOTklRDclQUFfJUQ3JTkxJUQ3JTkxJUQ3JTkwJUQ3JUE4XyVENyVBOSVENyU5MSVENyVBMi5qcGcvMTI4MHB4LSVENyU5RSVENyVBQSVENyU5NyVENyU5RF8lRDclQUElRDclOTclRDclQTAlRDclQUFfJUQ3JTk0JUQ3JUE4JUQ3JTlCJUQ3JTkxJUQ3JUFBXyVENyU5NCVENyU5OCVENyU5NSVENyVBOCVENyVBNyVENyU5OSVENyVBQV8lRDclOTElRDclOTElRDclOTAlRDclQThfJUQ3JUE5JUQ3JTkxJUQ3JUEyLmpwZ1wiLFxyXG4gIH0sXHJcbl07XHJcbmNvbnN0IGZvcm1WYWxpZGF0b3JzID0ge307XHJcblxyXG5jb25zdCBvcGVuRWRpdFVzZXJQb3B1cEJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fZWRpdC1idG5cIik7XHJcbmNvbnN0IG9wZW5BZGRQbGFjZXNQb3B1cEJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fYWRkLWJ0blwiKTtcclxuY29uc3Qgb3BlbkNoYW5nZVByb2ZpbGVQb3B1cEJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgXCIucHJvZmlsZV9fYXZhdGFyLWNvdmVyXCJcclxuKTtcclxuXHJcbmNvbnN0IHR4dEVyciA9IFwiU29tZXRoaW5nIHdlbnQgd3JvbmcsIHBsZWFzZSB0cnkgYWdhaW4gbGF0ZXIgXCI7XHJcblxyXG5leHBvcnQge1xyXG4gIGluaXRpYWxDYXJkcyxcclxuICBvcGVuRWRpdFVzZXJQb3B1cEJ0bixcclxuICBvcGVuQWRkUGxhY2VzUG9wdXBCdG4sXHJcbiAgZm9ybVZhbGlkYXRvcnMsXHJcbiAgb3BlbkNoYW5nZVByb2ZpbGVQb3B1cEJ0bixcclxuICB0eHRFcnIsXHJcbn07XHJcbiIsImltcG9ydCBcIi4vaW5kZXguY3NzXCI7XHJcbmltcG9ydCB7IGFwaUNvbmZpbmcgfSBmcm9tIFwiLi4vLi4vY29uZmluZy5qc1wiO1xyXG5pbXBvcnQgeyBGb3JtVmFsaWRhdG9yIH0gZnJvbSBcIi4uL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qc1wiO1xyXG5pbXBvcnQgeyBDYXJkIH0gZnJvbSBcIi4uL2NvbXBvbmVudHMvQ2FyZC5qc1wiO1xyXG5pbXBvcnQgU2VjdGlvbiBmcm9tIFwiLi4vY29tcG9uZW50cy9TZWN0aW9uLmpzXCI7XHJcbmltcG9ydCBQb3B1cFdpdGhGb3JtIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanNcIjtcclxuaW1wb3J0IFBvcHVwV2l0aEltYWdlIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzXCI7XHJcbmltcG9ydCBVc2VySW5mbyBmcm9tIFwiLi4vY29tcG9uZW50cy9Vc2VySW5mby5qc1wiO1xyXG5pbXBvcnQgQXBpIGZyb20gXCIuLi91dGlscy9BcGkuanNcIjtcclxuaW1wb3J0IHNwaW5uZXJHaWYgZnJvbSBcIi4uL2ltYWdlcy9wcm9maWxlL3NwaW5uZXJfc3ZnLnN2Z1wiO1xyXG5pbXBvcnQgeyBnZXRSYW5kb21TdHJpbmcgfSBmcm9tIFwiLi4vdXRpbHMvdXRpbHMuanNcIjtcclxuXHJcbmltcG9ydCB7XHJcbiAgb3BlbkNoYW5nZVByb2ZpbGVQb3B1cEJ0bixcclxuICBvcGVuRWRpdFVzZXJQb3B1cEJ0bixcclxuICBvcGVuQWRkUGxhY2VzUG9wdXBCdG4sXHJcbiAgZm9ybVZhbGlkYXRvcnMsXHJcbiAgdHh0RXJyLFxyXG59IGZyb20gXCIuLi91dGlscy9jb25zdGFudHMuanNcIjtcclxuaW1wb3J0IFBvcHVwQ29uZmlybSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cENvbmZpcm1cIjtcclxuXHJcbmNvbnN0IG5hbWVJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2lucHV0W25hbWU9XCJuYW1lX2lucHV0XCJdJyk7XHJcbmNvbnN0IGFib3V0TWVJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2lucHV0W25hbWU9XCJhYm91dF9tZVwiXScpO1xyXG5cclxuY29uc3QgaW5pdGlhbEJ0blR4dCA9IHtcclxuICBlZGl0UG9wdXA6IFwiU2F2ZVwiLFxyXG4gIGFkZFBvcHVwOiBcIkNyZWF0ZVwiLFxyXG4gIGRlbGV0ZUNvbmZpcm1Qb3B1cDogXCJZZXNcIixcclxuICBjaGFuZ2VQcm9maWxlUGljUG9wdXA6IFwiU2F2ZVwiLFxyXG59O1xyXG5cclxuZnVuY3Rpb24gY3JlYXRlUGxhY2VJdGVtKGl0ZW0sIGNhcmRJbmZvKSB7XHJcbiAgY29uc3QgbmV3Q2FyZCA9IG5ldyBDYXJkKFxyXG4gICAgaXRlbSxcclxuICAgIG9wZW5JbWdQb3B1cCxcclxuICAgIG9wZW5SZW1vdmVJdGVtUG9wdXAsXHJcbiAgICBoYW5kbGVMaWtlZFRvZ2dsZSxcclxuICAgIGdldFVzZXJJZCxcclxuICAgIGNhcmRJbmZvLFxyXG4gICAgXCIjcGxhY2VzLWl0ZW0tdGVtcGxhdGVcIlxyXG4gICk7XHJcbiAgcmV0dXJuIG5ld0NhcmQuZ2VuZXJhdGVDYXJkKCk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGVuYWJsZVZhbGlkYXRpb24oc2V0dGluZ3MpIHtcclxuICBjb25zdCBmb3JtSXRlbXMgPSBBcnJheS5mcm9tKFxyXG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChzZXR0aW5ncy5mb3JtU2VsZWN0b3IpXHJcbiAgKTtcclxuXHJcbiAgZm9ybUl0ZW1zLmZvckVhY2goKGZvcm0pID0+IHtcclxuICAgIGNvbnN0IHZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKHNldHRpbmdzLCBmb3JtKTtcclxuICAgIGNvbnN0IGZvcm1OYW1lID0gZm9ybS5uYW1lO1xyXG4gICAgZm9ybVZhbGlkYXRvcnNbZm9ybU5hbWVdID0gdmFsaWRhdG9yO1xyXG4gICAgdmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcclxuICB9KTtcclxufVxyXG5mdW5jdGlvbiBmaWxsUHJvZmlsZUZvcm0oeyBuYW1lSW5mbywgYWJvdXRNZUluZm8gfSkge1xyXG4gIG5hbWVJbnB1dC52YWx1ZSA9IG5hbWVJbmZvO1xyXG4gIGFib3V0TWVJbnB1dC52YWx1ZSA9IGFib3V0TWVJbmZvO1xyXG59XHJcbmZ1bmN0aW9uIG9wZW5DaGFuZ2VQcm9maWxlUG9wdXAoKSB7XHJcbiAgZm9ybVZhbGlkYXRvcnNbXCJmb3JtX2NoYW5nZS1wcm9maWxlLXBpY1wiXS5yZXNldFZhbGlkYXRpb24oKTtcclxuICBjaGFuZ2VQcm9maWxlUGljUG9wdXAub3BlbigpO1xyXG59XHJcbmZ1bmN0aW9uIG9wZW5BZGRQcm9maWxlUG9wdXAoKSB7XHJcbiAgZm9ybVZhbGlkYXRvcnNbXCJmb3JtX2FkZC1wbGFjZVwiXS5yZXNldFZhbGlkYXRpb24oKTtcclxuICBhZGRQb3B1cC5vcGVuKCk7XHJcbn1cclxuZnVuY3Rpb24gb3BlbkVkaXRQcm9maWxlUG9wdXAoKSB7XHJcbiAgZm9ybVZhbGlkYXRvcnNbXCJmb3JtX3Byb2ZpbGUtZWRpdFwiXS5yZXNldFZhbGlkYXRpb24oKTtcclxuICBlZGl0UG9wdXAub3BlbigpO1xyXG4gIGZpbGxQcm9maWxlRm9ybShwcm9maWxlVXNlci5nZXRVc2VySW5mbygpKTtcclxufVxyXG5mdW5jdGlvbiBvcGVuSW1nUG9wdXAodGl0bGUsIGxpbmspIHtcclxuICBuZXdJbWdQb3B1cC5vcGVuKHRpdGxlLCBsaW5rKTtcclxufVxyXG5mdW5jdGlvbiBvcGVuUmVtb3ZlSXRlbVBvcHVwKGlkLCBjYXJkSXRlbSkge1xyXG4gIGRlbGV0ZUNvbmZpcm1Qb3B1cC5vcGVuKGlkLCBjYXJkSXRlbSk7XHJcbn1cclxuZnVuY3Rpb24gZ2V0VXNlcklkKCkge1xyXG4gIHJldHVybiBwcm9maWxlVXNlci5nZXRVc2VySWQoKTtcclxufVxyXG5cclxuZnVuY3Rpb24gaGFuZGxlU3VibWl0QWRkSXRlbSh7IHRpdGxlX3BsYWNlOiBuYW1lLCBpbWdfbGluazogbGluayB9KSB7XHJcbiAgYWRkUG9wdXAuaGFuZGxlTG9hZGluZygpO1xyXG4gIGFwaVxyXG4gICAgLmFkZE5ld0NhcmQoe1xyXG4gICAgICBuYW1lLFxyXG4gICAgICBsaW5rLFxyXG4gICAgfSlcclxuICAgIC50aGVuKChyZXMpID0+IHtcclxuICAgICAgYWRkUG9wdXAuaGFuZGxlTG9hZGluZyhcIlBsYWNlIGFkZGVkIHN1Y2Nlc3NmdWxseSFcIik7XHJcbiAgICAgIGNvbnN0IGNhcmRJbmZvID0ge1xyXG4gICAgICAgIGlzT3duZXI6IHRydWUsXHJcbiAgICAgICAgbGlrZXM6IFtdLFxyXG4gICAgICB9O1xyXG4gICAgICByZW5kZXJDYXJkKHJlcywgY2FyZEluZm8pO1xyXG4gICAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICBhZGRQb3B1cC5jbG9zZSgpO1xyXG4gICAgICB9LCAxMDAwKTtcclxuICAgIH0pXHJcbiAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICBhZGRQb3B1cC5oYW5kbGVMb2FkaW5nKHR4dEVycik7XHJcbiAgICAgIGNvbnNvbGUubG9nKGBFcnJvcjogJHtlcnJ9YCk7XHJcbiAgICB9KVxyXG4gICAgLmZpbmFsbHkoKCkgPT4ge1xyXG4gICAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICBhZGRQb3B1cC5oYW5kbGVMb2FkaW5nKGluaXRpYWxCdG5UeHQuYWRkUG9wdXAsIHRydWUpO1xyXG4gICAgICB9LCAxODAwKTtcclxuICAgIH0pO1xyXG59XHJcbmZ1bmN0aW9uIGhhbmRsZVN1Ym1pdFJlbW92ZUNvbmZpcm0oaWQsIGl0ZW0pIHtcclxuICBkZWxldGVDb25maXJtUG9wdXAuaGFuZGxlTG9hZGluZygpO1xyXG4gIGFwaVxyXG4gICAgLm9uUmVtb3ZlSXRlbShpZClcclxuICAgIC50aGVuKCgpID0+IHtcclxuICAgICAgZGVsZXRlQ29uZmlybVBvcHVwLmhhbmRsZUxvYWRpbmcoXCJQbGFjZSByZW1vdmVkIHN1Y2Nlc3NmdWxseSFcIik7XHJcbiAgICAgIGl0ZW0ucmVtb3ZlKCk7XHJcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgIGRlbGV0ZUNvbmZpcm1Qb3B1cC5jbG9zZSgpO1xyXG4gICAgICB9LCAxMDAwKTtcclxuICAgIH0pXHJcbiAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICBkZWxldGVDb25maXJtUG9wdXAuaGFuZGxlTG9hZGluZyh0eHRFcnIpO1xyXG4gICAgICBjb25zb2xlLmxvZyhgRXJyb3I6ICR7ZXJyfWApO1xyXG4gICAgfSlcclxuICAgIC5maW5hbGx5KCgpID0+IHtcclxuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgZGVsZXRlQ29uZmlybVBvcHVwLmhhbmRsZUxvYWRpbmcoXHJcbiAgICAgICAgICBpbml0aWFsQnRuVHh0LmRlbGV0ZUNvbmZpcm1Qb3B1cCxcclxuICAgICAgICAgIHRydWVcclxuICAgICAgICApO1xyXG4gICAgICB9LCAxMDUwKTtcclxuICAgIH0pO1xyXG59XHJcbmZ1bmN0aW9uIGhhbmRsZVN1Ym1pdEVkaXRQcm9maWxlKHsgbmFtZV9pbnB1dCwgYWJvdXRfbWUgfSkge1xyXG4gIGZvcm1WYWxpZGF0b3JzW1wiZm9ybV9hZGQtcGxhY2VcIl0ucmVzZXRWYWxpZGF0aW9uKCk7XHJcbiAgZWRpdFBvcHVwLmhhbmRsZUxvYWRpbmcoKTtcclxuXHJcbiAgYXBpXHJcbiAgICAuc2V0VXNlckluZm8oeyBuYW1lOiBuYW1lX2lucHV0LCBhYm91dDogYWJvdXRfbWUgfSlcclxuICAgIC50aGVuKChyZXMpID0+IHtcclxuICAgICAgZWRpdFBvcHVwLmhhbmRsZUxvYWRpbmcoXCJQcm9maWxlIGVkaXRlZCBzdWNjZXNzZnVsbHkhXCIpO1xyXG4gICAgICBwcm9maWxlVXNlci5zZXRVc2VySW5mbyhyZXMpO1xyXG4gICAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICBlZGl0UG9wdXAuY2xvc2UoKTtcclxuICAgICAgfSwgMTAwMCk7XHJcbiAgICB9KVxyXG4gICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgZWRpdFBvcHVwLmhhbmRsZUxvYWRpbmcodHh0RXJyKTtcclxuICAgICAgY29uc29sZS5sb2coYEVycm9yOiAke2Vycn1gKTtcclxuICAgIH0pXHJcbiAgICAuZmluYWxseSgoKSA9PiB7XHJcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgIGVkaXRQb3B1cC5oYW5kbGVMb2FkaW5nKGluaXRpYWxCdG5UeHQuZWRpdFBvcHVwLCB0cnVlKTtcclxuICAgICAgfSwgMTgwMCk7XHJcbiAgICB9KTtcclxufVxyXG5mdW5jdGlvbiBoYW5kbGVTdWJtaXRQcm9maWxlUGljKHsgaW1nX2xpbmsgfSkge1xyXG4gIGNoYW5nZVByb2ZpbGVQaWNQb3B1cC5oYW5kbGVMb2FkaW5nKCk7XHJcblxyXG4gIGFwaVxyXG4gICAgLm9uVXBkYXRlUHJvZmlsZVBpYyh7IGF2YXRhcjogaW1nX2xpbmsgfSlcclxuICAgIC50aGVuKCgpID0+IHtcclxuICAgICAgY2hhbmdlUHJvZmlsZVBpY1BvcHVwLmhhbmRsZUxvYWRpbmcoXHJcbiAgICAgICAgYnRuLFxyXG4gICAgICAgIFwiUHJvZmlsZSBQaWN0dXJlIG1vZGlmaWVkIHN1Y2Nlc3NmdWxseSFcIlxyXG4gICAgICApO1xyXG4gICAgICBwcm9maWxlVXNlci5zZXRQaWN0dXJlUHJvZmlsZShpbWdfbGluayk7XHJcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgIGNoYW5nZVByb2ZpbGVQaWNQb3B1cC5jbG9zZSgpO1xyXG4gICAgICB9LCAxMDAwKTtcclxuICAgIH0pXHJcbiAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICBjaGFuZ2VQcm9maWxlUGljUG9wdXAuaGFuZGxlTG9hZGluZyh0eHRFcnIpO1xyXG4gICAgICBjb25zb2xlLmxvZyhgRXJyb3I6ICR7ZXJyfWApO1xyXG4gICAgfSlcclxuXHJcbiAgICAuZmluYWxseSgoKSA9PiB7XHJcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgIGNoYW5nZVByb2ZpbGVQaWNQb3B1cC5oYW5kbGVMb2FkaW5nKFxyXG4gICAgICAgICAgaW5pdGlhbEJ0blR4dC5jaGFuZ2VQcm9maWxlUGljUG9wdXAsXHJcbiAgICAgICAgICB0cnVlXHJcbiAgICAgICAgKTtcclxuICAgICAgfSwgMTAwMCk7XHJcbiAgICB9KTtcclxufVxyXG5mdW5jdGlvbiBoYW5kbGVMaWtlZFRvZ2dsZShpc0xpa2VkLCBpdGVtLCBpZCkge1xyXG4gIGlmICghaXNMaWtlZCkge1xyXG4gICAgYXBpXHJcbiAgICAgIC5hZGRJdGVtTGlrZShpZClcclxuICAgICAgLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgICAgIGl0ZW0ub25VcGRhdGVMaWtlcyhyZXMubGlrZXMpO1xyXG4gICAgICB9KVxyXG4gICAgICAuY2F0Y2goKGVycikgPT4gY29uc29sZS5sb2coYEVycm9yOiAke2Vycn1gKSk7XHJcbiAgfSBlbHNlIHtcclxuICAgIGFwaVxyXG4gICAgICAucmVtb3ZlSXRlbUxpa2UoaWQpXHJcbiAgICAgIC50aGVuKChyZXMpID0+IHtcclxuICAgICAgICBpdGVtLm9uVXBkYXRlTGlrZXMocmVzLmxpa2VzKTtcclxuICAgICAgfSlcclxuICAgICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUubG9nKGBFcnJvcjogJHtlcnJ9YCkpO1xyXG4gIH1cclxufVxyXG5mdW5jdGlvbiBzZXRMb2FkaW5nSW5pdChzdGF0dXMsIGNhcmRJdGVtc0FyciwgdXNlckluZm8pIHtcclxuICBpZiAoc3RhdHVzKSB7XHJcbiAgICBwcm9maWxlVXNlci5zZXRVc2VySW5mbyh7XHJcbiAgICAgIG5hbWU6IFwiTG9hZGluZy4uLlwiLFxyXG4gICAgICBhYm91dDogXCJMb2FkaW5nLi4uXCIsXHJcbiAgICAgIF9pZDogZ2V0UmFuZG9tU3RyaW5nKCksXHJcbiAgICB9KTtcclxuICAgIHByb2ZpbGVVc2VyLnNldFBpY3R1cmVQcm9maWxlKHNwaW5uZXJHaWYpO1xyXG4gICAgY2FyZHNMaXN0LnNldE5ld0l0ZW1saXN0KFtcclxuICAgICAge1xyXG4gICAgICAgIG5hbWU6IFwiTG9hZGluZy4uLlwiLFxyXG4gICAgICAgIGxpbms6IHNwaW5uZXJHaWYsXHJcbiAgICAgICAgb3duZXI6IHsgX2lkOiBnZXRSYW5kb21TdHJpbmcoKSB9LFxyXG4gICAgICAgIGxpa2VzOiBbXSxcclxuICAgICAgfSxcclxuICAgIF0pO1xyXG4gIH0gZWxzZSB7XHJcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBsYWNlc19fZ3JpZC1jb250YWluZXJcIikuaW5uZXJIVE1MID0gXCJcIjtcclxuICAgIHByb2ZpbGVVc2VyLnNldFVzZXJJbmZvKHtcclxuICAgICAgbmFtZTogdXNlckluZm8ubmFtZSxcclxuICAgICAgYWJvdXQ6IHVzZXJJbmZvLmFib3V0LFxyXG4gICAgICBfaWQ6IHVzZXJJbmZvLl9pZCxcclxuICAgIH0pO1xyXG4gICAgcHJvZmlsZVVzZXIuc2V0UGljdHVyZVByb2ZpbGUodXNlckluZm8uYXZhdGFyKTtcclxuICAgIGNhcmRzTGlzdC5zZXROZXdJdGVtbGlzdChjYXJkSXRlbXNBcnIpO1xyXG4gICAgb3BlbkVkaXRVc2VyUG9wdXBCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIG9wZW5FZGl0UHJvZmlsZVBvcHVwKTtcclxuICAgIG9wZW5BZGRQbGFjZXNQb3B1cEJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgb3BlbkFkZFByb2ZpbGVQb3B1cCk7XHJcbiAgICBvcGVuQ2hhbmdlUHJvZmlsZVBvcHVwQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBvcGVuQ2hhbmdlUHJvZmlsZVBvcHVwKTtcclxuICB9XHJcbn1cclxuZnVuY3Rpb24gb25Jbml0KCkge1xyXG4gIHNldExvYWRpbmdJbml0KHRydWUpO1xyXG4gIGFwaVxyXG4gICAgLmdldEluaXRJbmZvKClcclxuICAgIC50aGVuKChbY2FyZEl0ZW1zQXJyLCB1c2VySW5mb10pID0+IHtcclxuICAgICAgc2V0TG9hZGluZ0luaXQoZmFsc2UsIGNhcmRJdGVtc0FyciwgdXNlckluZm8pO1xyXG4gICAgICBlbmFibGVWYWxpZGF0aW9uKHtcclxuICAgICAgICBmb3JtU2VsZWN0b3I6IFwiLnBvcHVwLWJveF9fZm9ybVwiLFxyXG4gICAgICAgIGlucHV0U2VsZWN0b3I6IFwiLnBvcHVwLWJveF9faW5wdXRcIixcclxuICAgICAgICBzdWJtaXRCdXR0b25TZWxlY3RvcjogXCIucG9wdXAtYm94X19zdWJtaXQtYnV0dG9uXCIsXHJcbiAgICAgICAgaW5hY3RpdmVCdXR0b25DbGFzczogXCJwb3B1cC1ib3hfX3N1Ym1pdC1idXR0b25faW5hY3RpdmVcIixcclxuICAgICAgICBpbnB1dEVycm9yQ2xhc3M6IFwiLnBvcHVwLWJveF9faW5wdXRfdHlwZV9lcnJvclwiLFxyXG4gICAgICAgIGVycm9yQ2xhc3M6IFwiLnBvcHVwLWJveF9faW5wdXQtZXJyb3JfYWN0aXZlXCIsXHJcbiAgICAgIH0pO1xyXG4gICAgICBzZXRQb3B1cEV2ZW50KCk7XHJcbiAgICB9KVxyXG4gICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUubG9nKGBFcnJvcjogJHtlcnJ9YCkpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBzZXRQb3B1cEV2ZW50KCkge1xyXG4gIGVkaXRQb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xyXG4gIGFkZFBvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgbmV3SW1nUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICBkZWxldGVDb25maXJtUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICBjaGFuZ2VQcm9maWxlUGljUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxufVxyXG5mdW5jdGlvbiByZW5kZXJDYXJkKGl0ZW0sIGNhcmRJbmZvKSB7XHJcbiAgY2FyZHNMaXN0LmFkZEl0ZW0oY3JlYXRlUGxhY2VJdGVtKGl0ZW0sIGNhcmRJbmZvKSk7XHJcbn1cclxuXHJcbmNvbnN0IGNhcmRzTGlzdCA9IG5ldyBTZWN0aW9uKHtcclxuICByZW5kZXJlcjogKGRhdGEpID0+IHtcclxuICAgIGNvbnN0IHsgb3duZXIsIGxpa2VzIH0gPSBkYXRhO1xyXG4gICAgY29uc3QgaWQgPSBnZXRVc2VySWQoKTtcclxuICAgIGNvbnN0IGNhcmRJbmZvID0ge1xyXG4gICAgICBpc093bmVyOiBvd25lci5faWQgPT09IGlkLFxyXG4gICAgICBsaWtlcyxcclxuICAgIH07XHJcbiAgICByZW5kZXJDYXJkKGRhdGEsIGNhcmRJbmZvKTtcclxuICB9LFxyXG4gIGNvbnRhaW5lclNlbGVjdG9yOiBcIi5wbGFjZXNfX2dyaWQtY29udGFpbmVyXCIsXHJcbn0pO1xyXG5jb25zdCBlZGl0UG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybShcclxuICBcIi5wb3B1cC1ib3hfdHlwZV9wcm9maWxlLWVkaXRcIixcclxuICBoYW5kbGVTdWJtaXRFZGl0UHJvZmlsZSxcclxuICBcIlNhdmVcIlxyXG4pO1xyXG5cclxuY29uc3QgYWRkUG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybShcclxuICBcIi5wb3B1cC1ib3hfdHlwZV9hZGQtaXRlbVwiLFxyXG4gIGhhbmRsZVN1Ym1pdEFkZEl0ZW1cclxuKTtcclxuY29uc3QgbmV3SW1nUG9wdXAgPSBuZXcgUG9wdXBXaXRoSW1hZ2Uoe1xyXG4gIHBvcHVwU2VsZWN0b3I6IFwiLnBvcHVwLWJveF90eXBlX2ltZ1wiLFxyXG4gIGltZ1NlbGVjdG9yOiBcIi5wb3B1cC1ib3hfX2ltZ1wiLFxyXG4gIGltZ1RpdGxlU2VsZWN0b3I6IFwiLnBvcHVwLWJveF9faW1nLXRpdGxlXCIsXHJcbn0pO1xyXG5cclxuY29uc3QgZGVsZXRlQ29uZmlybVBvcHVwID0gbmV3IFBvcHVwQ29uZmlybSh7XHJcbiAgcG9wdXBTZWxlY3RvcjogXCIucG9wdXAtYm94X3R5cGVfY29uZmlybVwiLFxyXG4gIGhhbmRsZVN1Ym1pdFJlbW92ZUNvbmZpcm0sXHJcbn0pO1xyXG5jb25zdCBwcm9maWxlVXNlciA9IG5ldyBVc2VySW5mbyh7XHJcbiAgbmFtZUVsbTogXCIucHJvZmlsZV9fbmFtZVwiLFxyXG4gIGpvYkVsbTogXCIucHJvZmlsZV9fYWJvdXQtbWVcIixcclxuICBwaWNFbG06IFwiLnByb2ZpbGVfX2F2YXRhci1jb3ZlclwiLFxyXG59KTtcclxuY29uc3QgY2hhbmdlUHJvZmlsZVBpY1BvcHVwID0gbmV3IFBvcHVwV2l0aEZvcm0oXHJcbiAgXCIucG9wdXAtYm94X3R5cGVfY2hhbmdlLXByb2ZpbGUtcGljXCIsXHJcbiAgaGFuZGxlU3VibWl0UHJvZmlsZVBpY1xyXG4pO1xyXG5jb25zdCBhcGkgPSBuZXcgQXBpKGFwaUNvbmZpbmcpO1xyXG5vbkluaXQoKTtcclxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2VjdGlvbiB7XHJcbiAgY29uc3RydWN0b3IoeyByZW5kZXJlciwgY29udGFpbmVyU2VsZWN0b3IgfSkge1xyXG4gICAgdGhpcy5fcmVuZGVyZXIgPSByZW5kZXJlcjtcclxuICAgIHRoaXMuX2NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoY29udGFpbmVyU2VsZWN0b3IpO1xyXG4gIH1cclxuXHJcbiAgcmVuZGVySXRlbXMoKSB7XHJcbiAgICB0aGlzLl9pdGVtcy5mb3JFYWNoKChpdGVtKSA9PiB0aGlzLl9yZW5kZXJlcihpdGVtKSk7XHJcbiAgfVxyXG5cclxuICBhZGRJdGVtKGVsKSB7XHJcbiAgICB0aGlzLl9jb250YWluZXIucHJlcGVuZChlbCk7XHJcbiAgfVxyXG4gIHNldE5ld0l0ZW1saXN0KGl0ZW1zKSB7XHJcbiAgICB0aGlzLl9pdGVtcyA9IGl0ZW1zO1xyXG4gICAgdGhpcy5yZW5kZXJJdGVtcygpO1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEltYWdlIGV4dGVuZHMgUG9wdXAge1xyXG4gIGNvbnN0cnVjdG9yKHsgcG9wdXBTZWxlY3RvciwgaW1nU2VsZWN0b3IsIGltZ1RpdGxlU2VsZWN0b3IgfSkge1xyXG4gICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XHJcbiAgICB0aGlzLl9pbWdFbGVtZW50ID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoaW1nU2VsZWN0b3IpO1xyXG4gICAgdGhpcy5fdGl0bGVFbGVtZW50ID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoaW1nVGl0bGVTZWxlY3Rvcik7XHJcbiAgfVxyXG5cclxuICBfc2V0UG9wdXBJbWcoKSB7XHJcbiAgICB0aGlzLl90aXRsZUVsZW1lbnQudGV4dENvbnRlbnQgPSB0aGlzLnRpdGxlO1xyXG4gICAgdGhpcy5faW1nRWxlbWVudC5zcmMgPSB0aGlzLl9saW5rO1xyXG4gICAgdGhpcy5faW1nRWxlbWVudC5hbHQgPSBgYSBwaWN0cnVlIG9mICR7dGhpcy50aXRsZX1gO1xyXG4gIH1cclxuXHJcbiAgb3Blbih0aXRsZSwgbGluaykge1xyXG4gICAgdGhpcy50aXRsZSA9IHRpdGxlO1xyXG4gICAgdGhpcy5fbGluayA9IGxpbms7XHJcbiAgICB0aGlzLl9zZXRQb3B1cEltZygpO1xyXG4gICAgc3VwZXIub3BlbigpO1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXBcIjtcclxuaW1wb3J0IHsgbW9kaWZ5RWxlbWVudFRleHQgfSBmcm9tIFwiLi4vdXRpbHMvdXRpbHNcIjtcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBDb25maXJtIGV4dGVuZHMgUG9wdXAge1xyXG4gIGNvbnN0cnVjdG9yKHsgcG9wdXBTZWxlY3RvciwgaGFuZGxlU3VibWl0UmVtb3ZlQ29uZmlybSB9KSB7XHJcbiAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcclxuICAgIHRoaXMuX2hhbmRsZVN1Ym1pdFJlbW92ZUNvbmZpcm0gPSBoYW5kbGVTdWJtaXRSZW1vdmVDb25maXJtO1xyXG4gICAgdGhpcy5fc3VibWl0QnRuRWxlbWVudCA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgICBcIi5wb3B1cC1ib3hfX3N1Ym1pdC1idXR0b25cIlxyXG4gICAgKTtcclxuICAgIHRoaXMuX21vZGlmeUVsZW1lbnRUZXh0ID0gbW9kaWZ5RWxlbWVudFRleHQ7XHJcbiAgfVxyXG4gIG9wZW4oaWQsIGVsZW1lbnQpIHtcclxuICAgIHN1cGVyLm9wZW4oKTtcclxuICAgIHRoaXMuX2VsZW1lbnQgPSBlbGVtZW50O1xyXG4gICAgdGhpcy5faWQgPSBpZDtcclxuICB9XHJcbiAgaGFuZGxlTG9hZGluZyh0eHQgPSBcIlNhdmluZy4uLlwiLCBpc0RvbmUgPSBmYWxzZSkge1xyXG4gICAgdGhpcy5fc3VibWl0QnRuRWxlbWVudC5kaXNhYmxlZCA9ICFpc0RvbmUgPyB0cnVlIDogZmFsc2U7XHJcbiAgICB0aGlzLl9tb2RpZnlFbGVtZW50VGV4dCh0aGlzLl9zdWJtaXRCdG5FbGVtZW50LCB0eHQpO1xyXG4gIH1cclxuXHJcbiAgX2hhbmRsZUNvbmZpcm1TdWJtaXQgPSAoZSkgPT4ge1xyXG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgdGhpcy5faGFuZGxlU3VibWl0UmVtb3ZlQ29uZmlybSh0aGlzLl9pZCwgdGhpcy5fZWxlbWVudCk7XHJcbiAgfTtcclxuXHJcbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICB0aGlzLl9zdWJtaXRCdG5FbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0aGlzLl9oYW5kbGVDb25maXJtU3VibWl0KTtcclxuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgfVxyXG59XHJcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFVzZXJJbmZvIHtcclxuICBjb25zdHJ1Y3Rvcih7IG5hbWVFbG0sIGpvYkVsbSwgcGljRWxtIH0pIHtcclxuICAgIHRoaXMuX25hbWVFbG0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKG5hbWVFbG0pO1xyXG4gICAgdGhpcy5fam9iRWxtID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihqb2JFbG0pO1xyXG4gICAgdGhpcy5fcGljRWxtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihwaWNFbG0pO1xyXG4gIH1cclxuXHJcbiAgc2V0VXNlckluZm8oeyBuYW1lLCBhYm91dCwgX2lkIH0pIHtcclxuICAgIHRoaXMuX25hbWVFbG0udGV4dENvbnRlbnQgPSBuYW1lO1xyXG4gICAgdGhpcy5fam9iRWxtLnRleHRDb250ZW50ID0gYWJvdXQ7XHJcbiAgICB0aGlzLl91c2VySWQgPSBfaWQ7XHJcbiAgfVxyXG4gIGdldFVzZXJJbmZvKCkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgbmFtZUluZm86IHRoaXMuX25hbWVFbG0udGV4dENvbnRlbnQsXHJcbiAgICAgIGFib3V0TWVJbmZvOiB0aGlzLl9qb2JFbG0udGV4dENvbnRlbnQsXHJcbiAgICB9O1xyXG4gIH1cclxuICBnZXRVc2VySWQoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5fdXNlcklkO1xyXG4gIH1cclxuICBzZXRQaWN0dXJlUHJvZmlsZShwaWNTcmMpIHtcclxuICAgIHRoaXMuX3BpY0VsbS5zdHlsZS5iYWNrZ3JvdW5kSW1hZ2UgPSBgdXJsKFwiJHtwaWNTcmN9XCIpYDtcclxuICB9XHJcbn1cclxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQXBpIHtcclxuICBjb25zdHJ1Y3Rvcih7IGJhc2VVcmwsIGhlYWRlcnMgfSkge1xyXG4gICAgdGhpcy5oZWFkZXJzID0gaGVhZGVycztcclxuICAgIHRoaXMuYmFzZVVybCA9IGJhc2VVcmw7XHJcbiAgfVxyXG4gIF9vbkh0dHBSZXF1ZXN0KHVybCwgbWV0aG9kLCBkYXRhKSB7XHJcbiAgICBjb25zdCBmdWxsVXJsID0gYCR7dGhpcy5iYXNlVXJsfSR7dXJsfWA7XHJcbiAgICByZXR1cm4gZmV0Y2goZnVsbFVybCwge1xyXG4gICAgICBtZXRob2QsXHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuaGVhZGVycyxcclxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoZGF0YSksXHJcbiAgICB9KS50aGVuKChyZXMpID0+IHtcclxuICAgICAgaWYgKHJlcy5vaykge1xyXG4gICAgICAgIHJldHVybiByZXMuanNvbigpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChgRXJyb3I6ICR7cmVzLnN0YXR1c31gKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfVxyXG4gIGdldEluaXRJbmZvKCkge1xyXG4gICAgcmV0dXJuIFByb21pc2UuYWxsKFt0aGlzLl9nZXRJbml0aWFsQ2FyZHMoKSwgdGhpcy5fZ2V0VXNlckluZm8oKV0pO1xyXG4gIH1cclxuICBfZ2V0VXNlckluZm8oKSB7XHJcbiAgICByZXR1cm4gdGhpcy5fb25IdHRwUmVxdWVzdChcInVzZXJzL21lXCIsIFwiR0VUXCIpO1xyXG4gIH1cclxuICBfZ2V0SW5pdGlhbENhcmRzKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuX29uSHR0cFJlcXVlc3QoXCJjYXJkc1wiLCBcIkdFVFwiKTtcclxuICB9XHJcblxyXG4gIHNldFVzZXJJbmZvKHsgbmFtZSwgYWJvdXQgfSkge1xyXG4gICAgcmV0dXJuIHRoaXMuX29uSHR0cFJlcXVlc3QoXCJ1c2Vycy9tZVwiLCBcIlBBVENIXCIsIHsgbmFtZSwgYWJvdXQgfSk7XHJcbiAgfVxyXG4gIGFkZE5ld0NhcmQoeyBuYW1lLCBsaW5rIH0pIHtcclxuICAgIHJldHVybiB0aGlzLl9vbkh0dHBSZXF1ZXN0KFwiY2FyZHNcIiwgXCJQT1NUXCIsIHsgbmFtZSwgbGluayB9KTtcclxuICB9XHJcbiAgb25SZW1vdmVJdGVtKGlkKSB7XHJcbiAgICByZXR1cm4gdGhpcy5fb25IdHRwUmVxdWVzdChgY2FyZHMvJHtpZH1gLCBcIkRFTEVURVwiKTtcclxuICB9XHJcbiAgYWRkSXRlbUxpa2UoaWQpIHtcclxuICAgIHJldHVybiB0aGlzLl9vbkh0dHBSZXF1ZXN0KGBjYXJkcy9saWtlcy8ke2lkfWAsIFwiUFVUXCIpO1xyXG4gIH1cclxuICByZW1vdmVJdGVtTGlrZShpZCkge1xyXG4gICAgcmV0dXJuIHRoaXMuX29uSHR0cFJlcXVlc3QoYGNhcmRzL2xpa2VzLyR7aWR9YCwgXCJERUxFVEVcIik7XHJcbiAgfVxyXG4gIG9uVXBkYXRlUHJvZmlsZVBpYyh7IGF2YXRhciB9KSB7XHJcbiAgICByZXR1cm4gdGhpcy5fb25IdHRwUmVxdWVzdChcInVzZXJzL21lL2F2YXRhclwiLCBcIlBBVENIXCIsIHsgYXZhdGFyIH0pO1xyXG4gIH1cclxufVxyXG4iLCJjb25zdCBhcGlDb25maW5nID0ge1xyXG4gIGJhc2VVcmw6IFwiaHR0cHM6Ly9hcm91bmQubm9tb3JlcGFydGllcy5jby92MS9ncm91cC0xMi9cIixcclxuICBoZWFkZXJzOiB7XHJcbiAgICBhdXRob3JpemF0aW9uOiBcIjAzNWEzZTgwLTBkM2YtNDIxYi1iNGZhLTdmNDA2ZTQ5YWQ1ZlwiLFxyXG4gICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXHJcbiAgfSxcclxufTtcclxuZXhwb3J0IHsgYXBpQ29uZmluZyB9O1xyXG4iXSwibmFtZXMiOlsiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwidW5kZWZpbmVkIiwiZXhwb3J0cyIsIm1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJwIiwiRm9ybVZhbGlkYXRvciIsImNvbnN0cnVjdG9yIiwic2V0dGluZ3MiLCJmb3JtIiwidGhpcyIsIl9mb3JtU2VsZWN0b3IiLCJmb3JtU2VsZWN0b3IiLCJfaW5wdXRTZWxlY3RvciIsImlucHV0U2VsZWN0b3IiLCJfZXJyb3JDbGFzcyIsImVycm9yQ2xhc3MiLCJfaW5hY3RpdmVCdXR0b25DbGFzcyIsImluYWN0aXZlQnV0dG9uQ2xhc3MiLCJfaW5wdXRFcnJvckNsYXNzIiwiaW5wdXRFcnJvckNsYXNzIiwiX3N1Ym1pdEJ1dHRvblNlbGVjdG9yIiwic3VibWl0QnV0dG9uU2VsZWN0b3IiLCJfZm9ybSIsIl9zZXRGb3JtTGlzdGVuZXJzIiwiX2lucHV0TGlzdCIsIkFycmF5IiwiZnJvbSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJfYnV0dG9uRWxlbWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJfdG9nZ2xlQnV0dG9uU3RhdGUiLCJmb3JFYWNoIiwiaW5wdXRFbGVtZW50IiwiYWRkRXZlbnRMaXN0ZW5lciIsIl9jaGVja0lucHV0VmFsaWRpdHkiLCJfZ2V0RWxlbWVudFR4dCIsInR5cGUiLCJpZCIsIl9zaG93SW5wdXRFcnJvciIsImVycm9yRWxlbWVudCIsImNsYXNzTGlzdCIsImFkZCIsInRleHRDb250ZW50IiwidmFsaWRhdGlvbk1lc3NhZ2UiLCJfcmVtb3ZlSW5wdXRFcnJvciIsInJlbW92ZSIsInZhbGlkaXR5IiwidmFsaWQiLCJyZXNldFZhbGlkYXRpb24iLCJyZXNldCIsIl9oYXNJbnZhbGlkSW5wdXQiLCJkaXNhYmxlZCIsInNvbWUiLCJpbnB1dCIsImVuYWJsZVZhbGlkYXRpb24iLCJlIiwicHJldmVudERlZmF1bHQiLCJnZXRSYW5kb21TdHJpbmciLCJsZW5ndGgiLCJnZXRSYW5kb21JbnQiLCJjaGFycyIsInNwbGl0IiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwic3RyIiwiaSIsIkRhdGUiLCJub3ciLCJtaW4iLCJtYXgiLCJtb2RpZnlFbGVtZW50VGV4dCIsImVsZW1lbnQiLCJ0eHQiLCJDYXJkIiwiaGFuZGxlSW1hZ2VDbGljayIsIm9wZW5SZW1vdmVJdGVtUG9wdXAiLCJoYW5kbGVMaWtlZFRvZ2dsZSIsImdldFVzZXJJZCIsImNhcmRTZWxlY3RvciIsIm5hbWUiLCJsaW5rIiwiX2lkIiwib3duZXIiLCJsaWtlcyIsImlzT3duZXIiLCJfcGxhY2VMaWtlQW1vdW50IiwiX2xpa2VzIiwiX2lzTGlrZWQiLCJfcGxhY2VMaWtlQnRuIiwiaXNJbml0IiwiX2lzTGlrZWRCeUN1cnJVc2VyIiwiX3JlbmRlckxpa2VzIiwiX2dldFVzZXJJZCIsImZpbmQiLCJsaWtlIiwiX25hbWUiLCJfbGluayIsIl9oYW5kbGVJbWFnZUNsaWNrIiwiX29wZW5SZW1vdmVJdGVtUG9wdXAiLCJfY2FyZFNlbGVjdG9yIiwiX2lzT3duZXIiLCJfaGFuZGxlTGlrZWRUb2dnbGUiLCJfb3duZXIiLCJfZ2V0VGVtcGxhdGUiLCJkb2N1bWVudCIsImNvbnRlbnQiLCJjbG9uZU5vZGUiLCJfaGFuZGxlVG9nZ2xlTGlrZWRCdG4iLCJzdG9wUHJvcGFnYXRpb24iLCJfaGFuZGxlUmVtb3ZlSXRlbSIsIl9jYXJkSXRlbSIsIl9zZXRFdmVudExpc3RlbmVycyIsImdlbmVyYXRlQ2FyZCIsIl9wbGFjZUltZyIsIl9wbGFjZVJlbW92ZUJ0biIsIm9uVXBkYXRlTGlrZXMiLCJzdHlsZSIsImJhY2tncm91bmRJbWFnZSIsImFsdCIsIlBvcHVwIiwicG9wdXBTZWxlY3RvciIsImtleSIsImNsb3NlIiwiX3BvcHVwRWxlbWVudCIsIm9wZW4iLCJfaGFuZGxlRXNjQ2xvc2UiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwic2V0RXZlbnRMaXN0ZW5lcnMiLCJ0YXJnZXQiLCJjb250YWlucyIsIlBvcHVwV2l0aEZvcm0iLCJoYW5kbGVTdWJtaXRGcm9tIiwic3VwZXIiLCJfaGFuZGxlU3VibWl0RnJvbSIsIl9yZXR1cm5JbnB1dFZhbE9iaiIsIl9mb3JtRWxlbWVudCIsIl9mb3JtQnRuIiwiX21vZGlmeUVsZW1lbnRUZXh0IiwiaGFuZGxlTG9hZGluZyIsImlzRG9uZSIsInZhbElucHV0T2JqIiwiaXRlbSIsInZhbHVlIiwiX2hhbmRsZUZvcm1TdWJtaXQiLCJmb3JtVmFsaWRhdG9ycyIsIm9wZW5FZGl0VXNlclBvcHVwQnRuIiwib3BlbkFkZFBsYWNlc1BvcHVwQnRuIiwib3BlbkNoYW5nZVByb2ZpbGVQb3B1cEJ0biIsInR4dEVyciIsIm5hbWVJbnB1dCIsImFib3V0TWVJbnB1dCIsIm9wZW5DaGFuZ2VQcm9maWxlUG9wdXAiLCJjaGFuZ2VQcm9maWxlUGljUG9wdXAiLCJvcGVuQWRkUHJvZmlsZVBvcHVwIiwiYWRkUG9wdXAiLCJvcGVuRWRpdFByb2ZpbGVQb3B1cCIsImVkaXRQb3B1cCIsIm5hbWVJbmZvIiwiYWJvdXRNZUluZm8iLCJmaWxsUHJvZmlsZUZvcm0iLCJwcm9maWxlVXNlciIsImdldFVzZXJJbmZvIiwib3BlbkltZ1BvcHVwIiwidGl0bGUiLCJuZXdJbWdQb3B1cCIsImNhcmRJdGVtIiwiZGVsZXRlQ29uZmlybVBvcHVwIiwiaXNMaWtlZCIsImFwaSIsInJlbW92ZUl0ZW1MaWtlIiwidGhlbiIsInJlcyIsImNhdGNoIiwiZXJyIiwiY29uc29sZSIsImxvZyIsImFkZEl0ZW1MaWtlIiwic2V0TG9hZGluZ0luaXQiLCJzdGF0dXMiLCJjYXJkSXRlbXNBcnIiLCJ1c2VySW5mbyIsInNldFVzZXJJbmZvIiwiYWJvdXQiLCJzZXRQaWN0dXJlUHJvZmlsZSIsInNwaW5uZXJHaWYiLCJjYXJkc0xpc3QiLCJzZXROZXdJdGVtbGlzdCIsImlubmVySFRNTCIsImF2YXRhciIsInJlbmRlckNhcmQiLCJjYXJkSW5mbyIsImFkZEl0ZW0iLCJjcmVhdGVQbGFjZUl0ZW0iLCJyZW5kZXJlciIsImNvbnRhaW5lclNlbGVjdG9yIiwiX3JlbmRlcmVyIiwiX2NvbnRhaW5lciIsInJlbmRlckl0ZW1zIiwiX2l0ZW1zIiwiZWwiLCJwcmVwZW5kIiwiaXRlbXMiLCJkYXRhIiwibmFtZV9pbnB1dCIsImFib3V0X21lIiwic2V0VGltZW91dCIsImZpbmFsbHkiLCJ0aXRsZV9wbGFjZSIsImltZ19saW5rIiwiYWRkTmV3Q2FyZCIsImltZ1NlbGVjdG9yIiwiaW1nVGl0bGVTZWxlY3RvciIsIl9pbWdFbGVtZW50IiwiX3RpdGxlRWxlbWVudCIsIl9zZXRQb3B1cEltZyIsInNyYyIsImhhbmRsZVN1Ym1pdFJlbW92ZUNvbmZpcm0iLCJfaGFuZGxlU3VibWl0UmVtb3ZlQ29uZmlybSIsIl9lbGVtZW50IiwiX3N1Ym1pdEJ0bkVsZW1lbnQiLCJfaGFuZGxlQ29uZmlybVN1Ym1pdCIsIm9uUmVtb3ZlSXRlbSIsIm5hbWVFbG0iLCJqb2JFbG0iLCJwaWNFbG0iLCJfbmFtZUVsbSIsIl9qb2JFbG0iLCJfcGljRWxtIiwiX3VzZXJJZCIsInBpY1NyYyIsIm9uVXBkYXRlUHJvZmlsZVBpYyIsImJ0biIsImJhc2VVcmwiLCJoZWFkZXJzIiwiX29uSHR0cFJlcXVlc3QiLCJ1cmwiLCJtZXRob2QiLCJmdWxsVXJsIiwiZmV0Y2giLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsIm9rIiwianNvbiIsIlByb21pc2UiLCJyZWplY3QiLCJnZXRJbml0SW5mbyIsImFsbCIsIl9nZXRJbml0aWFsQ2FyZHMiLCJfZ2V0VXNlckluZm8iLCJhdXRob3JpemF0aW9uIiwidmFsaWRhdG9yIiwiZm9ybU5hbWUiXSwic291cmNlUm9vdCI6IiJ9