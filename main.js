!function(){"use strict";var t={855:function(t,e,s){t.exports=s.p+"images/spinner_svg.dc4086388e55820fbae1.svg"}},e={};function s(n){var i=e[n];if(void 0!==i)return i.exports;var o=e[n]={exports:{}};return t[n](o,o.exports,s),o.exports}s.p="",function(){class t{constructor(t,e){this._formSelector=t.formSelector,this._inputSelector=t.inputSelector,this._errorClass=t.errorClass,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._submitButtonSelector=t.submitButtonSelector,this._form=e}_setFormListeners(){this._inputList=Array.from(this._form.querySelectorAll(this._inputSelector)),this._buttonElement=this._form.querySelector(this._submitButtonSelector),this._toggleButtonState(),this._inputList.forEach((t=>{t.addEventListener("input",(()=>{this._checkInputValidity(t),this._toggleButtonState()}))}))}_showInputError(t){const e=this._form.querySelector(".".concat(t.id,"-error"));t.classList.add(this._inputErrorClass),e.textContent=t.validationMessage,e.classList.add(this._errorClass)}_removeInputError(t){const e=this._form.querySelector(".".concat(t.id,"-error"));t.classList.remove(this._inputErrorClass),e.textContent="",e.classList.remove(this._errorClass)}_checkInputValidity(t){t.validity.valid?this._removeInputError(t):this._showInputError(t)}resetValidation(){this._toggleButtonState(),this._inputList.forEach((t=>{this._removeInputError(t)}));const t=this._form.querySelector(".popup-box__submit-button");t.disabled=!0,t.classList.add("popup-box__submit-button_inactive"),this._form.reset()}_toggleButtonState(){this._hasInvalidInput()?(this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1)}_hasInvalidInput(){return this._inputList.some((t=>!t.validity.valid))}enableValidation(){this._setFormListeners(),this._form.addEventListener("submit",(t=>t.preventDefault()))}}class e{constructor(t,e,s){const{name:n,link:i}=t;this._name=n,this._link=i,this._handleImageClick=e,this._cardSelector=s}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".places__item").cloneNode(!0)}_handleToggleLikedBtn(t){t.stopPropagation(),this._placeLikeBtn.classList.toggle("places__like-btn__active")}_handleRemoveItem(t){t.stopPropagation(),this._cardItem.remove(),this._cardItem=null}_setEventListeners(){"Loading..."===this._name&&"images/spinner_svg.dc4086388e55820fbae1.svg"===this._link||(this._cardItem.addEventListener("click",(()=>{this._handleImageClick(this._name,this._link)})),this._placeLikeBtn.addEventListener("click",(t=>{this._handleToggleLikedBtn(t)})),this._cardItem.querySelector(".places__remove-btn").addEventListener("click",(t=>{this._handleRemoveItem(t)})))}generateCard(){return this._cardItem=this._getTemplate(),this._placeImg=this._cardItem.querySelector(".places__img"),this._placeLikeBtn=this._cardItem.querySelector(".places__like-btn"),this._setEventListeners(),this._placeImg.style.backgroundImage="url(".concat(this._link,")"),this._placeImg.alt="a photo of ".concat(this._name),this._cardItem.querySelector(".places__name").textContent="".concat(this._name),this._cardItem}}class n{constructor(t){var e,s;s=t=>{"Escape"==t.key&&this.close()},(e="_handleEscClose")in this?Object.defineProperty(this,e,{value:s,enumerable:!0,configurable:!0,writable:!0}):this[e]=s,this._popupElement=document.querySelector(t)}open(){this._popupElement.classList.add("popup-box_visible"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("popup-box_visible"),document.removeEventListener("keydown",this._handleEscClose)}setEventListeners(){this._popupElement.addEventListener("mousedown",(t=>{(t.target.classList.contains("popup-box_visible")||t.target.classList.contains("popup-box__close-button"))&&this.close()}))}}class i extends n{constructor(t,e){var s,n;super(t),n=t=>{t.preventDefault(),this._handleSubmitFrom(this._returnInputValObj()),this.close()},(s="_handleFormSubmit")in this?Object.defineProperty(this,s,{value:n,enumerable:!0,configurable:!0,writable:!0}):this[s]=n,this._handleSubmitFrom=e,this._formElement=this._popupElement.querySelector(".popup-box__form"),this._inputList=[...this._formElement.querySelectorAll(".popup-box__input")]}_returnInputValObj(){const t={};return this._inputList.forEach((e=>{t[e.name]=e.value})),t}open(){super.open()}close(){super.close(),this._formElement.reset()}setEventListeners(){this._formElement.addEventListener("submit",this._handleFormSubmit),super.setEventListeners()}}var o=s(855);const r={},a=document.querySelector(".profile__edit-btn"),l=document.querySelector(".profile__add-btn"),c=document.querySelector('input[name="name_input"]'),u=document.querySelector('input[name="about_me"]');function _(t){return new e(t,h,"#places-item-template").generateCard()}function p(){r["form_add-place"].resetValidation(),E.open()}function m(){r["form_profile-edit"].resetValidation(),f.open();const{nameInfo:t,aboutMeInfo:e}=g.getUserInfo();c.value=t,u.value=e}function h(t,e){v.open(t,e)}function d(t,e,s){t?(g.setUserInfo({name:"Loading...",about:"Loading...",_id:null}),g.setPictureProfile(o),b.setNewItemlist([{name:"Loading...",link:o}])):(document.querySelector(".places__grid-container").innerHTML="",g.setUserInfo({name:s.name,about:s.about,_id:s._id}),g.setPictureProfile(s.avatar),b.setNewItemlist(e))}const b=new class{constructor(t,e){this._renderer=t,this._container=document.querySelector(e)}renderItems(){this._items.forEach((t=>this._renderer(t)))}addItem(t){this._container.prepend(t)}setNewItemlist(t){this._items=t,this.renderItems()}}((function(t){b.addItem(_(t))}),".places__grid-container"),f=new i(".popup-box_type_profile-edit",(function(t){let{name_input:e,about_me:s}=t;r["form_add-place"].resetValidation(),I.setUserInfo({name:e,about:s}).then((t=>{g.setUserInfo(t)}))})),E=new i(".popup-box_type_add-item",(function(t){let{title_place:e,img_link:s}=t;b.addItem(_({name:e,link:s}))})),v=new class extends n{constructor(t){let{popupSelector:e,imgSelector:s,imgTitleSelector:n}=t;super(e),this._imgElement=this._popupElement.querySelector(s),this._titleElement=this._popupElement.querySelector(n)}_setPopupImg(){this._titleElement.textContent=this.title,this._imgElement.src=this._link,this._imgElement.alt="a pictrue of ".concat(this.title)}open(t,e){this.title=t,this._link=e,this._setPopupImg(),super.open()}}({popupSelector:".popup-box_type_img",imgSelector:".popup-box__img",imgTitleSelector:".popup-box__img-title"}),g=new class{constructor(t){let{nameElm:e,jobElm:s,picElm:n}=t;this._nameElm=document.querySelector(e),this._jobElm=document.querySelector(s),this._picElm=document.querySelector(n)}setUserInfo(t){let{name:e,about:s,_id:n}=t;this._nameElm.textContent=e,this._jobElm.textContent=s,this._userId=n}getUserInfo(){return{nameInfo:this._nameElm.textContent,aboutMeInfo:this._jobElm.textContent}}setPictureProfile(t){this._picElm.src=t}}({nameElm:".profile__name",jobElm:".profile__about-me",picElm:".profile__avatar"}),I=new class{constructor(t){let{baseUrl:e,headers:s}=t;this.headers=s,this.baseUrl=e}_onHttpRequest(t,e,s){const n="".concat(this.baseUrl).concat(t);return fetch(n,{method:e,headers:this.headers,body:JSON.stringify(s)}).then((t=>t.ok?t.json():Promise.reject("Error: ".concat(t.status))))}getInitInfo(){return Promise.all([this._getInitialCards(),this._getUserInfo()])}_getUserInfo(){return this._onHttpRequest("users/me","GET")}_getInitialCards(){return this._onHttpRequest("cards","GET")}setUserInfo(t){let{name:e,about:s}=t;return this._onHttpRequest("users/me","PATCH",{name:e,about:s})}addNewCard(t){let{name:e,link:s}=t;return this._onHttpRequest("cards","post",{name:e,link:s})}}({baseUrl:"https://around.nomoreparties.co/v1/group-12/",headers:{authorization:"035a3e80-0d3f-421b-b4fa-7f406e49ad5f","Content-Type":"application/json"}});d(!0),I.getInitInfo().then((e=>{let[s,n]=e;var i;d(!1,s,n),a.addEventListener("click",m),l.addEventListener("click",p),i={formSelector:".popup-box__form",inputSelector:".popup-box__input",submitButtonSelector:".popup-box__submit-button",inactiveButtonClass:"popup-box__submit-button_inactive",inputErrorClass:".popup-box__input_type_error",errorClass:".popup-box__input-error_active"},Array.from(document.querySelectorAll(i.formSelector)).forEach((e=>{const s=new t(i,e),n=e.name;r[n]=s,s.enableValidation()})),f.setEventListeners(),E.setEventListeners(),v.setEventListeners()})).catch((t=>{console.log(t)}))}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,