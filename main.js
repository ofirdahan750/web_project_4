!function(){"use strict";var e={855:function(e,t,n){e.exports=n.p+"images/spinner_svg.dc4086388e55820fbae1.svg"}},t={};function n(i){var o=t[i];if(void 0!==o)return o.exports;var s=t[i]={exports:{}};return e[i](s,s.exports,n),s.exports}n.p="",function(){console.log(5);class e{constructor(e,t){this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._errorClass=e.errorClass,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._submitButtonSelector=e.submitButtonSelector,this._form=t}_setFormListeners(){this._inputList=Array.from(this._form.querySelectorAll(this._inputSelector)),this._buttonElement=this._form.querySelector(this._submitButtonSelector),this._toggleButtonState(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}_getElementTxt(e){return"url"===e.type?"".concat(e.type,"-input"):e.id}_showInputError(e){const t=this._form.querySelector(".".concat(this._getElementTxt(e),"-error"));e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_removeInputError(e){const t=this._form.querySelector(".".concat(this._getElementTxt(e),"-error"));e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){e.validity.valid?this._removeInputError(e):this._showInputError(e)}resetValidation(){this._toggleButtonState(),this._inputList.forEach((e=>{this._removeInputError(e)})),this._form.reset(),this._toggleButtonState()}_toggleButtonState(){this._hasInvalidInput()?(this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1)}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}enableValidation(){this._setFormListeners(),this._form.addEventListener("submit",(e=>e.preventDefault()))}}function t(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:i(),t="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghiklmnopqrstuvwxyz".split("");e||(e=Math.floor(Math.random()*t.length));let n="";for(let i=0;i<e;i++)n+=t[Math.floor(Math.random()*t.length)];return n+=Date.now(),n+Date.now()}function i(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:100,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:150;return Math.floor(Math.random()*(t-e+1))+e}function o(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";e.textContent=t}function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}class r{constructor(e,n,i,o,r,l,a){var c=this;let{name:u,link:_,_id:h,owner:m}=e,{likes:d,isOwner:p}=l;s(this,"_renderLikes",(()=>{this._placeLikeAmount.textContent=this._likes.length,this._isLiked()?this._placeLikeBtn.classList.add("places__like-btn__active"):this._placeLikeBtn.classList.remove("places__like-btn__active")})),s(this,"onUpdateLikes",(function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];c._likes=e,c._renderLikes()})),this._name=u,this._link=_,this._handleImageClick=n,this._getUserId=r,this._openRemoveItemPopup=i,this._cardSelector=a,this._likes=d||[],this._isOwner=p||!1,this._id=h||t(),this._handleLikedToggle=o,this._owner=m,this._isLiked=()=>{if(!this._likes.length)return;const e=this._getUserId();return this._likes.some((t=>t._id===e))||!1}}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".places__item").cloneNode(!0)}_handleToggleLikedBtn(e){e.stopPropagation(),this._handleLikedToggle(this._isLiked(),this,this._id)}_handleRemoveItem(e){e.stopPropagation(),this._openRemoveItemPopup(this._id,this._cardItem)}_setEventListeners(){this._cardItem.addEventListener("click",(()=>{this._handleImageClick(this._name,this._link)})),this._placeLikeBtn.addEventListener("click",(e=>{this._handleToggleLikedBtn(e)})),this._cardItem.querySelector(".places__remove-btn").addEventListener("click",(e=>{this._handleRemoveItem(e)}))}generateCard(){return this._cardItem=this._getTemplate(),this._placeImg=this._cardItem.querySelector(".places__img"),this._placeLikeBtn=this._cardItem.querySelector(".places__like-btn"),this._placeLikeAmount=this._cardItem.querySelector(".places__like-counter"),this._placeRemoveBtn=this._cardItem.querySelector(".places__remove-btn"),this._renderLikes(),"Loading..."!==this._name&&"images/spinner_svg.dc4086388e55820fbae1.svg"!==this._link&&this._setEventListeners(),this._isOwner||this._placeRemoveBtn.remove(),this._placeImg.style.backgroundImage="url(".concat(this._link,")"),this._placeImg.alt="a photo of ".concat(this._name),this._cardItem.querySelector(".places__name").textContent="".concat(this._name),this._cardItem}}function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}class a{constructor(e){l(this,"_handleEscClose",(e=>{"Escape"==e.key&&this.close()})),l(this,"_handleContextMenu",(e=>{e.preventDefault()})),this._popupElement=document.querySelector(e)}open(){this._popupElement.classList.add("popup-box_visible"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("popup-box_visible"),document.removeEventListener("keydown",this._handleEscClose)}setEventListeners(){this._popupElement.addEventListener("mousedown",(e=>{(e.target.classList.contains("popup-box_visible")||e.target.classList.contains("popup-box__close-button"))&&this.close()}))}}class c extends a{constructor(e,t){var n,i;super(e),i=e=>{e.preventDefault(),this._handleSubmitFrom(this._returnInputValObj())},(n="_handleFormSubmit")in this?Object.defineProperty(this,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):this[n]=i,this._handleSubmitFrom=t,this._formElement=this._popupElement.querySelector(".popup-box__form"),this._formBtn=this._formElement.querySelector(".popup-box__submit-button"),this._inputList=[...this._formElement.querySelectorAll(".popup-box__input")],this._modifyElementText=o}handleLoading(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"Saving...",t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this._formBtn.disabled=!t,this._modifyElementText(this._formBtn,e)}_returnInputValObj(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}close(){super.close(),this._formElement.reset()}setEventListeners(){this._formElement.addEventListener("submit",this._handleFormSubmit),super.setEventListeners()}}var u=n(855);const _={},h=document.querySelector(".profile__edit-btn"),m=document.querySelector(".profile__add-btn"),d=document.querySelector(".profile__avatar-cover"),p="Something went wrong, please try again later ",f=document.querySelector('input[name="name_input"]'),g=document.querySelector('input[name="about_me"]');function v(){_["form_change-profile-pic"].resetValidation(),U.open()}function b(){_["form_add-place"].resetValidation(),w.open()}function E(){_["form_profile-edit"].resetValidation(),q.open(),function(e){let{nameInfo:t,aboutMeInfo:n}=e;f.value=t,g.value=n}(B.getUserInfo())}function L(e,t){P.open(e,t)}function S(e,t){T.open(e,t)}function I(){return B.getUserId()}function k(e,t,n){e?R.removeItemLike(n).then((e=>{t.onUpdateLikes(e.likes)})).catch((e=>console.log("Error: ".concat(e)))):R.addItemLike(n).then((e=>{t.onUpdateLikes(e.likes)})).catch((e=>console.log("Error: ".concat(e))))}function y(e,n,i){e?(B.setUserInfo({name:"Loading...",about:"Loading...",_id:t()}),B.setPictureProfile(u),C.setNewItemlist([{name:"Loading...",link:u,owner:{_id:t()},likes:[]}])):(document.querySelector(".places__grid-container").innerHTML="",B.setUserInfo({name:i.name,about:i.about,_id:i._id}),B.setPictureProfile(i.avatar),C.setNewItemlist(n),h.addEventListener("click",E),m.addEventListener("click",b),d.addEventListener("click",v))}function x(e,t){C.addItem(function(e,t){return new r(e,L,S,k,I,t,"#places-item-template").generateCard()}(e,t))}const C=new class{constructor(e){let{renderer:t,containerSelector:n}=e;this._renderer=t,this._container=document.querySelector(n)}renderItems(){this._items.forEach((e=>this._renderer(e)))}addItem(e){this._container.prepend(e)}setNewItemlist(e){this._items=e,this.renderItems()}}({renderer:e=>{const{owner:t,likes:n}=e,i=I();x(e,{isOwner:t._id===i,likes:n})},containerSelector:".places__grid-container"}),q=new c(".popup-box_type_profile-edit",(function(e){let{name_input:t,about_me:n}=e;_["form_add-place"].resetValidation(),q.handleLoading(),R.setUserInfo({name:t,about:n}).then((e=>{q.handleLoading("Profile edited successfully!"),B.setUserInfo(e),setTimeout((()=>{q.close()}),1e3)})).catch((e=>{q.handleLoading(p),console.log("Error: ".concat(e))})).finally((()=>{setTimeout((()=>{q.handleLoading("Save",!0)}),1800)}))}),"Save"),w=new c(".popup-box_type_add-item",(function(e){let{title_place:t,img_link:n}=e;w.handleLoading(),R.addNewCard({name:t,link:n}).then((e=>{w.handleLoading("Place added successfully!"),x(e,{isOwner:!0,likes:[]}),setTimeout((()=>{w.close()}),1e3)})).catch((e=>{w.handleLoading(p),console.log("Error: ".concat(e))})).finally((()=>{setTimeout((()=>{w.handleLoading("Create",!0)}),1800)}))})),P=new class extends a{constructor(e){let{popupSelector:t,imgSelector:n,imgTitleSelector:i}=e;super(t),this._imgElement=this._popupElement.querySelector(n),this._titleElement=this._popupElement.querySelector(i)}_setPopupImg(){this._titleElement.textContent=this.title,this._imgElement.src=this._link,this._imgElement.alt="a pictrue of ".concat(this.title)}open(e,t){this.title=e,this._link=t,this._setPopupImg(),super.open()}}({popupSelector:".popup-box_type_img",imgSelector:".popup-box__img",imgTitleSelector:".popup-box__img-title"}),T=new class extends a{constructor(e){let{popupSelector:t,handleSubmitRemoveConfirm:n}=e;var i,s;super(t),s=e=>{e.preventDefault(),this._handleSubmitRemoveConfirm(this._id,this._element)},(i="_handleConfirmSubmit")in this?Object.defineProperty(this,i,{value:s,enumerable:!0,configurable:!0,writable:!0}):this[i]=s,this._handleSubmitRemoveConfirm=n,this._submitBtnElement=this._popupElement.querySelector(".popup-box__submit-button"),this._modifyElementText=o}open(e,t){super.open(),this._element=t,this._id=e}handleLoading(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"Saving...",t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this._submitBtnElement.disabled=!t,this._modifyElementText(this._submitBtnElement,e)}setEventListeners(){this._submitBtnElement.addEventListener("click",this._handleConfirmSubmit),super.setEventListeners()}}({popupSelector:".popup-box_type_confirm",handleSubmitRemoveConfirm:function(e,t){T.handleLoading(),R.onRemoveItem(e).then((()=>{T.handleLoading("Place removed successfully!"),t.remove(),setTimeout((()=>{T.close()}),1e3)})).catch((e=>{T.handleLoading(p),console.log("Error: ".concat(e))})).finally((()=>{setTimeout((()=>{T.handleLoading("Yes",!0)}),1050)}))}}),B=new class{constructor(e){let{nameElm:t,jobElm:n,picElm:i}=e;this._nameElm=document.querySelector(t),this._jobElm=document.querySelector(n),this._picElm=document.querySelector(i)}setUserInfo(e){let{name:t,about:n,_id:i}=e;this._nameElm.textContent=t,this._jobElm.textContent=n,this._userId=i}getUserInfo(){return{nameInfo:this._nameElm.textContent,aboutMeInfo:this._jobElm.textContent}}getUserId(){return this._userId}setPictureProfile(e){this._picElm.style.backgroundImage='url("'.concat(e,'")')}}({nameElm:".profile__name",jobElm:".profile__about-me",picElm:".profile__avatar-cover"}),U=new c(".popup-box_type_change-profile-pic",(function(e){let{img_link:t}=e;U.handleLoading(),R.onUpdateProfilePic({avatar:t}).then((()=>{U.handleLoading("Profile Picture modified successfully!"),B.setPictureProfile(t),setTimeout((()=>{U.close()}),1e3)})).catch((e=>{U.handleLoading(p),console.log("Error: ".concat(e))})).finally((()=>{setTimeout((()=>{U.handleLoading("Save",!0)}),1e3)}))})),R=new class{constructor(e){let{baseUrl:t,headers:n}=e;this.headers=n,this.baseUrl=t}_onHttpRequest(e,t,n){const i="".concat(this.baseUrl).concat(e);return fetch(i,{method:t,headers:this.headers,body:JSON.stringify(n)}).then((e=>e.ok?e.json():Promise.reject("Error: ".concat(e.status))))}getInitInfo(){return Promise.all([this._getInitialCards(),this._getUserInfo()])}_getUserInfo(){return this._onHttpRequest("users/me","GET")}_getInitialCards(){return this._onHttpRequest("cards","GET")}setUserInfo(e){let{name:t,about:n}=e;return this._onHttpRequest("users/me","PATCH",{name:t,about:n})}addNewCard(e){let{name:t,link:n}=e;return this._onHttpRequest("cards","POST",{name:t,link:n})}onRemoveItem(e){return this._onHttpRequest("cards/".concat(e),"DELETE")}addItemLike(e){return this._onHttpRequest("cards/likes/".concat(e),"PUT")}removeItemLike(e){return this._onHttpRequest("cards/likes/".concat(e),"DELETE")}onUpdateProfilePic(e){let{avatar:t}=e;return this._onHttpRequest("users/me/avatar","PATCH",{avatar:t})}}({baseUrl:"https://around.nomoreparties.co/v1/group-12/",headers:{authorization:"035a3e80-0d3f-421b-b4fa-7f406e49ad5f","Content-Type":"application/json"}});y(!0),R.getInitInfo().then((t=>{let[n,i]=t;var o;y(!1,n,i),o={formSelector:".popup-box__form",inputSelector:".popup-box__input",submitButtonSelector:".popup-box__submit-button",inactiveButtonClass:"popup-box__submit-button_inactive",inputErrorClass:".popup-box__input_type_error",errorClass:".popup-box__input-error_active"},Array.from(document.querySelectorAll(o.formSelector)).forEach((t=>{const n=new e(o,t),i=t.name;_[i]=n,n.enableValidation()})),q.setEventListeners(),w.setEventListeners(),P.setEventListeners(),T.setEventListeners(),U.setEventListeners()})).catch((e=>console.log("Error: ".concat(e))))}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,