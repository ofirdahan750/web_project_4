!function(){"use strict";var e={855:function(e,t,s){e.exports=s.p+"images/spinner_svg.dc4086388e55820fbae1.svg"}},t={};function s(n){var i=t[n];if(void 0!==i)return i.exports;var o=t[n]={exports:{}};return e[n](o,o.exports,s),o.exports}s.p="",function(){class e{constructor(e,t){this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._errorClass=e.errorClass,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._submitButtonSelector=e.submitButtonSelector,this._form=t}_setFormListeners(){this._inputList=Array.from(this._form.querySelectorAll(this._inputSelector)),this._buttonElement=this._form.querySelector(this._submitButtonSelector),this._toggleButtonState(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}_showInputError(e){const t=this._form.querySelector(".".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_removeInputError(e){const t=this._form.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){e.validity.valid?this._removeInputError(e):this._showInputError(e)}resetValidation(){this._toggleButtonState(),this._inputList.forEach((e=>{this._removeInputError(e)}));const e=this._form.querySelector(".popup-box__submit-button");e.disabled=!0,e.classList.add("popup-box__submit-button_inactive"),this._form.reset()}_toggleButtonState(){this._hasInvalidInput()?(this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1)}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}enableValidation(){this._setFormListeners(),this._form.addEventListener("submit",(e=>e.preventDefault()))}}function t(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:n(),t="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghiklmnopqrstuvwxyz".split("");e||(e=Math.floor(Math.random()*t.length));let s="";for(let n=0;n<e;n++)s+=t[Math.floor(Math.random()*t.length)];return s}function n(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:100,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:150;return Math.floor(Math.random()*(t-e+1))+e}class i{constructor(e,s,n,i,o){const{name:r,link:l,_id:a}=e,{likes:c,isOwner:u,likedByCurrUser:_}=i;this._name=r,this._link=l,this._handleImageClick=s,this._openRemoveItemPopup=n,this._cardSelector=o,this._likes=c||[],this._isOwner=u||!1,this._likedByCurrUser=_,this._id=a||t()}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".places__item").cloneNode(!0)}_handleToggleLikedBtn(e){e.stopPropagation(),this._placeLikeBtn.classList.toggle("places__like-btn__active")}_handleRemoveItem(e){e.stopPropagation(),this._openRemoveItemPopup(this._id,this._cardItem)}_setEventListeners(){this._cardItem.addEventListener("click",(()=>{this._handleImageClick(this._name,this._link)})),this._placeLikeBtn.addEventListener("click",(e=>{this._handleToggleLikedBtn(e)})),this._cardItem.querySelector(".places__remove-btn").addEventListener("click",(e=>{this._handleRemoveItem(e)}))}generateCard(){return this._cardItem=this._getTemplate(),this._placeImg=this._cardItem.querySelector(".places__img"),this._placeLikeBtn=this._cardItem.querySelector(".places__like-btn"),this._placeRemoveBtn=this._cardItem.querySelector(".places__remove-btn"),"Loading..."!==this._name&&"images/spinner_svg.dc4086388e55820fbae1.svg"!==this._link&&this._setEventListeners(),this._isOwner||this._placeRemoveBtn.remove(),this._likedByCurrUser&&this._placeLikeBtn.classList.add("places__like-btn__active"),this._placeImg.style.backgroundImage="url(".concat(this._link,")"),this._placeImg.alt="a photo of ".concat(this._name),this._cardItem.querySelector(".places__name").textContent="".concat(this._name),this._cardItem.querySelector(".places__like-counter").textContent=this._likes.length,this._cardItem}}function o(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class r{constructor(e){o(this,"_handleEscClose",(e=>{"Escape"==e.key&&this.close()})),o(this,"_handleContextMenu",(e=>{e.preventDefault()})),this._popupElement=document.querySelector(e)}open(){this._popupElement.classList.add("popup-box_visible"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("popup-box_visible"),document.removeEventListener("keydown",this._handleEscClose)}setEventListeners(){this._popupElement.addEventListener("mousedown",(e=>{(e.target.classList.contains("popup-box_visible")||e.target.classList.contains("popup-box__close-button"))&&this.close()}))}}class l extends r{constructor(e,t){var s,n;super(e),n=e=>{e.preventDefault(),this._handleSubmitFrom(this._returnInputValObj()),this.close()},(s="_handleFormSubmit")in this?Object.defineProperty(this,s,{value:n,enumerable:!0,configurable:!0,writable:!0}):this[s]=n,this._handleSubmitFrom=t,this._formElement=this._popupElement.querySelector(".popup-box__form"),this._inputList=[...this._formElement.querySelectorAll(".popup-box__input")]}_returnInputValObj(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}open(){super.open()}close(){super.close(),this._formElement.reset()}setEventListeners(){this._formElement.addEventListener("submit",this._handleFormSubmit),super.setEventListeners()}}var a=s(855);const c={},u=document.querySelector(".profile__edit-btn"),_=document.querySelector(".profile__add-btn"),p=document.querySelector('input[name="name_input"]'),m=document.querySelector('input[name="about_me"]');function h(){c["form_add-place"].resetValidation(),S.open()}function d(){c["form_profile-edit"].resetValidation(),I.open();const{nameInfo:e,aboutMeInfo:t}=k.getUserInfo();p.value=e,m.value=t}function b(e,t){L.open(e,t)}function f(e,t){y.open(e,t)}function v(e,s,n){e?(k.setUserInfo({name:"Loading...",about:"Loading...",_id:t()}),k.setPictureProfile(a),g.setNewItemlist([{name:"Loading...",link:a,owner:{_id:t()},likes:[]}])):(document.querySelector(".places__grid-container").innerHTML="",k.setUserInfo({name:n.name,about:n.about,_id:n._id}),k.setPictureProfile(n.avatar),g.setNewItemlist(s))}function E(e,t){console.log("cardInfo:",t),console.log("item:",e),g.addItem(function(e,t){return new i(e,b,f,t,"#places-item-template").generateCard()}(e,t))}const g=new class{constructor(e){let{renderer:t,containerSelector:s}=e;this._renderer=t,this._container=document.querySelector(s)}renderItems(){this._items.forEach((e=>this._renderer(e)))}addItem(e){this._container.prepend(e)}setNewItemlist(e){this._items=e,this.renderItems()}}({renderer:e=>{const{owner:t,likes:s}=e,n=k.getUserId();E(e,{isOwner:t._id===n,likedByCurrUser:s.find((e=>e._id===n))||!1,likes:s})},containerSelector:".places__grid-container"}),I=new l(".popup-box_type_profile-edit",(function(e){let{name_input:t,about_me:s}=e;c["form_add-place"].resetValidation(),C.setUserInfo({name:t,about:s}).then((e=>{k.setUserInfo(e)}))})),S=new l(".popup-box_type_add-item",(function(e){let{title_place:t,img_link:s}=e;C.addNewCard({name:t,link:s}).then((e=>{E(e,{isOwner:!0,likedByOwner:!1,likes:[]})}))})),L=new class extends r{constructor(e){let{popupSelector:t,imgSelector:s,imgTitleSelector:n}=e;super(t),this._imgElement=this._popupElement.querySelector(s),this._titleElement=this._popupElement.querySelector(n)}_setPopupImg(){this._titleElement.textContent=this.title,this._imgElement.src=this._link,this._imgElement.alt="a pictrue of ".concat(this.title)}open(e,t){this.title=e,this._link=t,this._setPopupImg(),super.open()}}({popupSelector:".popup-box_type_img",imgSelector:".popup-box__img",imgTitleSelector:".popup-box__img-title"}),y=new class extends r{constructor(e){let{popupSelector:t,handleSubmitRemoveConfirm:s}=e;var n,i;super(t),i=e=>{e.preventDefault(),this._handleSubmitRemoveConfirm(this._id,this._element),this.close()},(n="_handleConfirmSubmit")in this?Object.defineProperty(this,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):this[n]=i,this._handleSubmitRemoveConfirm=s,this._submitBtnElement=this._popupElement.querySelector(".popup-box__submit-button")}open(e,t){super.open(),this._element=t,this._id=e}close(){super.close()}setEventListeners(){this._submitBtnElement.addEventListener("click",this._handleConfirmSubmit),super.setEventListeners()}}({popupSelector:".popup-box_type_confirm",handleSubmitRemoveConfirm:function(e,t){C.onRemoveItem(e).then((()=>{t.remove()})).catch((e=>console.log("err: "+e)))}}),k=new class{constructor(e){let{nameElm:t,jobElm:s,picElm:n}=e;this._nameElm=document.querySelector(t),this._jobElm=document.querySelector(s),this._picElm=document.querySelector(n)}setUserInfo(e){let{name:t,about:s,_id:n}=e;this._nameElm.textContent=t,this._jobElm.textContent=s,this.userId=n}getUserInfo(){return{nameInfo:this._nameElm.textContent,aboutMeInfo:this._jobElm.textContent}}getUserId(){return this.userId}setPictureProfile(e){this._picElm.src=e}}({nameElm:".profile__name",jobElm:".profile__about-me",picElm:".profile__avatar"}),C=new class{constructor(e){let{baseUrl:t,headers:s}=e;this.headers=s,this.baseUrl=t}_onHttpRequest(e,t,s){const n="".concat(this.baseUrl).concat(e);return fetch(n,{method:t,headers:this.headers,body:JSON.stringify(s)}).then((e=>e.ok?e.json():Promise.reject("Error: ".concat(e.status))))}getInitInfo(){return Promise.all([this._getInitialCards(),this._getUserInfo()])}_getUserInfo(){return this._onHttpRequest("users/me","GET")}_getInitialCards(){return this._onHttpRequest("cards","GET")}setUserInfo(e){let{name:t,about:s}=e;return this._onHttpRequest("users/me","PATCH",{name:t,about:s})}addNewCard(e){let{name:t,link:s}=e;return this._onHttpRequest("cards","POST",{name:t,link:s})}onRemoveItem(e){return this._onHttpRequest("cards/".concat(e),"DELETE")}}({baseUrl:"https://around.nomoreparties.co/v1/group-12/",headers:{authorization:"035a3e80-0d3f-421b-b4fa-7f406e49ad5f","Content-Type":"application/json"}});v(!0),C.getInitInfo().then((t=>{let[s,n]=t;var i;v(!1,s,n),u.addEventListener("click",d),_.addEventListener("click",h),i={formSelector:".popup-box__form",inputSelector:".popup-box__input",submitButtonSelector:".popup-box__submit-button",inactiveButtonClass:"popup-box__submit-button_inactive",inputErrorClass:".popup-box__input_type_error",errorClass:".popup-box__input-error_active"},Array.from(document.querySelectorAll(i.formSelector)).forEach((t=>{const s=new e(i,t),n=t.name;c[n]=s,s.enableValidation()})),I.setEventListeners(),S.setEventListeners(),L.setEventListeners(),y.setEventListeners()})).catch((e=>{console.log(e)}))}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFDdEksS0FBQUEsRUFBS0MsS0FBQUEsSUFFbER3SCxhQUFhOUosR0FDWCxPQUFPNUIsS0FBS3VNLGVBQUwsZ0JBQTZCM0ssR0FBSyxZQ3BDMUIsQ0FDakJ5SyxRQUFTLCtDQUNUQyxRQUFTLENBQ1RpQixjQUFlLHVDQUNiLGVBQWdCLHNCTm9IbEJoRixHQUFlLEdBQ2ZnQyxFQUNHNEMsY0FDQTNDLE1BQUssSUFBOEIsSUFBNUIvQixFQUFjQyxHQUFjLEVBM0Z4QyxJQUEwQjVJLEVBNEZwQnlJLEdBQWUsRUFBT0UsRUFBY0MsR0FDcENwQixFQUFxQjlGLGlCQUFpQixRQUFTb0csR0FDL0NMLEVBQXNCL0YsaUJBQWlCLFFBQVNrRyxHQTlGNUI1SCxFQStGSCxDQUNmSSxhQUFjLG1CQUNkRSxjQUFlLG9CQUNmUSxxQkFBc0IsNEJBQ3RCSixvQkFBcUIsb0NBQ3JCRSxnQkFBaUIsK0JBQ2pCSixXQUFZLGtDQXBHQVUsTUFBTUMsS0FDdEIrRCxTQUFTOUQsaUJBQWlCcEIsRUFBU0ksZUFHM0JvQixTQUFTdkIsSUFDakIsTUFBTXlOLEVBQVcsSUFBSTVOLEVBQWNFLEVBQVVDLEdBQ3ZDME4sRUFBVzFOLEVBQUtrRSxLQUN0Qm9ELEVBQWVvRyxHQUFZRCxFQUMzQkEsRUFBUzVLLHNCQXVHWGlGLEVBQVVyQixvQkFDVm1CLEVBQVNuQixvQkFDVDRCLEVBQVk1QixvQkFDWjhCLEVBQW1COUIsdUJBVGhCbUYsT0FBT0MsSUFDTnZDLFFBQVFDLElBQUlzQyxNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80L3dlYnBhY2svcnVudGltZS9wdWJsaWNQYXRoIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvdXRpbHMvdXRpbHMuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9jb21wb25lbnRzL0NhcmQuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9jb21wb25lbnRzL1BvcHVwLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvdXRpbHMvY29uc3RhbnRzLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvcGFnZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9jb21wb25lbnRzL1NlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvY29tcG9uZW50cy9Qb3B1cENvbmZpcm0uanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9jb21wb25lbnRzL1VzZXJJbmZvLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvdXRpbHMvQXBpLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9jb25maWcuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHQvLyBubyBtb2R1bGUuaWQgbmVlZGVkXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIl9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7IiwiZXhwb3J0IGNsYXNzIEZvcm1WYWxpZGF0b3Ige1xyXG4gIGNvbnN0cnVjdG9yKHNldHRpbmdzLCBmb3JtKSB7XHJcbiAgICB0aGlzLl9mb3JtU2VsZWN0b3IgPSBzZXR0aW5ncy5mb3JtU2VsZWN0b3I7XHJcbiAgICB0aGlzLl9pbnB1dFNlbGVjdG9yID0gc2V0dGluZ3MuaW5wdXRTZWxlY3RvcjtcclxuICAgIHRoaXMuX2Vycm9yQ2xhc3MgPSBzZXR0aW5ncy5lcnJvckNsYXNzO1xyXG4gICAgdGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyA9IHNldHRpbmdzLmluYWN0aXZlQnV0dG9uQ2xhc3M7XHJcbiAgICB0aGlzLl9pbnB1dEVycm9yQ2xhc3MgPSBzZXR0aW5ncy5pbnB1dEVycm9yQ2xhc3M7XHJcbiAgICB0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3RvciA9IHNldHRpbmdzLnN1Ym1pdEJ1dHRvblNlbGVjdG9yO1xyXG4gICAgdGhpcy5fZm9ybSA9IGZvcm07XHJcbiAgfVxyXG4gIF9zZXRGb3JtTGlzdGVuZXJzKCkge1xyXG4gICAgdGhpcy5faW5wdXRMaXN0ID0gQXJyYXkuZnJvbShcclxuICAgICAgdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yQWxsKHRoaXMuX2lucHV0U2VsZWN0b3IpXHJcbiAgICApO1xyXG4gICAgdGhpcy5fYnV0dG9uRWxlbWVudCA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3Rvcih0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3Rvcik7XHJcbiAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSgpO1xyXG4gICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0RWxlbWVudCkgPT4ge1xyXG4gICAgICBpbnB1dEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImlucHV0XCIsICgpID0+IHtcclxuICAgICAgICB0aGlzLl9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXRFbGVtZW50KTtcclxuICAgICAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSgpO1xyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gIH1cclxuICBfc2hvd0lucHV0RXJyb3IoaW5wdXRFbGVtZW50KSB7XHJcbiAgICBjb25zdCBlcnJvckVsZW1lbnQgPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3IoYC4ke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgKTtcclxuICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XHJcbiAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBpbnB1dEVsZW1lbnQudmFsaWRhdGlvbk1lc3NhZ2U7XHJcbiAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9lcnJvckNsYXNzKTtcclxuICB9XHJcblxyXG4gIF9yZW1vdmVJbnB1dEVycm9yKGlucHV0RWxlbWVudCkge1xyXG4gICAgY29uc3QgZXJyb3JFbGVtZW50ID0gdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yKGAuJHtpbnB1dEVsZW1lbnQuaWR9LWVycm9yYCk7XHJcbiAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpO1xyXG4gICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gXCJcIjtcclxuICAgIGVycm9yRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2Vycm9yQ2xhc3MpO1xyXG4gIH1cclxuXHJcbiAgX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dEVsZW1lbnQpIHtcclxuICAgIGlmIChpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQpIHtcclxuICAgICAgdGhpcy5fcmVtb3ZlSW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpO1xyXG4gICAgfSBlbHNlIHRoaXMuX3Nob3dJbnB1dEVycm9yKGlucHV0RWxlbWVudCk7XHJcbiAgfVxyXG5cclxuICByZXNldFZhbGlkYXRpb24oKSB7XHJcbiAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSgpO1xyXG4gICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0RWxlbWVudCkgPT4ge1xyXG4gICAgICB0aGlzLl9yZW1vdmVJbnB1dEVycm9yKGlucHV0RWxlbWVudCk7XHJcbiAgICB9KTtcclxuICAgIGNvbnN0IGJ0bkZvcm1FbG0gPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXAtYm94X19zdWJtaXQtYnV0dG9uXCIpO1xyXG4gICAgYnRuRm9ybUVsbS5kaXNhYmxlZCA9IHRydWU7XHJcbiAgICBidG5Gb3JtRWxtLmNsYXNzTGlzdC5hZGQoXCJwb3B1cC1ib3hfX3N1Ym1pdC1idXR0b25faW5hY3RpdmVcIik7XHJcbiAgICB0aGlzLl9mb3JtLnJlc2V0KCk7XHJcbiAgfVxyXG4gIF90b2dnbGVCdXR0b25TdGF0ZSgpIHtcclxuICAgIGlmICh0aGlzLl9oYXNJbnZhbGlkSW5wdXQoKSkge1xyXG4gICAgICB0aGlzLl9idXR0b25FbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyk7XHJcbiAgICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuZGlzYWJsZWQgPSB0cnVlO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5fYnV0dG9uRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MpO1xyXG4gICAgICB0aGlzLl9idXR0b25FbGVtZW50LmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICB9XHJcbiAgfVxyXG4gIF9oYXNJbnZhbGlkSW5wdXQoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5faW5wdXRMaXN0LnNvbWUoKGlucHV0KSA9PiB7XHJcbiAgICAgIHJldHVybiAhaW5wdXQudmFsaWRpdHkudmFsaWQ7XHJcbiAgICB9KTtcclxuICB9XHJcbiAgZW5hYmxlVmFsaWRhdGlvbigpIHtcclxuICAgIHRoaXMuX3NldEZvcm1MaXN0ZW5lcnMoKTtcclxuICAgIHRoaXMuX2Zvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZSkgPT4gZS5wcmV2ZW50RGVmYXVsdCgpKTtcclxuICB9XHJcbn1cclxuIiwiZnVuY3Rpb24gZ2V0UmFuZG9tU3RyaW5nKGxlbmd0aCA9IGdldFJhbmRvbUludCgpKSB7XHJcbiAgbGV0IGNoYXJzID1cclxuICAgIFwiMDEyMzQ1Njc4OUFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpa2xtbm9wcXJzdHV2d3h5elwiLnNwbGl0KFwiXCIpO1xyXG5cclxuICBpZiAoIWxlbmd0aCkge1xyXG4gICAgbGVuZ3RoID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogY2hhcnMubGVuZ3RoKTtcclxuICB9XHJcblxyXG4gIGxldCBzdHIgPSBcIlwiO1xyXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHtcclxuICAgIHN0ciArPSBjaGFyc1tNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBjaGFycy5sZW5ndGgpXTtcclxuICB9XHJcbiAgcmV0dXJuIHN0cjtcclxufVxyXG5mdW5jdGlvbiBnZXRSYW5kb21JbnQobWluID0gMTAwLCBtYXggPSAxNTApIHtcclxuICByZXR1cm4gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKG1heCAtIG1pbiArIDEpKSArIG1pbjtcclxufVxyXG5cclxuZXhwb3J0IHsgZ2V0UmFuZG9tU3RyaW5nIH07XHJcbiIsImltcG9ydCB7IGdldFJhbmRvbVN0cmluZyB9IGZyb20gXCIuLi91dGlscy91dGlscy5qc1wiO1xyXG5leHBvcnQgY2xhc3MgQ2FyZCB7XHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBkYXRhLFxyXG4gICAgaGFuZGxlSW1hZ2VDbGljayxcclxuICAgIG9wZW5SZW1vdmVJdGVtUG9wdXAsXHJcbiAgICBjYXJkSW5mbyxcclxuICAgIGNhcmRTZWxlY3RvclxyXG4gICkge1xyXG4gICAgY29uc3QgeyBuYW1lLCBsaW5rLCBfaWQgfSA9IGRhdGE7XHJcbiAgICBjb25zdCB7IGxpa2VzLCBpc093bmVyLCBsaWtlZEJ5Q3VyclVzZXIgfSA9IGNhcmRJbmZvO1xyXG4gICAgdGhpcy5fbmFtZSA9IG5hbWU7XHJcbiAgICB0aGlzLl9saW5rID0gbGluaztcclxuICAgIHRoaXMuX2hhbmRsZUltYWdlQ2xpY2sgPSBoYW5kbGVJbWFnZUNsaWNrO1xyXG4gICAgdGhpcy5fb3BlblJlbW92ZUl0ZW1Qb3B1cCA9IG9wZW5SZW1vdmVJdGVtUG9wdXA7XHJcbiAgICB0aGlzLl9jYXJkU2VsZWN0b3IgPSBjYXJkU2VsZWN0b3I7XHJcbiAgICB0aGlzLl9saWtlcyA9IGxpa2VzIHx8IFtdO1xyXG4gICAgdGhpcy5faXNPd25lciA9IGlzT3duZXIgfHwgZmFsc2U7XHJcbiAgICB0aGlzLl9saWtlZEJ5Q3VyclVzZXIgPSBsaWtlZEJ5Q3VyclVzZXI7XHJcbiAgICB0aGlzLl9pZCA9IF9pZCB8fCBnZXRSYW5kb21TdHJpbmcoKTtcclxuICB9XHJcbiAgX2dldFRlbXBsYXRlKCkge1xyXG4gICAgY29uc3QgcGxhY2VJdGVtVGVtcGxhdGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgICB0aGlzLl9jYXJkU2VsZWN0b3JcclxuICAgICkuY29udGVudDtcclxuICAgIGNvbnN0IGNhcmRFbGVtZW50ID0gcGxhY2VJdGVtVGVtcGxhdGVcclxuICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIucGxhY2VzX19pdGVtXCIpXHJcbiAgICAgIC5jbG9uZU5vZGUodHJ1ZSk7XHJcblxyXG4gICAgcmV0dXJuIGNhcmRFbGVtZW50O1xyXG4gIH1cclxuICBfaGFuZGxlVG9nZ2xlTGlrZWRCdG4oZSkge1xyXG4gICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcclxuICAgIHRoaXMuX3BsYWNlTGlrZUJ0bi5jbGFzc0xpc3QudG9nZ2xlKFwicGxhY2VzX19saWtlLWJ0bl9fYWN0aXZlXCIpO1xyXG4gIH1cclxuICBfaGFuZGxlUmVtb3ZlSXRlbShlKSB7XHJcbiAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gICAgLy8gY29uc29sZS5sb2codGhpcy5faXNPd25lcilcclxuICAgIHRoaXMuX29wZW5SZW1vdmVJdGVtUG9wdXAodGhpcy5faWQsIHRoaXMuX2NhcmRJdGVtKTtcclxuICAgIC8vIHRoaXMuX2NhcmRJdGVtLnJlbW92ZSgpO1xyXG4gICAgLy8gdGhpcy5fY2FyZEl0ZW0gPSBudWxsO1xyXG4gIH1cclxuXHJcbiAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgdGhpcy5fY2FyZEl0ZW0uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICAgdGhpcy5faGFuZGxlSW1hZ2VDbGljayh0aGlzLl9uYW1lLCB0aGlzLl9saW5rKTtcclxuICAgIH0pO1xyXG4gICAgdGhpcy5fcGxhY2VMaWtlQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZSkgPT4ge1xyXG4gICAgICB0aGlzLl9oYW5kbGVUb2dnbGVMaWtlZEJ0bihlKTtcclxuICAgIH0pO1xyXG4gICAgdGhpcy5fY2FyZEl0ZW1cclxuICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIucGxhY2VzX19yZW1vdmUtYnRuXCIpXHJcbiAgICAgIC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGUpID0+IHtcclxuICAgICAgICB0aGlzLl9oYW5kbGVSZW1vdmVJdGVtKGUpO1xyXG4gICAgICB9KTtcclxuICB9XHJcblxyXG4gIGdlbmVyYXRlQ2FyZCgpIHtcclxuICAgIHRoaXMuX2NhcmRJdGVtID0gdGhpcy5fZ2V0VGVtcGxhdGUoKTtcclxuICAgIHRoaXMuX3BsYWNlSW1nID0gdGhpcy5fY2FyZEl0ZW0ucXVlcnlTZWxlY3RvcihcIi5wbGFjZXNfX2ltZ1wiKTtcclxuICAgIHRoaXMuX3BsYWNlTGlrZUJ0biA9IHRoaXMuX2NhcmRJdGVtLnF1ZXJ5U2VsZWN0b3IoXCIucGxhY2VzX19saWtlLWJ0blwiKTtcclxuICAgIHRoaXMuX3BsYWNlUmVtb3ZlQnRuID0gdGhpcy5fY2FyZEl0ZW0ucXVlcnlTZWxlY3RvcihcIi5wbGFjZXNfX3JlbW92ZS1idG5cIik7XHJcbiAgICBpZiAoXHJcbiAgICAgIHRoaXMuX25hbWUgIT09IFwiTG9hZGluZy4uLlwiICYmXHJcbiAgICAgIHRoaXMuX2xpbmsgIT09IFwiaW1hZ2VzL3NwaW5uZXJfc3ZnLmRjNDA4NjM4OGU1NTgyMGZiYWUxLnN2Z1wiXHJcbiAgICApIHtcclxuICAgICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICAgIH1cclxuICAgIGlmICghdGhpcy5faXNPd25lcikge1xyXG4gICAgICB0aGlzLl9wbGFjZVJlbW92ZUJ0bi5yZW1vdmUoKTtcclxuICAgIH1cclxuICAgIGlmICh0aGlzLl9saWtlZEJ5Q3VyclVzZXIpIHtcclxuICAgICAgdGhpcy5fcGxhY2VMaWtlQnRuLmNsYXNzTGlzdC5hZGQoXCJwbGFjZXNfX2xpa2UtYnRuX19hY3RpdmVcIik7XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy5fcGxhY2VJbWcuc3R5bGUuYmFja2dyb3VuZEltYWdlID0gYHVybCgke3RoaXMuX2xpbmt9KWA7XHJcbiAgICB0aGlzLl9wbGFjZUltZy5hbHQgPSBgYSBwaG90byBvZiAke3RoaXMuX25hbWV9YDtcclxuICAgIHRoaXMuX2NhcmRJdGVtLnF1ZXJ5U2VsZWN0b3IoXCIucGxhY2VzX19uYW1lXCIpLnRleHRDb250ZW50ID0gYCR7dGhpcy5fbmFtZX1gO1xyXG4gICAgdGhpcy5fY2FyZEl0ZW0ucXVlcnlTZWxlY3RvcihcIi5wbGFjZXNfX2xpa2UtY291bnRlclwiKS50ZXh0Q29udGVudCA9XHJcbiAgICAgIHRoaXMuX2xpa2VzLmxlbmd0aDtcclxuICAgIHJldHVybiB0aGlzLl9jYXJkSXRlbTtcclxuICB9XHJcbn1cclxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXAge1xyXG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcclxuICAgIHRoaXMuX3BvcHVwRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocG9wdXBTZWxlY3Rvcik7XHJcbiAgfVxyXG5cclxuICBfaGFuZGxlRXNjQ2xvc2UgPSAoZSkgPT4ge1xyXG4gICAgaWYgKGUua2V5ID09IFwiRXNjYXBlXCIpIHtcclxuICAgICAgdGhpcy5jbG9zZSgpO1xyXG4gICAgfVxyXG4gIH07XHJcbiAgX2hhbmRsZUNvbnRleHRNZW51ID0gKGUpID0+IHtcclxuICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICB9O1xyXG4gIG9wZW4oKSB7XHJcbiAgICB0aGlzLl9wb3B1cEVsZW1lbnQuY2xhc3NMaXN0LmFkZChcInBvcHVwLWJveF92aXNpYmxlXCIpO1xyXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xyXG4gIH1cclxuXHJcbiAgY2xvc2UoKSB7XHJcbiAgICB0aGlzLl9wb3B1cEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZShcInBvcHVwLWJveF92aXNpYmxlXCIpO1xyXG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xyXG4gIH1cclxuXHJcbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICB0aGlzLl9wb3B1cEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlZG93blwiLCAoZSkgPT4ge1xyXG4gICAgICBpZiAoXHJcbiAgICAgICAgZS50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKFwicG9wdXAtYm94X3Zpc2libGVcIikgfHxcclxuICAgICAgICBlLnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJwb3B1cC1ib3hfX2Nsb3NlLWJ1dHRvblwiKVxyXG4gICAgICApIHtcclxuICAgICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEZvcm0gZXh0ZW5kcyBQb3B1cCB7XHJcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3RvciwgaGFuZGxlU3VibWl0RnJvbSkge1xyXG4gICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XHJcbiAgICB0aGlzLl9oYW5kbGVTdWJtaXRGcm9tID0gaGFuZGxlU3VibWl0RnJvbTtcclxuICAgIHRoaXMuX2Zvcm1FbGVtZW50ID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXAtYm94X19mb3JtXCIpO1xyXG4gICAgdGhpcy5faW5wdXRMaXN0ID0gW1xyXG4gICAgICAuLi50aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLnBvcHVwLWJveF9faW5wdXRcIiksXHJcbiAgICBdO1xyXG4gIH1cclxuXHJcbiAgX2hhbmRsZUZvcm1TdWJtaXQgPSAoZSkgPT4ge1xyXG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgdGhpcy5faGFuZGxlU3VibWl0RnJvbSh0aGlzLl9yZXR1cm5JbnB1dFZhbE9iaigpKTtcclxuICAgIHRoaXMuY2xvc2UoKTtcclxuICB9O1xyXG5cclxuICBfcmV0dXJuSW5wdXRWYWxPYmooKSB7XHJcbiAgICBjb25zdCB2YWxJbnB1dE9iaiA9IHt9O1xyXG4gICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGl0ZW0pID0+IHtcclxuICAgICAgdmFsSW5wdXRPYmpbaXRlbS5uYW1lXSA9IGl0ZW0udmFsdWU7XHJcbiAgICB9KTtcclxuICAgIHJldHVybiB2YWxJbnB1dE9iajtcclxuICB9XHJcbiAgb3BlbigpIHtcclxuICAgIHN1cGVyLm9wZW4oKTtcclxuICB9XHJcbiAgY2xvc2UoKSB7XHJcbiAgICBzdXBlci5jbG9zZSgpO1xyXG4gICAgdGhpcy5fZm9ybUVsZW1lbnQucmVzZXQoKTtcclxuICB9XHJcbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICB0aGlzLl9mb3JtRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQpO1xyXG4gICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICB9XHJcbn1cclxuIiwiY29uc3QgaW5pdGlhbENhcmRzID0gW1xyXG4gIHtcclxuICAgIG5hbWU6IFwiWW9zZW1pdGUgVmFsbGV5XCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vY29kZS5zMy55YW5kZXgubmV0L3dlYi1jb2RlL3lvc2VtaXRlLmpwZ1wiLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgbmFtZTogXCJMYWtlIExvdWlzZVwiLFxyXG4gICAgbGluazogXCJodHRwczovL2NvZGUuczMueWFuZGV4Lm5ldC93ZWItY29kZS9sYWtlLWxvdWlzZS5qcGdcIixcclxuICB9LFxyXG4gIHtcclxuICAgIG5hbWU6IFwiQmFsZCBNb3VudGFpbnNcIixcclxuICAgIGxpbms6IFwiaHR0cHM6Ly9jb2RlLnMzLnlhbmRleC5uZXQvd2ViLWNvZGUvYmFsZC1tb3VudGFpbnMuanBnXCIsXHJcbiAgfSxcclxuICB7XHJcbiAgICBuYW1lOiBcIkxhdGVtYXJcIixcclxuICAgIGxpbms6IFwiaHR0cHM6Ly9jb2RlLnMzLnlhbmRleC5uZXQvd2ViLWNvZGUvbGF0ZW1hci5qcGdcIixcclxuICB9LFxyXG4gIHtcclxuICAgIG5hbWU6IFwiVmFub2lzZSBOYXRpb25hbCBQYXJrXCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vY29kZS5zMy55YW5kZXgubmV0L3dlYi1jb2RlL3Zhbm9pc2UuanBnXCIsXHJcbiAgfSxcclxuICB7XHJcbiAgICBuYW1lOiBcIkxhZ28gZGkgQnJhaWVzXCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vY29kZS5zMy55YW5kZXgubmV0L3dlYi1jb2RlL2xhZ28uanBnXCIsXHJcbiAgfSxcclxuICB7XHJcbiAgICBuYW1lOiBcIkJlZXJzaGViYSBUdXJraXNoIHJhaWx3YXkgc3RhdGlvblwiLFxyXG4gICAgbGluazogXCJodHRwczovL3VwbG9hZC53aWtpbWVkaWEub3JnL3dpa2lwZWRpYS9jb21tb25zL3RodW1iL2QvZGUvJUQ3JTlFJUQ3JUFBJUQ3JTk3JUQ3JTlEXyVENyVBQSVENyU5NyVENyVBMCVENyVBQV8lRDclOTQlRDclQTglRDclOUIlRDclOTElRDclQUFfJUQ3JTk0JUQ3JTk4JUQ3JTk1JUQ3JUE4JUQ3JUE3JUQ3JTk5JUQ3JUFBXyVENyU5MSVENyU5MSVENyU5MCVENyVBOF8lRDclQTklRDclOTElRDclQTIuanBnLzEyODBweC0lRDclOUUlRDclQUElRDclOTclRDclOURfJUQ3JUFBJUQ3JTk3JUQ3JUEwJUQ3JUFBXyVENyU5NCVENyVBOCVENyU5QiVENyU5MSVENyVBQV8lRDclOTQlRDclOTglRDclOTUlRDclQTglRDclQTclRDclOTklRDclQUFfJUQ3JTkxJUQ3JTkxJUQ3JTkwJUQ3JUE4XyVENyVBOSVENyU5MSVENyVBMi5qcGdcIixcclxuICB9LFxyXG4gIFxyXG5dO1xyXG5jb25zdCBmb3JtVmFsaWRhdG9ycyA9IHt9O1xyXG5cclxuY29uc3Qgb3BlbkVkaXRVc2VyUG9wdXBCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2VkaXQtYnRuXCIpO1xyXG5jb25zdCBvcGVuQWRkUGxhY2VzUG9wdXBCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2FkZC1idG5cIik7XHJcblxyXG5jb25zdCBuYW1lSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdpbnB1dFtuYW1lPVwibmFtZV9pbnB1dFwiXScpO1xyXG5jb25zdCBhYm91dE1lSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdpbnB1dFtuYW1lPVwiYWJvdXRfbWVcIl0nKTtcclxuXHJcbmV4cG9ydCB7XHJcbiAgYWJvdXRNZUlucHV0LFxyXG4gIG5hbWVJbnB1dCxcclxuICBpbml0aWFsQ2FyZHMsXHJcbiAgb3BlbkVkaXRVc2VyUG9wdXBCdG4sXHJcbiAgb3BlbkFkZFBsYWNlc1BvcHVwQnRuLFxyXG4gIGZvcm1WYWxpZGF0b3JzLFxyXG59O1xyXG4iLCJpbXBvcnQgXCIuL2luZGV4LmNzc1wiO1xyXG5pbXBvcnQgeyBhcGlDb25maW5nIH0gZnJvbSBcIi4uLy4uL2NvbmZpZy5qc1wiO1xyXG5pbXBvcnQgeyBGb3JtVmFsaWRhdG9yIH0gZnJvbSBcIi4uL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qc1wiO1xyXG5pbXBvcnQgeyBDYXJkIH0gZnJvbSBcIi4uL2NvbXBvbmVudHMvQ2FyZC5qc1wiO1xyXG5pbXBvcnQgU2VjdGlvbiBmcm9tIFwiLi4vY29tcG9uZW50cy9TZWN0aW9uLmpzXCI7XHJcbmltcG9ydCBQb3B1cFdpdGhGb3JtIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanNcIjtcclxuaW1wb3J0IFBvcHVwV2l0aEltYWdlIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzXCI7XHJcbmltcG9ydCBVc2VySW5mbyBmcm9tIFwiLi4vY29tcG9uZW50cy9Vc2VySW5mby5qc1wiO1xyXG5pbXBvcnQgQXBpIGZyb20gXCIuLi91dGlscy9BcGkuanNcIjtcclxuaW1wb3J0IHNwaW5uZXJHaWYgZnJvbSBcIi4uL2ltYWdlcy9wcm9maWxlL3NwaW5uZXJfc3ZnLnN2Z1wiO1xyXG5pbXBvcnQgeyBnZXRSYW5kb21TdHJpbmcgfSBmcm9tIFwiLi4vdXRpbHMvdXRpbHMuanNcIjtcclxuXHJcbmltcG9ydCB7XHJcbiAgYWJvdXRNZUlucHV0LFxyXG4gIG5hbWVJbnB1dCxcclxuICBpbml0aWFsQ2FyZHMsXHJcbiAgb3BlbkVkaXRVc2VyUG9wdXBCdG4sXHJcbiAgb3BlbkFkZFBsYWNlc1BvcHVwQnRuLFxyXG4gIGZvcm1WYWxpZGF0b3JzLFxyXG59IGZyb20gXCIuLi91dGlscy9jb25zdGFudHMuanNcIjtcclxuaW1wb3J0IFBvcHVwQ29uZmlybSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cENvbmZpcm1cIjtcclxuZnVuY3Rpb24gY3JlYXRlUGxhY2VJdGVtKGl0ZW0sIGNhcmRJbmZvKSB7XHJcbiAgY29uc3QgbmV3Q2FyZCA9IG5ldyBDYXJkKFxyXG4gICAgaXRlbSxcclxuICAgIG9wZW5JbWdQb3B1cCxcclxuICAgIG9wZW5SZW1vdmVJdGVtUG9wdXAsXHJcbiAgICBjYXJkSW5mbyxcclxuICAgIFwiI3BsYWNlcy1pdGVtLXRlbXBsYXRlXCJcclxuICApO1xyXG4gIHJldHVybiBuZXdDYXJkLmdlbmVyYXRlQ2FyZCgpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBlbmFibGVWYWxpZGF0aW9uKHNldHRpbmdzKSB7XHJcbiAgY29uc3QgZm9ybUl0ZW1zID0gQXJyYXkuZnJvbShcclxuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoc2V0dGluZ3MuZm9ybVNlbGVjdG9yKVxyXG4gICk7XHJcblxyXG4gIGZvcm1JdGVtcy5mb3JFYWNoKChmb3JtKSA9PiB7XHJcbiAgICBjb25zdCBuZXdWYWlsZCA9IG5ldyBGb3JtVmFsaWRhdG9yKHNldHRpbmdzLCBmb3JtKTtcclxuICAgIGNvbnN0IGZvcm1OYW1lID0gZm9ybS5uYW1lO1xyXG4gICAgZm9ybVZhbGlkYXRvcnNbZm9ybU5hbWVdID0gbmV3VmFpbGQ7XHJcbiAgICBuZXdWYWlsZC5lbmFibGVWYWxpZGF0aW9uKCk7XHJcbiAgfSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIG9wZW5BZGRQcm9maWxlUG9wdXAoKSB7XHJcbiAgZm9ybVZhbGlkYXRvcnNbXCJmb3JtX2FkZC1wbGFjZVwiXS5yZXNldFZhbGlkYXRpb24oKTtcclxuICBBZGRQb3B1cC5vcGVuKCk7XHJcbn1cclxuZnVuY3Rpb24gb3BlbkVkaXRQcm9maWxlUG9wdXAoKSB7XHJcbiAgZm9ybVZhbGlkYXRvcnNbXCJmb3JtX3Byb2ZpbGUtZWRpdFwiXS5yZXNldFZhbGlkYXRpb24oKTtcclxuICBFZGl0UG9wdXAub3BlbigpO1xyXG4gIGNvbnN0IHsgbmFtZUluZm8sIGFib3V0TWVJbmZvIH0gPSBwcm9maWxlVXNlci5nZXRVc2VySW5mbygpO1xyXG4gIG5hbWVJbnB1dC52YWx1ZSA9IG5hbWVJbmZvO1xyXG4gIGFib3V0TWVJbnB1dC52YWx1ZSA9IGFib3V0TWVJbmZvO1xyXG59XHJcbmZ1bmN0aW9uIG9wZW5JbWdQb3B1cCh0aXRsZSwgbGluaykge1xyXG4gIE5ld0ltZ1BvcHVwLm9wZW4odGl0bGUsIGxpbmspO1xyXG59XHJcbmZ1bmN0aW9uIG9wZW5SZW1vdmVJdGVtUG9wdXAoaWQsIGNhcmRJdGVtKSB7XHJcbiAgRGVsZXRlQ29uZmlybVBvcHVwLm9wZW4oaWQsIGNhcmRJdGVtKTtcclxufVxyXG5mdW5jdGlvbiBoYW5kbGVTdWJtaXRBZGRJdGVtKHsgdGl0bGVfcGxhY2U6IG5hbWUsIGltZ19saW5rOiBsaW5rIH0pIHtcclxuICBhcGlcclxuICAgIC5hZGROZXdDYXJkKHtcclxuICAgICAgbmFtZSxcclxuICAgICAgbGluayxcclxuICAgIH0pXHJcbiAgICAudGhlbigocmVzKSA9PiB7XHJcbiAgICAgIGNvbnN0IGNhcmRJbmZvID0ge1xyXG4gICAgICAgIGlzT3duZXI6IHRydWUsXHJcbiAgICAgICAgbGlrZWRCeU93bmVyOiBmYWxzZSxcclxuICAgICAgICBsaWtlczogW10sXHJcbiAgICAgIH07XHJcbiAgICAgIHJlbmRlckNhcmQocmVzLCBjYXJkSW5mbyk7XHJcbiAgICB9KTtcclxufVxyXG5mdW5jdGlvbiBoYW5kbGVTdWJtaXRSZW1vdmVDb25maXJtKGlkLCBlbGVtZW50KSB7XHJcbiAgYXBpXHJcbiAgICAub25SZW1vdmVJdGVtKGlkKVxyXG4gICAgLnRoZW4oKCkgPT4ge1xyXG4gICAgICBlbGVtZW50LnJlbW92ZSgpO1xyXG4gICAgfSlcclxuICAgIC5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLmxvZyhcImVycjogXCIgKyBlcnIpKTtcclxufVxyXG5mdW5jdGlvbiBoYW5kbGVTdWJtaXRFZGl0UHJvZmlsZSh7IG5hbWVfaW5wdXQsIGFib3V0X21lIH0pIHtcclxuICBmb3JtVmFsaWRhdG9yc1tcImZvcm1fYWRkLXBsYWNlXCJdLnJlc2V0VmFsaWRhdGlvbigpO1xyXG4gIGFwaS5zZXRVc2VySW5mbyh7IG5hbWU6IG5hbWVfaW5wdXQsIGFib3V0OiBhYm91dF9tZSB9KS50aGVuKChyZXMpID0+IHtcclxuICAgIHByb2ZpbGVVc2VyLnNldFVzZXJJbmZvKHJlcyk7XHJcbiAgfSk7XHJcbn1cclxuZnVuY3Rpb24gc2V0TG9hZGluZ0luaXQoc3RhdHVzLCBjYXJkSXRlbXNBcnIsIHVzZXJJbmZvKSB7XHJcbiAgaWYgKHN0YXR1cykge1xyXG4gICAgcHJvZmlsZVVzZXIuc2V0VXNlckluZm8oe1xyXG4gICAgICBuYW1lOiBcIkxvYWRpbmcuLi5cIixcclxuICAgICAgYWJvdXQ6IFwiTG9hZGluZy4uLlwiLFxyXG4gICAgICBfaWQ6IGdldFJhbmRvbVN0cmluZygpLFxyXG4gICAgfSk7XHJcbiAgICBwcm9maWxlVXNlci5zZXRQaWN0dXJlUHJvZmlsZShzcGlubmVyR2lmKTtcclxuICAgIGNhcmRzTGlzdC5zZXROZXdJdGVtbGlzdChbXHJcbiAgICAgIHtcclxuICAgICAgICBuYW1lOiBcIkxvYWRpbmcuLi5cIixcclxuICAgICAgICBsaW5rOiBzcGlubmVyR2lmLFxyXG4gICAgICAgIG93bmVyOiB7IF9pZDogZ2V0UmFuZG9tU3RyaW5nKCkgfSxcclxuICAgICAgICBsaWtlczogW10sXHJcbiAgICAgIH0sXHJcbiAgICBdKTtcclxuICB9IGVsc2Uge1xyXG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wbGFjZXNfX2dyaWQtY29udGFpbmVyXCIpLmlubmVySFRNTCA9IFwiXCI7XHJcbiAgICBwcm9maWxlVXNlci5zZXRVc2VySW5mbyh7XHJcbiAgICAgIG5hbWU6IHVzZXJJbmZvLm5hbWUsXHJcbiAgICAgIGFib3V0OiB1c2VySW5mby5hYm91dCxcclxuICAgICAgX2lkOiB1c2VySW5mby5faWQsXHJcbiAgICB9KTtcclxuICAgIHByb2ZpbGVVc2VyLnNldFBpY3R1cmVQcm9maWxlKHVzZXJJbmZvLmF2YXRhcik7XHJcblxyXG4gICAgY2FyZHNMaXN0LnNldE5ld0l0ZW1saXN0KGNhcmRJdGVtc0Fycik7XHJcbiAgfVxyXG59XHJcbmZ1bmN0aW9uIG9uSW5pdCgpIHtcclxuICBzZXRMb2FkaW5nSW5pdCh0cnVlKTtcclxuICBhcGlcclxuICAgIC5nZXRJbml0SW5mbygpXHJcbiAgICAudGhlbigoW2NhcmRJdGVtc0FyciwgdXNlckluZm9dKSA9PiB7XHJcbiAgICAgIHNldExvYWRpbmdJbml0KGZhbHNlLCBjYXJkSXRlbXNBcnIsIHVzZXJJbmZvKTtcclxuICAgICAgb3BlbkVkaXRVc2VyUG9wdXBCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIG9wZW5FZGl0UHJvZmlsZVBvcHVwKTtcclxuICAgICAgb3BlbkFkZFBsYWNlc1BvcHVwQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBvcGVuQWRkUHJvZmlsZVBvcHVwKTtcclxuICAgICAgZW5hYmxlVmFsaWRhdGlvbih7XHJcbiAgICAgICAgZm9ybVNlbGVjdG9yOiBcIi5wb3B1cC1ib3hfX2Zvcm1cIixcclxuICAgICAgICBpbnB1dFNlbGVjdG9yOiBcIi5wb3B1cC1ib3hfX2lucHV0XCIsXHJcbiAgICAgICAgc3VibWl0QnV0dG9uU2VsZWN0b3I6IFwiLnBvcHVwLWJveF9fc3VibWl0LWJ1dHRvblwiLFxyXG4gICAgICAgIGluYWN0aXZlQnV0dG9uQ2xhc3M6IFwicG9wdXAtYm94X19zdWJtaXQtYnV0dG9uX2luYWN0aXZlXCIsXHJcbiAgICAgICAgaW5wdXRFcnJvckNsYXNzOiBcIi5wb3B1cC1ib3hfX2lucHV0X3R5cGVfZXJyb3JcIixcclxuICAgICAgICBlcnJvckNsYXNzOiBcIi5wb3B1cC1ib3hfX2lucHV0LWVycm9yX2FjdGl2ZVwiLFxyXG4gICAgICB9KTtcclxuICAgICAgc2V0UG9wdXBFdmVudCgpO1xyXG4gICAgfSlcclxuXHJcbiAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICBjb25zb2xlLmxvZyhlcnIpO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHNldFBvcHVwRXZlbnQoKSB7XHJcbiAgRWRpdFBvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgQWRkUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICBOZXdJbWdQb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xyXG4gIERlbGV0ZUNvbmZpcm1Qb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xyXG59XHJcbmZ1bmN0aW9uIHJlbmRlckNhcmQoaXRlbSwgY2FyZEluZm8pIHtcclxuICBjb25zb2xlLmxvZygnY2FyZEluZm86JywgY2FyZEluZm8pXHJcbiAgY29uc29sZS5sb2coJ2l0ZW06JywgaXRlbSlcclxuICBjYXJkc0xpc3QuYWRkSXRlbShjcmVhdGVQbGFjZUl0ZW0oaXRlbSwgY2FyZEluZm8pKTtcclxufVxyXG5cclxuY29uc3QgY2FyZHNMaXN0ID0gbmV3IFNlY3Rpb24oe1xyXG4gIHJlbmRlcmVyOiAoZGF0YSkgPT4ge1xyXG4gICAgY29uc3QgeyBvd25lciwgbGlrZXMgfSA9IGRhdGE7XHJcbiAgICBjb25zdCBpZCA9IHByb2ZpbGVVc2VyLmdldFVzZXJJZCgpO1xyXG4gICAgY29uc3QgY2FyZEluZm8gPSB7XHJcbiAgICAgIGlzT3duZXI6IG93bmVyLl9pZCA9PT0gaWQsXHJcbiAgICAgIGxpa2VkQnlDdXJyVXNlcjogbGlrZXMuZmluZCgodXNlcikgPT4gdXNlci5faWQgPT09IGlkKSB8fCBmYWxzZSxcclxuICAgICAgbGlrZXMsXHJcbiAgICB9O1xyXG4gICAgcmVuZGVyQ2FyZChkYXRhLCBjYXJkSW5mbyk7XHJcbiAgfSxcclxuICBjb250YWluZXJTZWxlY3RvcjogXCIucGxhY2VzX19ncmlkLWNvbnRhaW5lclwiLFxyXG59KTtcclxuY29uc3QgRWRpdFBvcHVwID0gbmV3IFBvcHVwV2l0aEZvcm0oXHJcbiAgXCIucG9wdXAtYm94X3R5cGVfcHJvZmlsZS1lZGl0XCIsXHJcbiAgaGFuZGxlU3VibWl0RWRpdFByb2ZpbGVcclxuKTtcclxuY29uc3QgQWRkUG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybShcclxuICBcIi5wb3B1cC1ib3hfdHlwZV9hZGQtaXRlbVwiLFxyXG4gIGhhbmRsZVN1Ym1pdEFkZEl0ZW1cclxuKTtcclxuY29uc3QgTmV3SW1nUG9wdXAgPSBuZXcgUG9wdXBXaXRoSW1hZ2Uoe1xyXG4gIHBvcHVwU2VsZWN0b3I6IFwiLnBvcHVwLWJveF90eXBlX2ltZ1wiLFxyXG4gIGltZ1NlbGVjdG9yOiBcIi5wb3B1cC1ib3hfX2ltZ1wiLFxyXG4gIGltZ1RpdGxlU2VsZWN0b3I6IFwiLnBvcHVwLWJveF9faW1nLXRpdGxlXCIsXHJcbn0pO1xyXG5cclxuY29uc3QgRGVsZXRlQ29uZmlybVBvcHVwID0gbmV3IFBvcHVwQ29uZmlybSh7XHJcbiAgcG9wdXBTZWxlY3RvcjogXCIucG9wdXAtYm94X3R5cGVfY29uZmlybVwiLFxyXG4gIGhhbmRsZVN1Ym1pdFJlbW92ZUNvbmZpcm0sXHJcbn0pO1xyXG5jb25zdCBwcm9maWxlVXNlciA9IG5ldyBVc2VySW5mbyh7XHJcbiAgbmFtZUVsbTogXCIucHJvZmlsZV9fbmFtZVwiLFxyXG4gIGpvYkVsbTogXCIucHJvZmlsZV9fYWJvdXQtbWVcIixcclxuICBwaWNFbG06IFwiLnByb2ZpbGVfX2F2YXRhclwiLFxyXG59KTtcclxuY29uc3QgYXBpID0gbmV3IEFwaShhcGlDb25maW5nKTtcclxuXHJcbm9uSW5pdCgpO1xyXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBTZWN0aW9uIHtcclxuICBjb25zdHJ1Y3Rvcih7cmVuZGVyZXIsIGNvbnRhaW5lclNlbGVjdG9yfSkge1xyXG4gICAgdGhpcy5fcmVuZGVyZXIgPSByZW5kZXJlcjtcclxuICAgIHRoaXMuX2NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoY29udGFpbmVyU2VsZWN0b3IpO1xyXG4gIH1cclxuXHJcbiAgcmVuZGVySXRlbXMoKSB7XHJcbiAgICB0aGlzLl9pdGVtcy5mb3JFYWNoKChpdGVtKSA9PiB0aGlzLl9yZW5kZXJlcihpdGVtKSk7XHJcbiAgfVxyXG5cclxuICBhZGRJdGVtKGVsKSB7XHJcbiAgICB0aGlzLl9jb250YWluZXIucHJlcGVuZChlbCk7XHJcbiAgfVxyXG4gIHNldE5ld0l0ZW1saXN0KGl0ZW1zKSB7XHJcbiAgICB0aGlzLl9pdGVtcyA9IGl0ZW1zO1xyXG4gICAgdGhpcy5yZW5kZXJJdGVtcygpO1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEltYWdlIGV4dGVuZHMgUG9wdXAge1xyXG4gIGNvbnN0cnVjdG9yKHsgcG9wdXBTZWxlY3RvciwgaW1nU2VsZWN0b3IsIGltZ1RpdGxlU2VsZWN0b3IgfSkge1xyXG4gICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XHJcbiAgICB0aGlzLl9pbWdFbGVtZW50ID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoaW1nU2VsZWN0b3IpO1xyXG4gICAgdGhpcy5fdGl0bGVFbGVtZW50ID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoaW1nVGl0bGVTZWxlY3Rvcik7XHJcbiAgfVxyXG5cclxuICBfc2V0UG9wdXBJbWcoKSB7XHJcbiAgICB0aGlzLl90aXRsZUVsZW1lbnQudGV4dENvbnRlbnQgPSB0aGlzLnRpdGxlO1xyXG4gICAgdGhpcy5faW1nRWxlbWVudC5zcmMgPSB0aGlzLl9saW5rO1xyXG4gICAgdGhpcy5faW1nRWxlbWVudC5hbHQgPSBgYSBwaWN0cnVlIG9mICR7dGhpcy50aXRsZX1gO1xyXG4gIH1cclxuXHJcbiAgb3Blbih0aXRsZSwgbGluaykge1xyXG4gICAgdGhpcy50aXRsZSA9IHRpdGxlO1xyXG4gICAgdGhpcy5fbGluayA9IGxpbms7XHJcbiAgICB0aGlzLl9zZXRQb3B1cEltZygpO1xyXG4gICAgc3VwZXIub3BlbigpO1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXBcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwQ29uZmlybSBleHRlbmRzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3Rvcih7IHBvcHVwU2VsZWN0b3IsIGhhbmRsZVN1Ym1pdFJlbW92ZUNvbmZpcm0gfSkge1xyXG4gICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XHJcbiAgICB0aGlzLl9oYW5kbGVTdWJtaXRSZW1vdmVDb25maXJtID0gaGFuZGxlU3VibWl0UmVtb3ZlQ29uZmlybTtcclxuICAgIHRoaXMuX3N1Ym1pdEJ0bkVsZW1lbnQgPSB0aGlzLl9wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcihcclxuICAgICAgXCIucG9wdXAtYm94X19zdWJtaXQtYnV0dG9uXCJcclxuICAgICk7XHJcbiAgfVxyXG4gIG9wZW4oaWQsIGVsZW1lbnQpIHtcclxuICAgIHN1cGVyLm9wZW4oKTtcclxuICAgIHRoaXMuX2VsZW1lbnQgPSBlbGVtZW50O1xyXG4gICAgdGhpcy5faWQgPSBpZDtcclxuICB9XHJcbiAgY2xvc2UoKSB7XHJcbiAgICBzdXBlci5jbG9zZSgpO1xyXG5cclxuICB9XHJcbiAgX2hhbmRsZUNvbmZpcm1TdWJtaXQgPSAoZSkgPT4ge1xyXG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgdGhpcy5faGFuZGxlU3VibWl0UmVtb3ZlQ29uZmlybSh0aGlzLl9pZCwgdGhpcy5fZWxlbWVudCk7XHJcbiAgICB0aGlzLmNsb3NlKCk7XHJcbiAgfTtcclxuXHJcbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICB0aGlzLl9zdWJtaXRCdG5FbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0aGlzLl9oYW5kbGVDb25maXJtU3VibWl0KTtcclxuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgfVxyXG59XHJcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFVzZXJJbmZvIHtcclxuICBjb25zdHJ1Y3Rvcih7IG5hbWVFbG0sIGpvYkVsbSwgcGljRWxtIH0pIHtcclxuICAgIHRoaXMuX25hbWVFbG0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKG5hbWVFbG0pO1xyXG4gICAgdGhpcy5fam9iRWxtID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihqb2JFbG0pO1xyXG4gICAgdGhpcy5fcGljRWxtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihwaWNFbG0pO1xyXG4gICAgcGljRWxtO1xyXG4gIH1cclxuXHJcbiAgc2V0VXNlckluZm8oeyBuYW1lLCBhYm91dCwgX2lkIH0pIHtcclxuICAgIHRoaXMuX25hbWVFbG0udGV4dENvbnRlbnQgPSBuYW1lO1xyXG4gICAgdGhpcy5fam9iRWxtLnRleHRDb250ZW50ID0gYWJvdXQ7XHJcbiAgICB0aGlzLnVzZXJJZCA9IF9pZDtcclxuICB9XHJcbiAgZ2V0VXNlckluZm8oKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBuYW1lSW5mbzogdGhpcy5fbmFtZUVsbS50ZXh0Q29udGVudCxcclxuICAgICAgYWJvdXRNZUluZm86IHRoaXMuX2pvYkVsbS50ZXh0Q29udGVudCxcclxuICAgICAgXHJcbiAgICB9O1xyXG4gIH1cclxuICBnZXRVc2VySWQoKSB7XHJcbiAgICByZXR1cm4gdGhpcy51c2VySWRcclxuICB9XHJcbiAgc2V0UGljdHVyZVByb2ZpbGUocGljU3JjKSB7XHJcbiAgICB0aGlzLl9waWNFbG0uc3JjID0gcGljU3JjO1xyXG4gIH1cclxufVxyXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBBcGkge1xyXG4gIGNvbnN0cnVjdG9yKHsgYmFzZVVybCwgaGVhZGVycyB9KSB7XHJcbiAgICB0aGlzLmhlYWRlcnMgPSBoZWFkZXJzO1xyXG4gICAgdGhpcy5iYXNlVXJsID0gYmFzZVVybDtcclxuICB9XHJcbiAgX29uSHR0cFJlcXVlc3QodXJsLCBtZXRob2QsIGRhdGEpIHtcclxuICAgIGNvbnN0IGZ1bGxVcmwgPSBgJHt0aGlzLmJhc2VVcmx9JHt1cmx9YDtcclxuICAgIHJldHVybiBmZXRjaChmdWxsVXJsLCB7XHJcbiAgICAgIG1ldGhvZCxcclxuICAgICAgaGVhZGVyczogdGhpcy5oZWFkZXJzLFxyXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShkYXRhKSxcclxuICAgIH0pLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgICBpZiAocmVzLm9rKSB7XHJcbiAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9XHJcbiAgZ2V0SW5pdEluZm8oKSB7XHJcbiAgICByZXR1cm4gUHJvbWlzZS5hbGwoW3RoaXMuX2dldEluaXRpYWxDYXJkcygpLCB0aGlzLl9nZXRVc2VySW5mbygpXSk7XHJcbiAgfVxyXG4gIF9nZXRVc2VySW5mbygpIHtcclxuICAgIHJldHVybiB0aGlzLl9vbkh0dHBSZXF1ZXN0KFwidXNlcnMvbWVcIiwgXCJHRVRcIik7XHJcbiAgfVxyXG4gIF9nZXRJbml0aWFsQ2FyZHMoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5fb25IdHRwUmVxdWVzdChcImNhcmRzXCIsIFwiR0VUXCIpO1xyXG4gIH1cclxuIFxyXG4gIHNldFVzZXJJbmZvKHtuYW1lLGFib3V0fSkge1xyXG4gICAgcmV0dXJuIHRoaXMuX29uSHR0cFJlcXVlc3QoXCJ1c2Vycy9tZVwiLCBcIlBBVENIXCIse25hbWUsYWJvdXR9KTtcclxuICB9XHJcbiAgYWRkTmV3Q2FyZCh7bmFtZSxsaW5rfSkge1xyXG4gICAgcmV0dXJuIHRoaXMuX29uSHR0cFJlcXVlc3QoJ2NhcmRzJywnUE9TVCcse25hbWUsbGlua30pXHJcbiAgfVxyXG4gIG9uUmVtb3ZlSXRlbShpZCkge1xyXG4gICAgcmV0dXJuIHRoaXMuX29uSHR0cFJlcXVlc3QoYGNhcmRzLyR7aWR9YCwnREVMRVRFJylcclxuICB9XHJcbn1cclxuIiwiY29uc3QgYXBpQ29uZmluZyA9IHtcclxuICBiYXNlVXJsOiBcImh0dHBzOi8vYXJvdW5kLm5vbW9yZXBhcnRpZXMuY28vdjEvZ3JvdXAtMTIvXCIsXHJcbiAgaGVhZGVyczoge1xyXG4gIGF1dGhvcml6YXRpb246IFwiMDM1YTNlODAtMGQzZi00MjFiLWI0ZmEtN2Y0MDZlNDlhZDVmXCIsXHJcbiAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIlxyXG4gIH1cclxufTtcclxuZXhwb3J0IHsgYXBpQ29uZmluZyB9O1xyXG4iXSwibmFtZXMiOlsiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwidW5kZWZpbmVkIiwiZXhwb3J0cyIsIm1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJwIiwiRm9ybVZhbGlkYXRvciIsImNvbnN0cnVjdG9yIiwic2V0dGluZ3MiLCJmb3JtIiwidGhpcyIsIl9mb3JtU2VsZWN0b3IiLCJmb3JtU2VsZWN0b3IiLCJfaW5wdXRTZWxlY3RvciIsImlucHV0U2VsZWN0b3IiLCJfZXJyb3JDbGFzcyIsImVycm9yQ2xhc3MiLCJfaW5hY3RpdmVCdXR0b25DbGFzcyIsImluYWN0aXZlQnV0dG9uQ2xhc3MiLCJfaW5wdXRFcnJvckNsYXNzIiwiaW5wdXRFcnJvckNsYXNzIiwiX3N1Ym1pdEJ1dHRvblNlbGVjdG9yIiwic3VibWl0QnV0dG9uU2VsZWN0b3IiLCJfZm9ybSIsIl9zZXRGb3JtTGlzdGVuZXJzIiwiX2lucHV0TGlzdCIsIkFycmF5IiwiZnJvbSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJfYnV0dG9uRWxlbWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJfdG9nZ2xlQnV0dG9uU3RhdGUiLCJmb3JFYWNoIiwiaW5wdXRFbGVtZW50IiwiYWRkRXZlbnRMaXN0ZW5lciIsIl9jaGVja0lucHV0VmFsaWRpdHkiLCJfc2hvd0lucHV0RXJyb3IiLCJlcnJvckVsZW1lbnQiLCJpZCIsImNsYXNzTGlzdCIsImFkZCIsInRleHRDb250ZW50IiwidmFsaWRhdGlvbk1lc3NhZ2UiLCJfcmVtb3ZlSW5wdXRFcnJvciIsInJlbW92ZSIsInZhbGlkaXR5IiwidmFsaWQiLCJyZXNldFZhbGlkYXRpb24iLCJidG5Gb3JtRWxtIiwiZGlzYWJsZWQiLCJyZXNldCIsIl9oYXNJbnZhbGlkSW5wdXQiLCJzb21lIiwiaW5wdXQiLCJlbmFibGVWYWxpZGF0aW9uIiwiZSIsInByZXZlbnREZWZhdWx0IiwiZ2V0UmFuZG9tU3RyaW5nIiwibGVuZ3RoIiwiZ2V0UmFuZG9tSW50IiwiY2hhcnMiLCJzcGxpdCIsIk1hdGgiLCJmbG9vciIsInJhbmRvbSIsInN0ciIsImkiLCJtaW4iLCJtYXgiLCJDYXJkIiwiZGF0YSIsImhhbmRsZUltYWdlQ2xpY2siLCJvcGVuUmVtb3ZlSXRlbVBvcHVwIiwiY2FyZEluZm8iLCJjYXJkU2VsZWN0b3IiLCJuYW1lIiwibGluayIsIl9pZCIsImxpa2VzIiwiaXNPd25lciIsImxpa2VkQnlDdXJyVXNlciIsIl9uYW1lIiwiX2xpbmsiLCJfaGFuZGxlSW1hZ2VDbGljayIsIl9vcGVuUmVtb3ZlSXRlbVBvcHVwIiwiX2NhcmRTZWxlY3RvciIsIl9saWtlcyIsIl9pc093bmVyIiwiX2xpa2VkQnlDdXJyVXNlciIsIl9nZXRUZW1wbGF0ZSIsImRvY3VtZW50IiwiY29udGVudCIsImNsb25lTm9kZSIsIl9oYW5kbGVUb2dnbGVMaWtlZEJ0biIsInN0b3BQcm9wYWdhdGlvbiIsIl9wbGFjZUxpa2VCdG4iLCJ0b2dnbGUiLCJfaGFuZGxlUmVtb3ZlSXRlbSIsIl9jYXJkSXRlbSIsIl9zZXRFdmVudExpc3RlbmVycyIsImdlbmVyYXRlQ2FyZCIsIl9wbGFjZUltZyIsIl9wbGFjZVJlbW92ZUJ0biIsInN0eWxlIiwiYmFja2dyb3VuZEltYWdlIiwiYWx0IiwiUG9wdXAiLCJwb3B1cFNlbGVjdG9yIiwia2V5IiwiY2xvc2UiLCJfcG9wdXBFbGVtZW50Iiwib3BlbiIsIl9oYW5kbGVFc2NDbG9zZSIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJzZXRFdmVudExpc3RlbmVycyIsInRhcmdldCIsImNvbnRhaW5zIiwiUG9wdXBXaXRoRm9ybSIsImhhbmRsZVN1Ym1pdEZyb20iLCJzdXBlciIsIl9oYW5kbGVTdWJtaXRGcm9tIiwiX3JldHVybklucHV0VmFsT2JqIiwiX2Zvcm1FbGVtZW50IiwidmFsSW5wdXRPYmoiLCJpdGVtIiwidmFsdWUiLCJfaGFuZGxlRm9ybVN1Ym1pdCIsImZvcm1WYWxpZGF0b3JzIiwib3BlbkVkaXRVc2VyUG9wdXBCdG4iLCJvcGVuQWRkUGxhY2VzUG9wdXBCdG4iLCJuYW1lSW5wdXQiLCJhYm91dE1lSW5wdXQiLCJvcGVuQWRkUHJvZmlsZVBvcHVwIiwiQWRkUG9wdXAiLCJvcGVuRWRpdFByb2ZpbGVQb3B1cCIsIkVkaXRQb3B1cCIsIm5hbWVJbmZvIiwiYWJvdXRNZUluZm8iLCJwcm9maWxlVXNlciIsImdldFVzZXJJbmZvIiwib3BlbkltZ1BvcHVwIiwidGl0bGUiLCJOZXdJbWdQb3B1cCIsImNhcmRJdGVtIiwiRGVsZXRlQ29uZmlybVBvcHVwIiwic2V0TG9hZGluZ0luaXQiLCJzdGF0dXMiLCJjYXJkSXRlbXNBcnIiLCJ1c2VySW5mbyIsInNldFVzZXJJbmZvIiwiYWJvdXQiLCJzZXRQaWN0dXJlUHJvZmlsZSIsInNwaW5uZXJHaWYiLCJjYXJkc0xpc3QiLCJzZXROZXdJdGVtbGlzdCIsIm93bmVyIiwiaW5uZXJIVE1MIiwiYXZhdGFyIiwicmVuZGVyQ2FyZCIsImNvbnNvbGUiLCJsb2ciLCJhZGRJdGVtIiwiY3JlYXRlUGxhY2VJdGVtIiwicmVuZGVyZXIiLCJjb250YWluZXJTZWxlY3RvciIsIl9yZW5kZXJlciIsIl9jb250YWluZXIiLCJyZW5kZXJJdGVtcyIsIl9pdGVtcyIsImVsIiwicHJlcGVuZCIsIml0ZW1zIiwiZ2V0VXNlcklkIiwiZmluZCIsInVzZXIiLCJuYW1lX2lucHV0IiwiYWJvdXRfbWUiLCJhcGkiLCJ0aGVuIiwicmVzIiwidGl0bGVfcGxhY2UiLCJpbWdfbGluayIsImFkZE5ld0NhcmQiLCJsaWtlZEJ5T3duZXIiLCJpbWdTZWxlY3RvciIsImltZ1RpdGxlU2VsZWN0b3IiLCJfaW1nRWxlbWVudCIsIl90aXRsZUVsZW1lbnQiLCJfc2V0UG9wdXBJbWciLCJzcmMiLCJoYW5kbGVTdWJtaXRSZW1vdmVDb25maXJtIiwiX2hhbmRsZVN1Ym1pdFJlbW92ZUNvbmZpcm0iLCJfZWxlbWVudCIsIl9zdWJtaXRCdG5FbGVtZW50IiwiZWxlbWVudCIsIl9oYW5kbGVDb25maXJtU3VibWl0Iiwib25SZW1vdmVJdGVtIiwiY2F0Y2giLCJlcnIiLCJuYW1lRWxtIiwiam9iRWxtIiwicGljRWxtIiwiX25hbWVFbG0iLCJfam9iRWxtIiwiX3BpY0VsbSIsInVzZXJJZCIsInBpY1NyYyIsImJhc2VVcmwiLCJoZWFkZXJzIiwiX29uSHR0cFJlcXVlc3QiLCJ1cmwiLCJtZXRob2QiLCJmdWxsVXJsIiwiZmV0Y2giLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsIm9rIiwianNvbiIsIlByb21pc2UiLCJyZWplY3QiLCJnZXRJbml0SW5mbyIsImFsbCIsIl9nZXRJbml0aWFsQ2FyZHMiLCJfZ2V0VXNlckluZm8iLCJhdXRob3JpemF0aW9uIiwibmV3VmFpbGQiLCJmb3JtTmFtZSJdLCJzb3VyY2VSb290IjoiIn0=