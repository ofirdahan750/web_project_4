!function(){"use strict";var e={855:function(e,t,s){e.exports=s.p+"images/spinner_svg.dc4086388e55820fbae1.svg"}},t={};function s(i){var n=t[i];if(void 0!==n)return n.exports;var o=t[i]={exports:{}};return e[i](o,o.exports,s),o.exports}s.p="",function(){class e{constructor(e,t){this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._errorClass=e.errorClass,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._submitButtonSelector=e.submitButtonSelector,this._form=t}_setFormListeners(){this._inputList=Array.from(this._form.querySelectorAll(this._inputSelector)),this._buttonElement=this._form.querySelector(this._submitButtonSelector),this._toggleButtonState(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}_showInputError(e){const t=this._form.querySelector(".".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_removeInputError(e){const t=this._form.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){e.validity.valid?this._removeInputError(e):this._showInputError(e)}resetValidation(){this._toggleButtonState(),this._inputList.forEach((e=>{this._removeInputError(e)}));const e=this._form.querySelector(".popup-box__submit-button");e.disabled=!0,e.classList.add("popup-box__submit-button_inactive"),this._form.reset()}_toggleButtonState(){this._hasInvalidInput()?(this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1)}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}enableValidation(){this._setFormListeners(),this._form.addEventListener("submit",(e=>e.preventDefault()))}}function t(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:i(),t="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghiklmnopqrstuvwxyz".split("");e||(e=Math.floor(Math.random()*t.length));let s="";for(let i=0;i<e;i++)s+=t[Math.floor(Math.random()*t.length)];return s}function i(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:100,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:150;return Math.floor(Math.random()*(t-e+1))+e}class n{constructor(e,s,i,n,o,r){const{name:l,link:a,_id:c}=e,{likes:u,isOwner:_,likedByCurrUser:p}=o;this._name=l,this._link=a,this._handleImageClick=s,this._openRemoveItemPopup=i,this._cardSelector=r,this._likes=u||[],this._isOwner=_||!1,this._isLikedByCurrUser=p,this._id=c||t(),this._handleLikedToggle=n}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".places__item").cloneNode(!0)}_handleToggleLikedBtn(e){e.stopPropagation(),this._isLikedByCurrUser=!this._isLikedByCurrUser,this._isLikedByCurrUser?this._placeLikeBtn.classList.add("places__like-btn__active"):this._placeLikeBtn.classList.remove("places__like-btn__active"),this._handleLikedToggle(this._isLikedByCurrUser,this,this._id)}onUpdateLikesAmount(e){e&&(this._likes=e),this._placeLikeAmount.textContent=this._likes.length}_handleRemoveItem(e){e.stopPropagation(),this._openRemoveItemPopup(this._id,this._cardItem)}_setEventListeners(){this._cardItem.addEventListener("click",(()=>{this._handleImageClick(this._name,this._link)})),this._placeLikeBtn.addEventListener("click",(e=>{this._handleToggleLikedBtn(e)})),this._cardItem.querySelector(".places__remove-btn").addEventListener("click",(e=>{this._handleRemoveItem(e)}))}generateCard(){return this._cardItem=this._getTemplate(),this._placeImg=this._cardItem.querySelector(".places__img"),this._placeLikeBtn=this._cardItem.querySelector(".places__like-btn"),this._placeLikeAmount=this._cardItem.querySelector(".places__like-counter"),this._placeRemoveBtn=this._cardItem.querySelector(".places__remove-btn"),"Loading..."!==this._name&&"images/spinner_svg.dc4086388e55820fbae1.svg"!==this._link&&this._setEventListeners(),this._isOwner||this._placeRemoveBtn.remove(),this._isLikedByCurrUser&&this._placeLikeBtn.classList.add("places__like-btn__active"),this._placeImg.style.backgroundImage="url(".concat(this._link,")"),this._placeImg.alt="a photo of ".concat(this._name),this._cardItem.querySelector(".places__name").textContent="".concat(this._name),this.onUpdateLikesAmount(),this._cardItem}}function o(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class r{constructor(e){o(this,"_handleEscClose",(e=>{"Escape"==e.key&&this.close()})),o(this,"_handleContextMenu",(e=>{e.preventDefault()})),this._popupElement=document.querySelector(e)}open(){this._popupElement.classList.add("popup-box_visible"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("popup-box_visible"),document.removeEventListener("keydown",this._handleEscClose)}setEventListeners(){this._popupElement.addEventListener("mousedown",(e=>{(e.target.classList.contains("popup-box_visible")||e.target.classList.contains("popup-box__close-button"))&&this.close()}))}}class l extends r{constructor(e,t){var s,i;super(e),i=e=>{e.preventDefault(),this._handleSubmitFrom(this._returnInputValObj()),this.close()},(s="_handleFormSubmit")in this?Object.defineProperty(this,s,{value:i,enumerable:!0,configurable:!0,writable:!0}):this[s]=i,this._handleSubmitFrom=t,this._formElement=this._popupElement.querySelector(".popup-box__form"),this._inputList=[...this._formElement.querySelectorAll(".popup-box__input")]}_returnInputValObj(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}open(){super.open()}close(){super.close(),this._formElement.reset()}setEventListeners(){this._formElement.addEventListener("submit",this._handleFormSubmit),super.setEventListeners()}}var a=s(855);const c={},u=document.querySelector(".profile__edit-btn"),_=document.querySelector(".profile__add-btn"),p=document.querySelector('input[name="name_input"]'),m=document.querySelector('input[name="about_me"]');function h(){c["form_add-place"].resetValidation(),I.open()}function d(){c["form_profile-edit"].resetValidation(),k.open();const{nameInfo:e,aboutMeInfo:t}=C.getUserInfo();p.value=e,m.value=t}function b(e,t){S.open(e,t)}function f(e,t){y.open(e,t)}function v(e,t,s){e?x.addItemLike(s).then((e=>{t.onUpdateLikesAmount(e.likes)})).catch((e=>console.log("err: "+e))):x.removeItemLike(s).then((e=>{t.onUpdateLikesAmount(e.likes)})).catch((e=>console.log("err: "+e)))}function E(e,s,i){e?(C.setUserInfo({name:"Loading...",about:"Loading...",_id:t()}),C.setPictureProfile(a),L.setNewItemlist([{name:"Loading...",link:a,owner:{_id:t()},likes:[]}])):(document.querySelector(".places__grid-container").innerHTML="",C.setUserInfo({name:i.name,about:i.about,_id:i._id}),C.setPictureProfile(i.avatar),L.setNewItemlist(s))}function g(e,t){L.addItem(function(e,t){return new n(e,b,f,v,t,"#places-item-template").generateCard()}(e,t))}const L=new class{constructor(e){let{renderer:t,containerSelector:s}=e;this._renderer=t,this._container=document.querySelector(s)}renderItems(){this._items.forEach((e=>this._renderer(e)))}addItem(e){this._container.prepend(e)}setNewItemlist(e){this._items=e,this.renderItems()}}({renderer:e=>{const{owner:t,likes:s}=e,i=C.getUserId();g(e,{isOwner:t._id===i,likedByCurrUser:s.some((e=>e._id===i)),likes:s})},containerSelector:".places__grid-container"}),k=new l(".popup-box_type_profile-edit",(function(e){let{name_input:t,about_me:s}=e;c["form_add-place"].resetValidation(),x.setUserInfo({name:t,about:s}).then((e=>{C.setUserInfo(e)}))})),I=new l(".popup-box_type_add-item",(function(e){let{title_place:t,img_link:s}=e;x.addNewCard({name:t,link:s}).then((e=>{g(e,{isOwner:!0,likedByOwner:!1,likes:[]})}))})),S=new class extends r{constructor(e){let{popupSelector:t,imgSelector:s,imgTitleSelector:i}=e;super(t),this._imgElement=this._popupElement.querySelector(s),this._titleElement=this._popupElement.querySelector(i)}_setPopupImg(){this._titleElement.textContent=this.title,this._imgElement.src=this._link,this._imgElement.alt="a pictrue of ".concat(this.title)}open(e,t){this.title=e,this._link=t,this._setPopupImg(),super.open()}}({popupSelector:".popup-box_type_img",imgSelector:".popup-box__img",imgTitleSelector:".popup-box__img-title"}),y=new class extends r{constructor(e){let{popupSelector:t,handleSubmitRemoveConfirm:s}=e;var i,n;super(t),n=e=>{e.preventDefault(),this._handleSubmitRemoveConfirm(this._id,this._element),this.close()},(i="_handleConfirmSubmit")in this?Object.defineProperty(this,i,{value:n,enumerable:!0,configurable:!0,writable:!0}):this[i]=n,this._handleSubmitRemoveConfirm=s,this._submitBtnElement=this._popupElement.querySelector(".popup-box__submit-button")}open(e,t){super.open(),this._element=t,this._id=e}close(){super.close()}setEventListeners(){this._submitBtnElement.addEventListener("click",this._handleConfirmSubmit),super.setEventListeners()}}({popupSelector:".popup-box_type_confirm",handleSubmitRemoveConfirm:function(e,t){x.onRemoveItem(e).then((()=>{t.remove()})).catch((e=>console.log("err: "+e)))}}),C=new class{constructor(e){let{nameElm:t,jobElm:s,picElm:i}=e;this._nameElm=document.querySelector(t),this._jobElm=document.querySelector(s),this._picElm=document.querySelector(i)}setUserInfo(e){let{name:t,about:s,_id:i}=e;this._nameElm.textContent=t,this._jobElm.textContent=s,this.userId=i}getUserInfo(){return{nameInfo:this._nameElm.textContent,aboutMeInfo:this._jobElm.textContent}}getUserId(){return this.userId}setPictureProfile(e){this._picElm.src=e}}({nameElm:".profile__name",jobElm:".profile__about-me",picElm:".profile__avatar"}),x=new class{constructor(e){let{baseUrl:t,headers:s}=e;this.headers=s,this.baseUrl=t}_onHttpRequest(e,t,s){const i="".concat(this.baseUrl).concat(e);return fetch(i,{method:t,headers:this.headers,body:JSON.stringify(s)}).then((e=>e.ok?e.json():Promise.reject("Error: ".concat(e.status))))}getInitInfo(){return Promise.all([this._getInitialCards(),this._getUserInfo()])}_getUserInfo(){return this._onHttpRequest("users/me","GET")}_getInitialCards(){return this._onHttpRequest("cards","GET")}setUserInfo(e){let{name:t,about:s}=e;return this._onHttpRequest("users/me","PATCH",{name:t,about:s})}addNewCard(e){let{name:t,link:s}=e;return this._onHttpRequest("cards","POST",{name:t,link:s})}onRemoveItem(e){return this._onHttpRequest("cards/".concat(e),"DELETE")}addItemLike(e){return this._onHttpRequest("cards/likes/".concat(e),"PUT")}removeItemLike(e){return this._onHttpRequest("cards/likes/".concat(e),"DELETE")}}({baseUrl:"https://around.nomoreparties.co/v1/group-12/",headers:{authorization:"035a3e80-0d3f-421b-b4fa-7f406e49ad5f","Content-Type":"application/json"}});E(!0),x.getInitInfo().then((t=>{let[s,i]=t;var n;E(!1,s,i),u.addEventListener("click",d),_.addEventListener("click",h),n={formSelector:".popup-box__form",inputSelector:".popup-box__input",submitButtonSelector:".popup-box__submit-button",inactiveButtonClass:"popup-box__submit-button_inactive",inputErrorClass:".popup-box__input_type_error",errorClass:".popup-box__input-error_active"},Array.from(document.querySelectorAll(n.formSelector)).forEach((t=>{const s=new e(n,t),i=t.name;c[i]=s,s.enableValidation()})),k.setEventListeners(),I.setEventListeners(),S.setEventListeners(),y.setEventListeners()})).catch((e=>{console.log(e)}))}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,